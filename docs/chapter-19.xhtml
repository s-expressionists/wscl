<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="style.css"/><script src="permalink.js"/><script src="navigation.js"/><title>Well-specified Common Lisp â€” Filenames</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">Filenames</span><br/><ol class="local-toc"><li><a href="#section-NamingFiles">Overview of Filenames</a><ol> <li><a href="#section-NamestringsasFilenames">Namestrings as Filenames</a><ol> </ol></li><li><a href="#section-PathnamesAsFilenames">Pathnames as Filenames</a><ol> </ol></li><li><a href="#section-ParsingNamestringsIntoPathnames">Parsing Namestrings Into Pathnames</a><ol> </ol></li></ol></li><li><a href="#section-PathnameConcepts">Pathnames</a><ol> <li><a href="#section-PathnameComponents">Pathname Components</a><ol> <li><a href="#section-ThePathnameHostComponent">The Pathname Host Component</a><ol> </ol></li><li><a href="#section-ThePathnameDeviceComponent">The Pathname Device Component</a><ol> </ol></li><li><a href="#section-ThePathnameDirectoryComponent">The Pathname Directory Component</a><ol> </ol></li><li><a href="#section-ThePathnameNameComponent">The Pathname Name Component</a><ol> </ol></li><li><a href="#section-ThePathnameTypeComponent">The Pathname Type Component</a><ol> </ol></li><li><a href="#section-ThePathnameVersionComponent">The Pathname Version Component</a><ol> </ol></li></ol></li><li><a href="#section-InterpretingPathnameComponentValues">Interpreting Pathname Component Values</a><ol> <li><a href="#section-StringsinComponentValues">Strings in Component Values</a><ol> <li><a href="#section-SpecialCharactersinPathnameComponents">Special Characters in Pathname Components</a><ol> </ol></li><li><a href="#section-PathnameComponentCase">Case in Pathname Components</a><ol> <li><a href="#section-LocalCaseinPathnameComponents">Local Case in Pathname Components</a><ol> </ol></li><li><a href="#section-CommonCaseinPathnameComponents">Common Case in Pathname Components</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-SpecialComponentValues">Special Pathname Component Values</a><ol> <li><a href="#section-NILasaComponentValue">NIL as a Component Value</a><ol> </ol></li><li><a href="#section-WildComponents">:WILD as a Component Value</a><ol> </ol></li><li><a href="#section-UnspecificComponent">:UNSPECIFIC as a Component Value</a><ol> <li><a href="#section-RelationbetweencomponentvaluesNILand:UNSPECIFIC">Relation between component values NIL and :UNSPECIFIC</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-WildcardRestrictions">Restrictions on Wildcard Pathnames</a><ol> </ol></li><li><a href="#section-RestrictionsonExaminingPathnameComponents">Restrictions on Examining Pathname Components</a><ol> <li><a href="#section-RestrictionsonExaminingaPathnameHostComponent">Restrictions on Examining a Pathname Host Component</a><ol> </ol></li><li><a href="#section-RestrictionsonExaminingaPathnameDeviceComponent">Restrictions on Examining a Pathname Device Component</a><ol> </ol></li><li><a href="#section-RestrictionsonExaminingaPathnameDirectoryComponent">Restrictions on Examining a Pathname Directory Component</a><ol> <li><a href="#section-DirectoryComponentsinNon-HierarchicalFileSystems">Directory Components in Non-Hierarchical File Systems</a><ol> </ol></li></ol></li><li><a href="#section-RestrictionsonExaminingaPathnameNameComponent">Restrictions on Examining a Pathname Name Component</a><ol> </ol></li><li><a href="#section-RestrictionsonExaminingaPathnameTypeComponent">Restrictions on Examining a Pathname Type Component</a><ol> </ol></li><li><a href="#section-RestrictionsonExaminingaPathnameVersionComponent">Restrictions on Examining a Pathname Version Component</a><ol> </ol></li><li><a href="#section-NotesaboutthePathnameVersionComponent">Notes about the Pathname Version Component</a><ol> </ol></li></ol></li><li><a href="#section-ConstructingPathnames">Restrictions on Constructing Pathnames</a><ol> </ol></li></ol></li><li><a href="#section-MergingPathnames">Merging Pathnames</a><ol> <li><a href="#section-ExamplesofMergingPathnames">Examples of Merging Pathnames</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-LogicalPathnames">Logical Pathnames</a><ol> <li><a href="#section-LogPathNamestrings">Syntax of Logical Pathname Namestrings</a><ol> <li><a href="#section-AdditionalInformationaboutParsingLogicalPathnameNamestrings">Additional Information about Parsing Logical Pathname Namestrings</a><ol> <li><a href="#section-TheHostpartofaLogicalPathnameNamestring">The Host part of a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-TheDevicepartofaLogicalPathnameNamestring">The Device part of a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-TheDirectorypartofaLogicalPathnameNamestring">The Directory part of a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-TheTypepartofaLogicalPathnameNamestring">The Type part of a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-TheVersionpartofaLogicalPathnameNamestring">The Version part of a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-WildcardWordsinaLogicalPathnameNamestring">Wildcard Words in a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-LowercaseLettersinaLogicalPathnameNamestring">Lowercase Letters in a Logical Pathname Namestring</a><ol> </ol></li><li><a href="#section-OtherSyntaxinaLogicalPathnameNamestring">Other Syntax in a Logical Pathname Namestring</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-LogicalPathnameComponents">Logical Pathname Components</a><ol> <li><a href="#section-LogicalPathCompUnspecific">Unspecific Components of a Logical Pathname</a><ol> </ol></li><li><a href="#section-NullStringsasComponentsofaLogicalPathname">Null Strings as Components of a Logical Pathname</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-Dictionary">Dictionary</a><ol> <li><a href="#type-pathname">pathname</a></li><li><a href="#type-logical-pathname">logical-pathname</a></li><li><a href="#function-pathname">pathname</a></li><li><a href="#function-make-pathname">make-pathname</a></li><li><a href="#function-pathnamep">pathnamep</a></li><li><a href="#function-pathname-host">pathname-host, pathname-device, pathname-directory, pathname-name, pathname-type, pathname-version</a></li><li><a href="#function-load-logical-pathname-translations">load-logical-pathname-translations</a></li><li><a href="#function-logical-pathname-translations">logical-pathname-translations</a></li><li><a href="#function-logical-pathname">logical-pathname</a></li><li><a href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a></li><li><a href="#function-namestring">namestring, file-namestring, directory-namestring, host-namestring, enough-namestring</a></li><li><a href="#function-parse-namestring">parse-namestring</a></li><li><a href="#function-wild-pathname-p">wild-pathname-p</a></li><li><a href="#function-pathname-match-p">pathname-match-p</a></li><li><a href="#function-translate-logical-pathname">translate-logical-pathname</a></li><li><a href="#function-translate-pathname">translate-pathname</a></li><li><a href="#function-merge-pathnames">merge-pathnames</a></li></ol></li></ol></nav><div class="content"><section id="section-ChapNineteen"><h1 class="section-title">19. Filenames</h1><section id="section-NamingFiles"><h2 class="section-title">Overview of Filenames</h2>

There are many kinds of <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>,
varying widely both in their superficial syntactic details,
		and in their underlying power and structure.
The facilities provided by <span class="explicit-roman">Common Lisp</span> for referring to and manipulating <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">files</a>
has been chosen to be compatible with many kinds of <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>,
while at the same time minimizing the program-visible differences 
between kinds of <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>.<br/>Since <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a> vary in their conventions for naming <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">files</a>,
there are two distinct ways to represent <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a>:
as <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a> and as <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>.<br/><section id="section-NamestringsasFilenames"><h3 class="section-title">Namestrings as Filenames</h3>A <span class="newterm">namestring</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> that represents a <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filename</a>.<br/>In general, the syntax of <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a> involves the use of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> conventions, 
usually those customary for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> in which the named <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a> resides.
The only exception is the syntax of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>,
which is defined in this specification; see <span class="section-reference error">section:LogPathNamestrings.</span>
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> must never unconditionally use a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-literal">literal</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> other than a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
because <span class="explicit-roman">Common Lisp</span> does not define any <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> syntax 
other than that for <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathnames</a>
that would be guaranteed to be portable.
However, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> can, if it is careful, 
successfully manipulate user-supplied data 
which contains or refers to non-portable <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> can be <a class="glossary-reference" href="chapter-26.xhtml#glossary-coerce">coerced</a> to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> <a class="function-reference" href="#function-pathname">pathname</a>
or <a class="function-reference" href="#function-parse-namestring">parse-namestring</a>.

</section><section id="section-PathnamesAsFilenames"><h3 class="section-title">Pathnames as Filenames</h3><br/>
<span class="newterm">Pathnames</span> are structured <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that can represent,
in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-independent">implementation-independent</a> way,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a> that are used natively by an underlying <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>.<br/>In addition, <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a> can also represent certain partially composed 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a> for which an underlying <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> 
might not have a specific <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> representation.<br/>
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> need not correspond to any file that actually exists, 
and more than one <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> can refer to the same file.
For example, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> with a version of <span class="keyword">:newest</span> 
might refer to the same file as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> 
with the same components except a certain number as the version.
Indeed, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> with version <span class="keyword">:newest</span> might refer to
different files as time passes, because the meaning of such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>
depends on the state of the file system.  <br/>Some <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a> naturally use a structural model for their
<a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a>, while others do not.  Within the <span class="explicit-roman">Common Lisp</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> model, 
all <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a> are seen as having a particular structure,
even if that structure is not reflected in the underlying <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>.
The nature of the mapping between structure imposed by <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>
and the structure, if any, that is used by the underlying <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>
is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.<br/>
Every <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> has six components:
     a host,
     a device,
     a directory,
     a name,
     a type,
 and a version.
By naming <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">files</a> with <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>, 
<span class="explicit-roman">Common Lisp</span> programs can work in essentially the same way even in <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>
that seem superficially quite different.
For a detailed description of these components, see <span class="section-reference error">section:PathnameComponents.</span><br/>The mapping of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> components into the concepts peculiar to
each <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.
There exist conceivable <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>
for which there is no mapping to a syntactically valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filename</a>
in a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a>.
An <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> may use various strategies in an attempt to find a mapping;
for example, 
an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> may quietly truncate <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a>
that exceed length limitations imposed by the underlying <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>,
or ignore certain <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> components
for which the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> provides no support.
If such a mapping cannot be found,
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a> is signaled.<br/>The time at which this mapping and associated error signaling 
occurs is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.
Specifically, it may occur 
    at the time the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is constructed,
    when coercing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>,
 or when an attempt is made to <a class="glossary-reference" href="chapter-26.xhtml#glossary-open">open</a> or otherwise access the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a> 
     designated by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.

Figure <span class="explicit-mono">()</span>&ndash; lists some <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> that are applicable to <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>.<br/><span class="float" id="figure-Pathname Operations"><table><tbody><tr><td><a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a></td><td><a class="function-reference" href="#function-namestring">namestring</a></td><td><a class="function-reference" href="#function-pathname-name">pathname-name</a></td></tr><tr><td><a class="function-reference" href="#function-directory-namestring">directory-namestring</a></td><td><a class="function-reference" href="chapter-21.xhtml#function-open">open</a></td><td><a class="function-reference" href="#function-pathname-type">pathname-type</a></td></tr><tr><td><a class="function-reference" href="#function-enough-namestring">enough-namestring</a></td><td><a class="function-reference" href="#function-parse-namestring">parse-namestring</a></td><td><a class="function-reference" href="#function-pathname-version">pathname-version</a></td></tr><tr><td><a class="function-reference" href="#function-file-namestring">file-namestring</a></td><td><a class="function-reference" href="#function-pathname">pathname</a></td><td><a class="function-reference" href="#function-pathnamep">pathnamep</a></td></tr><tr><td><a class="function-reference" href="chapter-21.xhtml#function-file-string-length">file-string-length</a></td><td><a class="function-reference" href="#function-pathname-device">pathname-device</a></td><td><a class="function-reference" href="#function-translate-pathname">translate-pathname</a></td></tr><tr><td><a class="function-reference" href="#function-host-namestring">host-namestring</a></td><td><a class="function-reference" href="#function-pathname-directory">pathname-directory</a></td><td><a class="function-reference" href="chapter-20.xhtml#function-truename">truename</a></td></tr><tr><td><a class="function-reference" href="#function-make-pathname">make-pathname</a></td><td><a class="function-reference" href="#function-pathname-host">pathname-host</a></td><td><a class="function-reference" href="chapter-25.xhtml#function-user-homedir-pathname">user-homedir-pathname</a></td></tr><tr><td><a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a></td><td><a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a></td><td><a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a></td></tr></tbody></table><div class="caption">Pathname Operations</div></span>
</section><section id="section-ParsingNamestringsIntoPathnames"><h3 class="section-title">Parsing Namestrings Into Pathnames</h3>Parsing is the operation used to convert a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> into a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.
Except in the case of parsing <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a>,
this operation is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>,
because the format of <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming implementation">conforming implementation</a> is free to accommodate other <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>
features in its <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> representation and provides a parser that can process 
such specifications in <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a>.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">Conforming programs</a> must not depend on any such features, 
since those features will not be portable.<br/></section>
</section><section id="section-PathnameConcepts"><h2 class="section-title">Pathnames</h2>

<section id="section-PathnameComponents"><h3 class="section-title">Pathname Components</h3><br/>
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> has six components:
     a host,
     a device,
     a directory,
     a name,
     a type,
 and a version.<br/>
<section id="section-ThePathnameHostComponent"><h4 class="section-title">The Pathname Host Component</h4>The name of the file system on which the file resides,
or the name of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a>.<br/>
</section><section id="section-ThePathnameDeviceComponent"><h4 class="section-title">The Pathname Device Component</h4>Corresponds to the ``device'' or ``file structure'' concept in many
host file systems: the name of a logical or physical device containing files.<br/>
</section><section id="section-ThePathnameDirectoryComponent"><h4 class="section-title">The Pathname Directory Component</h4>Corresponds to the ``directory'' concept in many host file systems:
the name of a group of related files.<br/>
</section><section id="section-ThePathnameNameComponent"><h4 class="section-title">The Pathname Name Component</h4>The ``name'' part of a group of <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">files</a> that can be thought of
as conceptually related.<br/>
</section><section id="section-ThePathnameTypeComponent"><h4 class="section-title">The Pathname Type Component</h4>Corresponds to the ``filetype'' or ``extension'' concept in many host
file systems.  This says what kind of file this is.  
This component is always a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, <span class="keyword">:wild</span>, or <span class="keyword">:unspecific</span>.<br/>
</section><section id="section-ThePathnameVersionComponent"><h4 class="section-title">The Pathname Version Component</h4>Corresponds to the ``version number'' concept in many host file systems.<br/>The version is either a positive <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integer</a> 
or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> from the following list:
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, <span class="keyword">:wild</span>, <span class="keyword">:unspecific</span>, or <span class="keyword">:newest</span>
(refers to the largest version number that already exists in 
the file system when reading a file, or to
a version number
greater than any already existing in the file system
when writing a new file).  Implementations 
can define other special version <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a>.<br/>
</section></section><section id="section-InterpretingPathnameComponentValues"><h3 class="section-title">Interpreting Pathname Component Values</h3><section id="section-StringsinComponentValues"><h4 class="section-title">Strings in Component Values</h4>
<section id="section-SpecialCharactersinPathnameComponents"><h5 class="section-title">Special Characters in Pathname Components</h5><a class="glossary-reference" href="chapter-26.xhtml#glossary-string">Strings</a> in <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component values 
never contain special <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">characters</a> that represent
separation between <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> fields, 
such as <a class="glossary-reference" href="chapter-26.xhtml#glossary-slash">slash</a> in <span class="explicit-roman">Unix</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a>.
Whether separator <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">characters</a> are permitted as 
part of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component
is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>; 
however, if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> does permit it, 
it must arrange to properly ``quote'' the character for the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> when constructing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>.
For example,<br/><pre><code><span class="syntax-root"> ;; In a TOPS-20 implementation, which uses {\hat}V to quote 
 <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"OZ"</span> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"&lt;TEST&gt;"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"OZ:PS:^V&lt;TEST^V&gt;"</span></span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>not<mi>â†’</mi></mover></math> <span class="syntax-pathname">#P<span class="syntax-string">"OZ:PS:&lt;TEST&gt;"</span></span>
</span></code></pre><br/> 
</section>
<section id="section-PathnameComponentCase"><h5 class="section-title">Case in Pathname Components</h5><br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">Namestrings</a> always use local file system <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a> conventions, 
but <span class="explicit-roman">Common Lisp</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> that manipulate <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> components
allow the caller to select either of two conventions for representing
<a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a> in component values by supplying a value for the
<span class="keyword">:case</span> keyword argument.
Figure <span class="explicit-mono">()</span>&ndash; lists the functions 
relating to <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a> that permit a <span class="keyword">:case</span> argument:<br/>
<span class="float" id="figure-PathnameCaseFuns"><table><tbody><tr><td><a class="function-reference" href="#function-make-pathname">make-pathname</a></td><td><a class="function-reference" href="#function-pathname-directory">pathname-directory</a></td><td><a class="function-reference" href="#function-pathname-name">pathname-name</a></td></tr><tr><td><a class="function-reference" href="#function-pathname-device">pathname-device</a></td><td><a class="function-reference" href="#function-pathname-host">pathname-host</a></td><td><a class="function-reference" href="#function-pathname-type">pathname-type</a></td></tr></tbody></table><div class="caption">Pathname functions using a :CASE argument</div></span><br/><section id="section-LocalCaseinPathnameComponents"><h6 class="section-title">Local Case in Pathname Components</h6>For the functions in <span class="figure-reference error">figure:PathnameCaseFuns,</span>
a value of <span class="keyword">:local</span><a id="keyword-local"></a> for the <span class="keyword">:case</span> argument 
(the default for these functions)
indicates that the functions should receive and yield <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> in component values
as if they were already represented according to the host <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>'s 
convention for <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>.<br/>If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> supports both <span class="glossary-reference error">glossary:cases</span>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> given or received
as <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component values under this protocol are to be used exactly
as written.  If the file system only supports one <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>, 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> will be translated to that <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>.<br/></section><section id="section-CommonCaseinPathnameComponents"><h6 class="section-title">Common Case in Pathname Components</h6>For the functions in <span class="figure-reference error">figure:PathnameCaseFuns,</span>
a value of <span class="keyword">:common</span><a id="keyword-common"></a> for the <span class="keyword">:case</span> argument 
that these <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> should receive 
and yield <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> in component values according to the following conventions:<br/><ul><li>All <a class="glossary-reference" href="chapter-26.xhtml#glossary-uppercase">uppercase</a> means to use a file system's customary <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>.
</li><li>All <a class="glossary-reference" href="chapter-26.xhtml#glossary-lowercase">lowercase</a> means to use the opposite of the customary <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>.
</li><li>Mixed <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a> represents itself.
</li></ul>
Note that these conventions have been chosen in such a way that translation
from <span class="keyword">:local</span> to <span class="keyword">:common</span> and back to <span class="keyword">:local</span> is information-preserving.<br/></section></section>
</section><section id="section-SpecialComponentValues"><h4 class="section-title">Special Pathname Component Values</h4><br/><section id="section-NILasaComponentValue"><h5 class="section-title">NIL as a Component Value</h5>As a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component value,
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> represents that the component is ``unfilled'';
see <span class="section-reference error">section:MergingPathnames.</span><br/>The value of any <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component can be <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>When constructing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>,
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> in the host component might mean a default host
rather than an actual <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> in some <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementations</a>.<br/></section><section id="section-WildComponents"><h5 class="section-title">:WILD as a Component Value</h5><br/>If <span class="keyword">:wild</span><a id="keyword-wild"></a> is the value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component,
that component is considered to be a wildcard, which matches anything.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> must be prepared to encounter a value of <span class="keyword">:wild</span>
as the value of any <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component,
or as an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> that is the value of the directory component.<br/>When constructing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>,
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> may use <span class="keyword">:wild</span> as the value of any or all of
the directory, name, type, 
or version component, but must not use <span class="keyword">:wild</span> as the value of the host,
or device component.<br/>If <span class="keyword">:wild</span> is used as the value of the directory component in the construction
of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, the effect is equivalent to specifying the list
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-keyword-symbol">:wild-inferiors</span>)</span>
</span></code></pre>,
or the same as <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-keyword-symbol">:wild</span>)</span>
</span></code></pre> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> that does not support
<span class="keyword">:wild-inferiors</span>.<a id="keyword-wild-inferiors"></a>
</section>
<section id="section-UnspecificComponent"><h5 class="section-title">:UNSPECIFIC as a Component Value</h5><br/>If <span class="keyword">:unspecific</span><a id="keyword-unspecific"></a> is the value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component,
the component is considered to be ``absent'' 
or to ``have no meaning''
in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filename</a> being represented by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/>Whether a value of <span class="keyword">:unspecific</span> is permitted for any component
on any given <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> accessible to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a>
is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> must never unconditionally use a
<span class="keyword">:unspecific</span> as the value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component because
such a value is not guaranteed to be permissible in all implementations.
However, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> can, if it is careful, 
successfully manipulate user-supplied data 
which contains or refers to non-portable <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> components.
And certainly a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> should be prepared for the
possibility that any components of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> could be <span class="keyword">:unspecific</span>.<br/>When <span class="glossary-reference error">glossary:reading</span><sub>1</sub> the value of any <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component,
<a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming programs</a> should be prepared for the value to be <span class="keyword">:unspecific</span>.

When <span class="glossary-reference error">glossary:writing</span><sub>1</sub> the value of any <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component,
the consequences are undefined if <span class="keyword">:unspecific</span> is given 
for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a> for which it does not make sense.
 <br/><section id="section-RelationbetweencomponentvaluesNILand:UNSPECIFIC"><h6 class="section-title">Relation between component values NIL and :UNSPECIFIC</h6>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is converted to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>, 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and <span class="keyword">:unspecific</span>
cause the field to be treated as if it were empty.
That is,
both <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and <span class="keyword">:unspecific</span> 
cause the component not to appear in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>.<br/>However, when merging a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> with a set of defaults,
only a <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> value for a component 
will be replaced with the default for that component, 
while a value of <span class="keyword">:unspecific</span>
will be left alone as if the field were ``filled'';
see the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> and <a class="section-reference" href="#section-MergingPathnames">Merging Pathnames</a>.

</section></section>
</section><section id="section-WildcardRestrictions"><h4 class="section-title">Restrictions on Wildcard Pathnames</h4><br/>  Wildcard <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a> can be used with <a class="function-reference" href="chapter-20.xhtml#function-directory">directory</a> but not with 
  <a class="function-reference" href="chapter-21.xhtml#function-open">open</a>,
  and return true from <a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a>. When examining
  wildcard components of a wildcard <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, conforming programs
  must be prepared to encounter any of the following additional values
  in any component or any element of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> that is the directory component:<br/><ul><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> <span class="keyword">:wild</span>, which matches anything.<br/></li><li>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> containing <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> 
		 special wildcard <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">characters</a>.<br/></li><li>Any <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>,
		 representing an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> wildcard pattern.<br/></li></ul> <br/></section>
<section id="section-RestrictionsonExaminingPathnameComponents"><h4 class="section-title">Restrictions on Examining Pathname Components</h4>The space of possible <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> 
must be prepared to <a class="glossary-reference" href="chapter-26.xhtml#glossary-read">read</a><sub>1</sub> 
as the value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component
is substantially larger than the space of possible <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> 
that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a> is permitted to <a class="glossary-reference" href="chapter-26.xhtml#glossary-write">write</a><sub>1</sub>
into such a component.<br/>While the values discussed 
    in the subsections of this section,
    in <a class="section-reference" href="#section-SpecialComponentValues">Special Pathname Component Values</a>,
and in <a class="section-reference" href="#section-WildcardRestrictions">Restrictions on Wildcard Pathnames</a> 
apply to values that might be seen when 
reading the component values,
substantially more restrictive rules apply to constructing pathnames;
see <span class="section-reference error">section:ConstructingPathnames.</span><br/>When examining <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> components,
<a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming programs</a> should be aware of the following restrictions.<br/>
<section id="section-RestrictionsonExaminingaPathnameHostComponent"><h5 class="section-title">Restrictions on Examining a Pathname Host Component</h5>It is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> what <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is used to represent the host. <br/></section><section id="section-RestrictionsonExaminingaPathnameDeviceComponent"><h5 class="section-title">Restrictions on Examining a Pathname Device Component</h5>The device might be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
<span class="keyword">:wild</span>, <span class="keyword">:unspecific</span>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>Note that <span class="keyword">:wild</span> might result from an attempt to <a class="glossary-reference" href="chapter-26.xhtml#glossary-read">read</a><sub>1</sub>
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component, even though portable programs are restricted
from <span class="glossary-reference error">glossary:writing</span><sub>1</sub> such a component value; 
see <a class="section-reference" href="#section-WildcardRestrictions">Restrictions on Wildcard Pathnames</a> and <a class="section-reference" href="#section-ConstructingPathnames">Restrictions on Constructing Pathnames</a>.<br/></section><section id="section-RestrictionsonExaminingaPathnameDirectoryComponent"><h5 class="section-title">Restrictions on Examining a Pathname Directory Component</h5>The directory might be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
<span class="keyword">:wild</span>, <span class="keyword">:unspecific</span>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>The directory can be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a>. 
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> is one of the symbols <span class="keyword">:absolute</span><a id="keyword-absolute"></a> or 
<span class="keyword">:relative</span><a id="keyword-relative"></a>, meaning:<br/><dl><dt><span class="keyword">:absolute</span></dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> is the symbol <span class="keyword">:absolute</span> represents 
  a directory path starting from the root directory.  The list 
  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span>)</span>
</span></code></pre> represents the root directory.  The list 
  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"foo"</span> <span class="syntax-string">"bar"</span> <span class="syntax-string">"baz"</span>)</span>
</span></code></pre> represents the directory called
  <pre><code><span class="syntax-root"><span class="syntax-string">"/foo/bar/baz"</span>
</span></code></pre> in Unix (except possibly for <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a>).<br/></dd><dt><span class="keyword">:relative</span></dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> is the symbol <span class="keyword">:relative</span> represents 
  a directory path starting from a default directory.  
  The list <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:relative</span>)</span>
</span></code></pre> has the same meaning as <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and hence is not used.
  The list <span class="explicit-mono">(:relative "foo" "bar")</span> represents the directory named <span class="explicit-mono">"bar"</span> 
  in the directory named <span class="explicit-mono">"foo"</span> in the default directory.<br/></dd></dl><br/>Each remaining element of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> names a single level of directory structure.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> should contain only the directory names 
themselves&mdash;no punctuation characters.<br/>In place of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, at any point in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> 
can occur to indicate special file notations.
Figure <span class="explicit-mono">()</span>&ndash; lists the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> that have standard meanings.
Implementations are permitted to add additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> 
of any <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> that is disjoint from <a class="type-reference" href="chapter-16.xhtml#type-string">string</a>
if necessary to represent features of their file systems that cannot be
represented with the standard <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a>.<br/>Supplying any non-<a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, including any of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> listed below, 
to a file system for which it does not make sense
signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a>.
For example, Unix does not support <span class="keyword">:wild-inferiors</span> in most implementations.<br/><a id="keyword-wild"></a><a id="keyword-wild-inferiors"></a><a id="keyword-up"></a><a id="keyword-back"></a><span class="float" id="figure-Special Markers In Directory Component"><table><thead><th>Symbol</th><th>Meaning</th></thead><tbody><tr><td><span class="keyword">:wild</span>           </td><td> Wildcard match of one level of directory structure </td></tr><tr><td><span class="keyword">:wild-inferiors</span> </td><td> Wildcard match of any number of directory levels   </td></tr><tr><td><span class="keyword">:up</span>             </td><td> Go upward in directory structure (semantic) </td></tr><tr><td><span class="keyword">:back</span>           </td><td> Go upward in directory structure (syntactic) </td></tr></tbody></table><div class="caption">Special Markers In Directory Component</div></span><br/>The following notes apply to the previous figure:<br/><dl><dt>Invalid Combinations</dt><dd>Using <span class="keyword">:absolute</span> or <span class="keyword">:wild-inferiors</span> 
immediately followed by <span class="keyword">:up</span> or <span class="keyword">:back</span>
signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a>.<br/></dd><dt>Syntactic vs Semantic</dt><dd>``Syntactic'' means that the action of <span class="keyword">:back</span> 
depends only on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>
and not on the contents of the file system.  <br/>``Semantic'' means that the action of <span class="keyword">:up</span> 
depends on the contents of the file system; 
to resolve a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> containing 
<span class="keyword">:up</span> to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> whose directory component
contains only <span class="keyword">:absolute</span> and 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> requires probing the file system.<br/><span class="keyword">:up</span> differs from 
<span class="keyword">:back</span> only in file systems that support multiple
  names for directories, perhaps via symbolic links.  For example,
  suppose that there is a directory
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"X"</span> <span class="syntax-string">"Y"</span> <span class="syntax-string">"Z"</span>)</span>
</span></code></pre>
  linked to 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"A"</span> <span class="syntax-string">"B"</span> <span class="syntax-string">"C"</span>)</span>
</span></code></pre>
  and there also exist directories
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"A"</span> <span class="syntax-string">"B"</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre> and 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"X"</span> <span class="syntax-string">"Y"</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre>.
Then
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"X"</span> <span class="syntax-string">"Y"</span> <span class="syntax-string">"Z"</span> <span class="syntax-keyword-symbol">:up</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre>
  designates
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"A"</span> <span class="syntax-string">"B"</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre>
  while
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"X"</span> <span class="syntax-string">"Y"</span> <span class="syntax-string">"Z"</span> <span class="syntax-keyword-symbol">:back</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre>
  designates
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"X"</span> <span class="syntax-string">"Y"</span> <span class="syntax-string">"Q"</span>)</span>
</span></code></pre>
</dd></dl> <br/>
<section id="section-DirectoryComponentsinNon-HierarchicalFileSystems"><h6 class="section-title">Directory Components in Non-Hierarchical File Systems</h6>In non-hierarchical <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>,
the only valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> values for the directory component of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>
are <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>)</span>
</span></code></pre> and <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-keyword-symbol">:wild</span>)</span>
</span></code></pre>.
<span class="keyword">:relative</span> directories and the keywords
<span class="keyword">:wild-inferiors</span>, <span class="keyword">:up</span>, and <span class="keyword">:back</span> are not used 
in non-hierarchical <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a>.<br/></section></section><section id="section-RestrictionsonExaminingaPathnameNameComponent"><h5 class="section-title">Restrictions on Examining a Pathname Name Component</h5>The name might be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
<span class="keyword">:wild</span>, <span class="keyword">:unspecific</span>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></section><section id="section-RestrictionsonExaminingaPathnameTypeComponent"><h5 class="section-title">Restrictions on Examining a Pathname Type Component</h5>The type might be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
<span class="keyword">:wild</span>, <span class="keyword">:unspecific</span>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></section><section id="section-RestrictionsonExaminingaPathnameVersionComponent"><h5 class="section-title">Restrictions on Examining a Pathname Version Component</h5>The version can be any <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> or any <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integer</a>.  <br/>The symbol <span class="keyword">:newest</span> refers to the largest version number 
that already exists in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>
when reading, overwriting, appending, superseding, or directory listing 
an existing <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a>.
The symbol <span class="keyword">:newest</span> refers to the smallest version number
greater than any existing version number when creating a new file.<br/>The symbols <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, <span class="keyword">:unspecific</span>, and <span class="keyword">:wild</span> have special meanings and
restrictions; see <a class="section-reference" href="#section-SpecialComponentValues">Special Pathname Component Values</a> and <a class="section-reference" href="#section-ConstructingPathnames">Restrictions on Constructing Pathnames</a>.<br/>Other <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integers</a>
have <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> meaning.<br/></section><section id="section-NotesaboutthePathnameVersionComponent"><h5 class="section-title">Notes about the Pathname Version Component</h5>It is suggested, but not required, that implementations do the following:<br/><ul><li>Use positive <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integers</a> starting at 1 as version numbers.<br/></li><li>Recognize the symbol <span class="keyword">:oldest</span>
		 to designate the smallest existing version number.<br/></li><li>Use <a class="glossary-reference" href="chapter-26.xhtml#glossary-keyword">keywords</a> for other special versions.<br/></li></ul><br/></section></section><section id="section-ConstructingPathnames"><h4 class="section-title">Restrictions on Constructing Pathnames</h4><br/>  When constructing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> from components, conforming programs
  must follow these rules:<br/><ul><li>Any component can be <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.
  <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> in the host might mean a default host 
  rather than an actual <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> in some implementations.<br/></li><li>The host, device, directory, name, and type can be <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a>.  There
  are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> limits on the number and type of
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">characters</a> in these <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a>.<br/></li><li>The directory can be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a>.
  There are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> limits on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>'s
  length and contents.<br/></li><li>The version can be <span class="keyword">:newest</span>.<br/></li><li>Any component can be taken 
  from the corresponding component of another <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.
  When the two <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a> are for different file systems
    (in implementations that support multiple file systems),
  an appropriate translation occurs.
  If no meaningful translation is possible,
  an error is signaled.
  The definitions of ``appropriate'' and ``meaningful'' 
  are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/></li><li>An implementation might support other values for some components,
  but a portable program cannot use those values.
  A conforming program can use <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> values
  but this can make it non-portable;
  for example, it might work only with <span class="explicit-roman">Unix</span> file systems.
</li></ul>                                   <br/>
</section>
</section><section id="section-MergingPathnames"><h3 class="section-title">Merging Pathnames</h3><br/>Merging takes a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> with unfilled components
and supplies values for those components from a source of defaults.<br/>If a component's value is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, that component is considered to be unfilled.
If a component's value is any <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, 
including <span class="keyword">:unspecific</span>, that component is considered to be filled.<br/>Except as explicitly specified otherwise,
for functions that manipulate or inquire about <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">files</a> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>,
the pathname argument to such a function
is merged with <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a> before accessing the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>
(as if by <a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a>).<br/><section id="section-ExamplesofMergingPathnames"><h4 class="section-title">Examples of Merging Pathnames</h4>Although the following examples are possible to execute only in
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementations</a> which permit <span class="keyword">:unspecific</span> in the indicated
position andwhich permit four-letter type components, they serve to illustrate
the basic concept of <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> merging.<br/>
<pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> 
   <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"LISP"</span>)</span>
                    <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"TEXT"</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"LISP"</span>

 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> 
   <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>
                    <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"LISP"</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"LISP"</span>

 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> 
   <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-keyword-symbol">:unspecific</span>)</span>
                    <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"LISP"</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-keyword-symbol">:UNSPECIFIC</span>
</span></code></pre><br/></section></section>
</section><section id="section-LogicalPathnames"><h2 class="section-title">Logical Pathnames</h2>

<section id="section-LogPathNamestrings"><h3 class="section-title">Syntax of Logical Pathname Namestrings</h3><br/>The syntax of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> is as follows.
(Note that unlike many notational descriptions in this document,
 this is a syntactic description of character sequences,
 not a structural description of <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.)<br/><tr><td>logical-pathname</td><td>::=</td><td><span class="explicit-roman">[</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">host</span> <span class="parameter">host-marker</span><span class="explicit-roman">]</span> <br/>
 <span class="explicit-roman">[</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter"><span class="parameter">relative-directory-marker</span></span><span class="explicit-roman">]</span>
 <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">directory</span> <span class="parameter">directory-marker</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> <br/>
 <span class="explicit-roman">[</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">name</span><span class="explicit-roman">]</span> 
 <span class="explicit-roman">[</span><span class="parameter">type-marker</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">type</span> 
 <span class="explicit-roman">[</span><span class="parameter">version-marker</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">version</span><span class="explicit-roman">]</span><span class="explicit-roman">]</span></td></tr><br/><tr><td>host</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">word</span></td></tr>
<tr><td>directory</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">word</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">wildcard-word</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">wild-inferiors-word</span></td></tr>
<tr><td>name</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">word</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">wildcard-word</span></td></tr>
<tr><td>type</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">word</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">wildcard-word</span></td></tr>
<tr><td>version</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">pos-int</span> | <span class="parameter">newest-word</span> | <span class="parameter">wildcard-version</span></td></tr><br/><span class="parameter">host-marker</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a>.<br/><span class="parameter">relative-directory-marker</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-semicolon">semicolon</a>.<br/><span class="parameter">directory-marker</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-semicolon">semicolon</a>.<br/><span class="parameter">type-marker</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dot">dot</a>.<br/><span class="parameter">version-marker</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dot">dot</a>.<br/><span class="parameter">wild-inferiors-word</span>&mdash;The two character sequence ``<pre><code><span class="syntax-root"><a class="variable-reference" href="chapter-25.xhtml#variable-**">**</a>
</span></code></pre>'' (two <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisks</a>).<br/><span class="parameter">newest-word</span>&mdash;The six character sequence ``<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">newest</span>
</span></code></pre>'' 
		   or the six character sequence ``<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">NEWEST</span>
</span></code></pre>''.<br/><span class="parameter">wildcard-version</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisk</a>.<br/><span class="parameter">wildcard-word</span>&mdash;one or more <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisks</a>, uppercase letters,
   digits, and hyphens, including at least one <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisk</a>, 
   with no two <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisks</a> adjacent.<br/><span class="parameter">word</span>&mdash;one or more uppercase letters, digits, and hyphens.<br/><span class="parameter">pos-int</span>&mdash;a positive <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integer</a>.<br/><section id="section-AdditionalInformationaboutParsingLogicalPathnameNamestrings"><h4 class="section-title">Additional Information about Parsing Logical Pathname Namestrings</h4><section id="section-TheHostpartofaLogicalPathnameNamestring"><h5 class="section-title">The Host part of a Logical Pathname Namestring</h5>The <span class="parameter">host</span> must have been defined as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host;
this can be done by using <a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> of <a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a>.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host name <pre><code><span class="syntax-root"><span class="syntax-string">"SYS"</span>
</span></code></pre> is reserved for the implementation.
The existence and meaning of <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">SYS:</span>
</span></code></pre> <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathnames</a> 
is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.<br/></section><section id="section-TheDevicepartofaLogicalPathnameNamestring"><h5 class="section-title">The Device part of a Logical Pathname Namestring</h5>There is no syntax for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> device since
the device component of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> is always <span class="keyword">:unspecific</span>;
see <span class="section-reference error">section:LogicalPathCompUnspecific.</span><br/></section><section id="section-TheDirectorypartofaLogicalPathnameNamestring"><h5 class="section-title">The Directory part of a Logical Pathname Namestring</h5>If a <span class="parameter">relative-directory-marker</span> precedes the <span class="parameter">directories</span>,
the directory component parsed is as <a class="glossary-reference" href="chapter-26.xhtml#glossary-relative">relative</a>;
otherwise, the directory component is parsed as <a class="glossary-reference" href="chapter-26.xhtml#glossary-absolute">absolute</a>.<br/>If a <span class="parameter">wild-inferiors-marker</span> is specified,
it parses into <span class="keyword">:wild-inferiors</span>.<br/></section><section id="section-TheTypepartofaLogicalPathnameNamestring"><h5 class="section-title">The Type part of a Logical Pathname Namestring</h5>The <span class="parameter">type</span> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-source file">source file</a>
is <pre><code><span class="syntax-root"><span class="syntax-string">"LISP"</span>
</span></code></pre>.   This should be translated into whatever type is 
appropriate in a physical pathname.<br/></section><section id="section-TheVersionpartofaLogicalPathnameNamestring"><h5 class="section-title">The Version part of a Logical Pathname Namestring</h5>Some <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file systems</a> do not have <span class="parameter">versions</span>. 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">Logical pathname</a> translation to such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>
ignores the <span class="parameter">version</span>.
This implies that a program cannot rely on being able to store
more than one version of a file named by a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.<br/>If a <span class="parameter">wildcard-version</span> is specified,
it parses into <span class="keyword">:wild</span>.<br/></section><section id="section-WildcardWordsinaLogicalPathnameNamestring"><h5 class="section-title">Wildcard Words in a Logical Pathname Namestring</h5>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-asterisk">asterisk</a> in a <span class="parameter">wildcard-word</span> matches a sequence of 
zero or more characters.  The <span class="parameter">wildcard-word</span> ``<pre><code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code></pre>'' 
parses into <span class="keyword">:wild</span>; other <span class="glossary-reference error">glossary:wildcard-words</span> parse into <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">strings</a>.<br/></section><section id="section-LowercaseLettersinaLogicalPathnameNamestring"><h5 class="section-title">Lowercase Letters in a Logical Pathname Namestring</h5>When parsing <span class="parameter">words</span> and <span class="parameter">wildcard-words</span>,
lowercase letters are translated to uppercase.<br/></section><section id="section-OtherSyntaxinaLogicalPathnameNamestring"><h5 class="section-title">Other Syntax in a Logical Pathname Namestring</h5>The consequences of using characters other than those specified here
in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> are unspecified.<br/>The consequences of using any value not specified here as a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> component are unspecified.<br/></section></section>
</section><section id="section-LogicalPathnameComponents"><h3 class="section-title">Logical Pathname Components</h3><section id="section-LogicalPathCompUnspecific"><h4 class="section-title">Unspecific Components of a Logical Pathname</h4><br/>The device component of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> is always <span class="keyword">:unspecific</span>;
no other component of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> can be <span class="keyword">:unspecific</span>.  <br/></section><section id="section-NullStringsasComponentsofaLogicalPathname"><h4 class="section-title">Null Strings as Components of a Logical Pathname</h4>The null string, <pre><code><span class="syntax-root"><span class="syntax-string">""</span>
</span></code></pre>, is not a valid value for any component of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.

</section></section>
</section><br/><section id="section-Dictionary"><h2 class="section-title">Dictionary</h2>


<br/><div class="component" id="type-pathname"><div class="header"><span class="left"><span class="name" id="type-pathname">pathname</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is a structured <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> which represents a <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filename</a>.<br/>There are two kinds of <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-physical pathname">physical pathnames</a> and
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathnames</a>.<br/></dd></dl></div><br/><br/><div class="component" id="type-logical-pathname"><div class="header"><span class="left"><span class="name" id="type-logical-pathname">logical-pathname</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/>
<dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> that uses a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> syntax that is 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-independent">implementation-independent</a>, 
and that has component values that are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-independent">implementation-independent</a>.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">Logical pathnames</a> do not refer directly to <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filenames</a><br/>
</dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="chapter-2.xhtml#section-SharpsignP">Sharpsign P</a>,
<a class="section-reference" href="chapter-22.xhtml#section-PrintingPathnames">Printing Pathnames</a><br/></dd></dl>
</div><br/>

<br/><div class="component" id="function-pathname"><div class="header"><span class="left"><span class="name" id="function-pathname">pathname</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">pathname</span>&nbsp;<span class="lambda-list">pathspec</span>&nbsp;â†’&nbsp;<span class="return-values">pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathspec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.

<span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> denoted by <span class="parameter">pathspec</span>.<br/>If the <span class="parameter">pathspec</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> can be either open or closed;
in both cases, the <a class="function-reference" href="#function-pathname">pathname</a> returned 
corresponds to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-filename">filename</a> used to open the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a>.
<a class="function-reference" href="#function-pathname">pathname</a> returns the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file stream">file stream</a>
after it is closed as it did when it was open.

If the <span class="parameter">pathspec</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> is
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file stream">file stream</a> created by opening a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> is returned.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;; There is a great degree of variability permitted here.  The next
 ;; several examples are intended to illustrate just a few of the many
 ;; possibilities.  Whether the name is canonicalized to a particular
 ;; case (either upper or lower) depends on both the file system and the
 ;; implementation since two different implementations using the same
 ;; file system might differ on many issues.  How information is stored
 ;; internally (and possibly presented in #S notation) might vary,
 ;; possibly requiring `accessors' such as PATHNAME-NAME to perform case
 ;; conversion upon access.  The format of a namestring is dependent both
 ;; on the file system and the implementation since, for example, one
 ;; implementation might include the host name in a namestring, and
 ;; another might not.  #S notation would generally only be used in a
 ;; situation where no appropriate namestring could be constructed for use
 ;; with #P.
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">p1</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"test"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"CHOCOLATE:TEST"</span></span> ; with case canonicalization (e.g., VMS)
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-pathname">#P<span class="syntax-string">"VANILLA:test"</span></span>   ; without case canonicalization (e.g., Unix)
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-pathname">#P<span class="syntax-string">"test"</span></span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"STRAWBERRY"</span> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"TEST"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"BELGIAN-CHOCOLATE"</span> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"test"</span>)</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">p2</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"test"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"CHOCOLATE:TEST"</span></span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-pathname">#P<span class="syntax-string">"VANILLA:test"</span></span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-pathname">#P<span class="syntax-string">"test"</span></span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"STRAWBERRY"</span> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"TEST"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"BELGIAN-CHOCOLATE"</span> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"test"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="syntax-interned-symbol">p1</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eq">eq</a> <span class="syntax-interned-symbol">p1</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-interned-symbol">p1</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eq">eq</a> <span class="syntax-interned-symbol">p1</span> <span class="syntax-interned-symbol">p2</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-21.xhtml#macro-with-open-file">with-open-file</a> <span class="syntax-cons">(<a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"test"</span> <span class="syntax-keyword-symbol">:direction</span> <span class="syntax-keyword-symbol">:output</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"ORANGE-CHOCOLATE:&gt;Gus&gt;test.lisp.newest"</span></span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/>
</dd></dl></div><br/><br/><br/><div class="component" id="function-make-pathname"><div class="header"><span class="left"><span class="name" id="function-make-pathname">make-pathname</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">make-pathname</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;key</span> host device directory name type version defaults case</span>&nbsp;â†’&nbsp;<span class="return-values">pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">host</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid physical pathname host">valid physical pathname host</a>.
 Complicated defaulting behavior; see below.<br/><span class="parameter">device</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname device">valid pathname device</a>.
 Complicated defaulting behavior; see below.<br/><span class="parameter">directory</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname directory">valid pathname directory</a>.
 Complicated defaulting behavior; see below.<br/><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname name">valid pathname name</a>.
 Complicated defaulting behavior; see below.<br/><span class="parameter">type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname type">valid pathname type</a>.
 Complicated defaulting behavior; see below.<br/><span class="parameter">version</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname version">valid pathname version</a>.
 Complicated defaulting behavior; see below.

<span class="parameter">defaults</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.
 The default is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> whose host component is the same as the
          host component of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>,
	  and whose other components are all <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/><span class="parameter">case</span>&mdash;one of <span class="keyword">:common</span> or <span class="keyword">:local</span>.
 The default is <span class="keyword">:local</span>.
<span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Constructs and returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> from the supplied keyword arguments.<br/>After the components supplied explicitly by
       <span class="parameter">host</span>,
       <span class="parameter">device</span>, 
       <span class="parameter">directory</span>,
       <span class="parameter">name</span>,
       <span class="parameter">type</span>,
   and <span class="parameter">version</span> 
are filled in, 
the merging rules used by <a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> 
are used to fill in any 
unsupplied
components
from the defaults supplied by <span class="parameter">defaults</span>.<br/>Whenever a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is constructed the components may be 
canonicalized if appropriate.
For the explanation of the arguments that can be supplied for each component,
see <span class="section-reference error">section:PathnameComponents.</span><br/>If <span class="parameter">case</span> is supplied,
it is treated as described in <a class="section-reference" href="#section-PathnameComponentCase">Case in Pathname Components</a>.

The resulting <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> 
if and only its host component 
is
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a> 
or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> that names a defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a>.

If the <span class="parameter">directory</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
it should be the name of a top level directory,
and should not contain any punctuation characters; that is,
specifying a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, <span class="explicit-italic"> str</span>, is
equivalent to specifying the list <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="explicit-italic"> str</span>)</span>
</span></code></pre>.
Specifying the symbol <span class="keyword">:wild</span> is equivalent to specifying the list 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-keyword-symbol">:wild-inferiors</span>)</span>
</span></code></pre>, or <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-keyword-symbol">:wild</span>)</span>
</span></code></pre> 
in a file system that does not support <span class="keyword">:wild-inferiors</span>.
 
</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;; Implementation A -- an implementation with access to a single
 ;;  Unix file system.  This implementation happens to never display
 ;;  the `host' information in a namestring, since there is only one host. 
 <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:directory</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"public"</span> <span class="syntax-string">"games"</span>)</span></span>
                <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"chess"</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"db"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"/public/games/chess.db"</span></span> 

 ;; Implementation B -- an implementation with access to one or more
 ;;  VMS file systems.  This implementation displays `host' information
 ;;  in the namestring only when the host is not the local host.
 ;;  It uses a double colon to separate a host name from the host's local
 ;;  file name.
 <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:directory</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"PUBLIC"</span> <span class="syntax-string">"GAMES"</span>)</span></span>
                <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"CHESS"</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"DB"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"SYS$DISK:[PUBLIC.GAMES]CHESS.DB"</span></span> 
 <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:host</span> <span class="syntax-string">"BOBBY"</span>
                <span class="syntax-keyword-symbol">:directory</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"PUBLIC"</span> <span class="syntax-string">"GAMES"</span>)</span></span>
                <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"CHESS"</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"DB"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"BOBBY::SYS$DISK:[PUBLIC.GAMES]CHESS.DB"</span></span> 

 ;; Implementation C -- an implementation with simultaneous access to
 ;;  multiple file systems from the same Lisp image.  In this 
 ;;  implementation, there is a convention that any text preceding the
 ;;  first colon in a pathname namestring is a host name.
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-case">case</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:common</span> <span class="syntax-keyword-symbol">:local</span>)</span></span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">host</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-string">"MY-LISPM"</span> <span class="syntax-string">"MY-VAX"</span> <span class="syntax-string">"MY-UNIX"</span>)</span></span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-print">print</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:host</span> <span class="syntax-interned-symbol">host</span> <span class="syntax-keyword-symbol">:case</span> <a class="macro-reference" href="chapter-5.xhtml#macro-case">case</a>
                           <span class="syntax-keyword-symbol">:directory</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:absolute</span> <span class="syntax-string">"PUBLIC"</span> <span class="syntax-string">"GAMES"</span>)</span></span>
                           <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"CHESS"</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"DB"</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-LISPM:&gt;public&gt;games&gt;chess.db"
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-VAX:SYS$DISK:[PUBLIC.GAMES]CHESS.DB"
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-UNIX:/public/games/chess.db"
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-LISPM:&gt;public&gt;games&gt;chess.db" 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-VAX:SYS$DISK:[PUBLIC.GAMES]CHESS.DB" 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #P"MY-UNIX:/PUBLIC/GAMES/CHESS.DB" 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd>Portable programs should not supply <span class="keyword">:unspecific</span> for any component.
See <span class="section-reference error">section:UnspecificComponent.</span><br/></dd></dl></div><br/>
<br/><div class="component" id="function-pathnamep"><div class="header"><span class="left"><span class="name" id="function-pathnamep">pathnamep</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">pathnamep</span>&nbsp;<span class="lambda-list">object</span>&nbsp;â†’&nbsp;<span class="return-values">generalized-boolean</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">generalized-boolean</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if <span class="parameter">object</span> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-pathname">pathname</a>;
otherwise, returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-string">"test"</span>)</span>  <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"test"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"test"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DEVICE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DIRECTORY</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"test"</span> <span class="syntax-keyword-symbol">:TYPE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
       <span class="syntax-keyword-symbol">:VERSION</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> 
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> <span class="syntax-string">"SYS:SITE;FOO.SYSTEM"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"SYS:SITE;FOO.SYSTEM"</span></span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>!<br/></dd></dl><dl><dt class="label">See Also</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="parameter">object</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="parameter">object</span> <span class="syntax-quote">'<a class="function-reference" href="#function-pathname">pathname</a></span>)</span>
</span></code></pre><br/></dd></dl></div><br/>
<br/><div class="component" id="function-pathname-host"><div class="header"><span class="left"><span class="name" id="function-pathname-host">pathname-host</span>, <span class="name" id="function-pathname-device">pathname-device</span>, <span class="name" id="function-pathname-directory">pathname-directory</span>, <span class="name" id="function-pathname-name">pathname-name</span>, <span class="name" id="function-pathname-type">pathname-type</span>, <span class="name" id="function-pathname-version">pathname-version</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd>
<span class="function-definition"><span class="name">pathname-host</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span> case</span>&nbsp;â†’&nbsp;<span class="return-values">host</span></span><br/><br/><span class="function-definition"><span class="name">pathname-device</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span> case</span>&nbsp;â†’&nbsp;<span class="return-values">device</span></span><br/><br/><span class="function-definition"><span class="name">pathname-directory</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span> case</span>&nbsp;â†’&nbsp;<span class="return-values">directory</span></span><br/><br/><span class="function-definition"><span class="name">pathname-name</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span> case</span>&nbsp;â†’&nbsp;<span class="return-values">name</span></span><br/><br/><span class="function-definition"><span class="name">pathname-type</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span> case</span>&nbsp;â†’&nbsp;<span class="return-values">type</span></span><br/><br/>
<span class="function-definition"><span class="name">pathname-version</span>&nbsp;<span class="lambda-list">pathname</span>&nbsp;â†’&nbsp;<span class="return-values">version</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.

<span class="parameter">case</span>&mdash;one of <span class="keyword">:local</span> or <span class="keyword">:common</span>.
 The default is <span class="keyword">:local</span>.
<span class="parameter">host</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname host">valid pathname host</a>.<br/><span class="parameter">device</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname device">valid pathname device</a>.<br/><span class="parameter">directory</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname directory">valid pathname directory</a>.

<span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname name">valid pathname name</a>.<br/><span class="parameter">type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname type">valid pathname type</a>.<br/><span class="parameter">version</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname version">valid pathname version</a>.<br/>
</dd></dl><dl><dt class="label">Description</dt><dd>These functions return the components of <span class="parameter">pathname</span>.<br/>If the <span class="parameter">pathname</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>,
it represents the name used to open the file. This may be, but is
not required to be, the actual name of the file. <br/>If <span class="parameter">case</span> is supplied,
it is treated as described in <a class="section-reference" href="#section-PathnameComponentCase">Case in Pathname Components</a>.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:host</span> <span class="syntax-string">"KATHY"</span>
                        <span class="syntax-keyword-symbol">:directory</span> <span class="syntax-string">"CHAPMAN"</span> 
                        <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"LOGIN"</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"COM"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"KATHY::[CHAPMAN]LOGIN.COM"</span></span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-host">pathname-host</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"KATHY"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"LOGIN"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"COM"</span>

 ;; Because namestrings are used, the results shown in the remaining
 ;; examples are not necessarily the only possible results.  Mappings
 ;; from namestring representation to pathname representation are 
 ;; dependent both on the file system involved and on the implementation
 ;; (since there may be several implementations which can manipulate the
 ;; the same file system, and those implementations are not constrained
 ;; to agree on all details). Consult the documentation for each
 ;; implementation for specific information on how namestrings are treated
 ;; that implementation.

 ;; VMS
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"[FOO.*.BAR]BAZ.LSP"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-string">"BAR"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"[FOO.*.BAR]BAZ.LSP"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-string">"BAR"</span>)</span>

 ;; Unix
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-string">"foo.l"</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-device">pathname-device</a> <span class="syntax-string">"foo.l"</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-keyword-symbol">:UNSPECIFIC</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-string">"foo.l"</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"foo"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-string">"foo.l"</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:local</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"foo"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-string">"foo.l"</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"FOO"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo.l"</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"l"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo.l"</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:local</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"l"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo.l"</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"L"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo"</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-keyword-symbol">:UNSPECIFIC</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo"</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-keyword-symbol">:UNSPECIFIC</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo."</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">""</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-type">pathname-type</a> <span class="syntax-string">"foo."</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">""</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/bar/baz.lisp"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:local</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"foo"</span> <span class="syntax-string">"bar"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/bar/baz.lisp"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:local</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-string">"BAR"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"../baz.lisp"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:RELATIVE</span> <span class="syntax-keyword-symbol">:UP</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/BAR/../Mum/baz"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"foo"</span> <span class="syntax-string">"BAR"</span> <span class="syntax-keyword-symbol">:UP</span> <span class="syntax-string">"Mum"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/BAR/../Mum/baz"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-string">"bar"</span> <span class="syntax-keyword-symbol">:UP</span> <span class="syntax-string">"Mum"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/*/bar/baz.l"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"foo"</span> <span class="syntax-keyword-symbol">:WILD</span> <span class="syntax-string">"bar"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"/foo/*/bar/baz.l"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-keyword-symbol">:WILD</span> <span class="syntax-string">"BAR"</span>)</span>

 ;; Symbolics LMFS
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"&gt;foo&gt;**&gt;bar&gt;baz.lisp"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"foo"</span> <span class="syntax-keyword-symbol">:WILD-INFERIORS</span> <span class="syntax-string">"bar"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"&gt;foo&gt;*&gt;bar&gt;baz.lisp"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"foo"</span> <span class="syntax-keyword-symbol">:WILD</span> <span class="syntax-string">"bar"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"&gt;foo&gt;*&gt;bar&gt;baz.lisp"</span>)</span> <span class="syntax-keyword-symbol">:case</span> <span class="syntax-keyword-symbol">:common</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:ABSOLUTE</span> <span class="syntax-string">"FOO"</span> <span class="syntax-keyword-symbol">:WILD</span> <span class="syntax-string">"BAR"</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-device">pathname-device</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"&gt;foo&gt;baz.lisp"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-keyword-symbol">:UNSPECIFIC</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> and the host <a class="glossary-reference" href="chapter-26.xhtml#glossary-file system">file system</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>Should signal an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> if its first argument is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/>

<br/><div class="component" id="function-load-logical-pathname-translations"><div class="header"><span class="left"><span class="name" id="function-load-logical-pathname-translations">load-logical-pathname-translations</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">load-logical-pathname-translations</span>&nbsp;<span class="lambda-list">host</span>&nbsp;â†’&nbsp;<span class="return-values">just-loaded</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">host</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>.<br/><span class="glossary-reference error">glossary:just-loaded</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Searches for and loads the definition of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a> named <span class="parameter">host</span>,
if it is not already defined.
The specific nature of the search is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.<br/>If the <span class="parameter">host</span> is already defined, 
no attempt to find or load a definition is attempted,
and <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> is returned.
If the <span class="parameter">host</span> is not already defined,
but a definition is successfully found and loaded,
<a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> is returned.
Otherwise, an error is signaled.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"hacks:weather;barometer.lisp.newest"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The logical host HACKS is not defined.
 <span class="syntax-cons">(<a class="function-reference" href="#function-load-logical-pathname-translations">load-logical-pathname-translations</a> <span class="syntax-string">"HACKS"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> ;; Loading SYS:SITE;HACKS.TRANSLATIONS
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> ;; Loading done.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"hacks:weather;barometer.lisp.newest"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"HELIUM:[SHARED.HACKS.WEATHER]BAROMETER.LSP;0"</span></span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-load-logical-pathname-translations">load-logical-pathname-translations</a> <span class="syntax-string">"HACKS"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If no definition is found, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-logical-pathname">logical-pathname</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">Logical pathname</a> definitions will be created not just by 
<span class="glossary-reference error">glossary:implementors</span> but also by <a class="glossary-reference" href="chapter-26.xhtml#glossary-programmer">programmers</a>.  As such,
it is important that the search strategy be documented.
For example, an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> might define that the
definition of a <span class="parameter">host</span> is to be found in a file called
``<span class="parameter">host</span>.translations'' in some specifically named directory.<br/></dd></dl>
</div><br/>
<br/><div class="component" id="function-logical-pathname-translations"><div class="header"><span class="left"><span class="name" id="function-logical-pathname-translations">logical-pathname-translations</span></span><span class="right"><span class="ftype">Accessor</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">logical-pathname-translations</span>&nbsp;<span class="lambda-list">host</span>&nbsp;â†’&nbsp;<span class="return-values">translations</span></span><br/>
<span class="setf-definition">(setf (<span class="name">logical-pathname-translations</span>&nbsp;<span class="lambda-list">host</span>) <span class="new-value">new-translations</span>)</span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">host</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host designator">logical host designator</a>.<br/><span class="parameter">translations</span>, <span class="parameter">new-translations</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns the host's <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of translations.
Each translation is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of at least two elements: 
<span class="explicit-italic"> from-wildcard</span> and <span class="explicit-italic"> to-wildcard</span>.  Any
    additional elements are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.  
<span class="explicit-italic"> From-wildcard</span> is a
    <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> whose host is <span class="parameter">host</span>.  
<span class="explicit-italic"> To-wildcard</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.    
<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="parameter">host</span>)</span> <span class="explicit-italic"> translations</span>)</span>
</span></code></pre> sets a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host's
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <span class="explicit-italic"> translations</span>.  If <span class="parameter">host</span> 
is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> that has
    not been previously used as 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host, a new 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host is defined; 
otherwise an existing host's translations are
    replaced.  <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host names are compared with <a class="function-reference" href="chapter-16.xhtml#function-string-equal">string-equal</a>.<br/>    When setting the translations list, each <span class="explicit-italic"> from-wildcard</span> 
can be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> whose
host is <span class="parameter">host</span> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> namestring
    parseable by <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> <span class="explicit-italic"> host</span>)</span>
</span></code></pre>, 
where <span class="explicit-italic"> host</span>
    represents the appropriate <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> as defined 
by <a class="function-reference" href="#function-parse-namestring">parse-namestring</a>. Each
    <span class="explicit-italic"> to-wildcard</span> can be anything coercible to a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> by
    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="explicit-italic"> to-wildcard</span>)</span>
</span></code></pre>.  
If <span class="explicit-italic"> to-wildcard</span> coerces to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> 
will perform repeated translation steps when
    it uses it.<br/><span class="parameter">host</span> is either the host component of a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> or a
    <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> that has been defined 
as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host name by <a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> of
<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a>. <br/></dd></dl><dl><dt class="label">Examples</dt><dd><br/><pre><code><span class="syntax-root"> ;;;A very simple example of setting up a logical pathname host.  No
 ;;;translations are necessary to get around file system restrictions, so
 ;;;all that is necessary is to specify the root of the physical directory
 ;;;tree that contains the logical file system.
 ;;;The namestring syntax on the right-hand side is implementation-dependent.
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"foo"</span>)</span>
       <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"**;*.*.*"</span>              <span class="syntax-string">"MY-LISPM:&gt;library&gt;foo&gt;**&gt;"</span>)</span>)</span></span>)</span>
 
 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"foo:bar;baz;mum.quux.3"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"MY-LISPM:&gt;library&gt;foo&gt;bar&gt;baz&gt;mum.quux.3"</span></span>
 
 ;;;A more complex example, dividing the files among two file servers
 ;;;and several different directories.  This Unix doesn't support
 ;;;:WILD-INFERIORS in the directory, so each directory level must
 ;;;be translated individually.  No file name or type translations
 ;;;are required except for .MAIL to .MBX.
 ;;;The namestring syntax on the right-hand side is implementation-dependent.
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"prog"</span>)</span>
       <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"RELEASED;*.*.*"</span>        <span class="syntax-string">"MY-UNIX:/sys/bin/my-prog/"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"RELEASED;*;*.*.*"</span>      <span class="syntax-string">"MY-UNIX:/sys/bin/my-prog/*/"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"EXPERIMENTAL;*.*.*"</span>    <span class="syntax-string">"MY-UNIX:/usr/Joe/development/prog/"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"EXPERIMENTAL;DOCUMENTATION;*.*.*"</span>
                                  <span class="syntax-string">"MY-VAX:SYS$DISK:[JOE.DOC]"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"EXPERIMENTAL;*;*.*.*"</span>  <span class="syntax-string">"MY-UNIX:/usr/Joe/development/prog/*/"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"MAIL;**;*.MAIL"</span>        <span class="syntax-string">"MY-VAX:SYS$DISK:[JOE.MAIL.PROG...]*.MBX"</span>)</span>)</span></span>)</span>

 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"prog:mail;save;ideas.mail.3"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"MY-VAX:SYS$DISK:[JOE.MAIL.PROG.SAVE]IDEAS.MBX.3"</span></span>

 ;;;Example translations for a program that uses three files main.lisp,
 ;;;auxiliary.lisp, and documentation.lisp.  These translations might be
 ;;;supplied by a software supplier as examples.

 ;;;For Unix with long file names
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"prog"</span>)</span>
       <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"CODE;*.*.*"</span>             <span class="syntax-string">"/lib/prog/"</span>)</span>)</span></span>)</span>

 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"prog:code;documentation.lisp"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"/lib/prog/documentation.lisp"</span></span>

 ;;;For Unix with 14-character file names, using .lisp as the type
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"prog"</span>)</span>
       <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"CODE;DOCUMENTATION.*.*"</span> <span class="syntax-string">"/lib/prog/docum.*"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"CODE;*.*.*"</span>             <span class="syntax-string">"/lib/prog/"</span>)</span>)</span></span>)</span>

 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"prog:code;documentation.lisp"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"/lib/prog/docum.lisp"</span></span>

 ;;;For Unix with 14-character file names, using .l as the type
 ;;;The second translation shortens the compiled file type to .b
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"prog"</span>)</span>
       <span class="syntax-quasiquote">`<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"**;*.LISP.*"</span>            <span class="syntax-unquote">,<span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> <span class="syntax-string">"PROG:**;*.L.*"</span>)</span></span>)</span>
         <span class="syntax-cons">(<span class="syntax-unquote">,<span class="syntax-cons">(<a class="function-reference" href="chapter-24.xhtml#function-compile-file-pathname">compile-file-pathname</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> <span class="syntax-string">"PROG:**;*.LISP.*"</span>)</span>)</span></span>
                                   <span class="syntax-unquote">,<span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> <span class="syntax-string">"PROG:**;*.B.*"</span>)</span></span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"CODE;DOCUMENTATION.*.*"</span> <span class="syntax-string">"/lib/prog/documentatio.*"</span>)</span>
         <span class="syntax-cons">(<span class="syntax-string">"CODE;*.*.*"</span>             <span class="syntax-string">"/lib/prog/"</span>)</span>)</span></span>)</span>

 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"prog:code;documentation.lisp"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"/lib/prog/documentatio.l"</span></span>

 ;;;For a Cray with 6 character names and no directories, types, or versions.
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a> <span class="syntax-string">"prog"</span>)</span>
       <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">l</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"MAIN"</span> <span class="syntax-string">"PGMN"</span>)</span>
                  <span class="syntax-cons">(<span class="syntax-string">"AUXILIARY"</span> <span class="syntax-string">"PGAUX"</span>)</span>
                  <span class="syntax-cons">(<span class="syntax-string">"DOCUMENTATION"</span> <span class="syntax-string">"PGDOC"</span>)</span>)</span></span>)</span>
             <span class="syntax-cons">(<span class="syntax-interned-symbol">logpath</span> <span class="syntax-cons">(<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> <span class="syntax-string">"prog:code;"</span>)</span>)</span>
             <span class="syntax-cons">(<span class="syntax-interned-symbol">phypath</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"XXX"</span>)</span>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-append">append</a>
           <span class="syntax-line-comment syntax-comment">;; Translations for source files
</span>           <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-mapcar">mapcar</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
                       <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-log">log</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-first">first</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
                             <span class="syntax-cons">(<span class="syntax-interned-symbol">phy</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-second">second</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>)</span>
                         <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <a class="function-reference" href="chapter-12.xhtml#function-log">log</a>
                                              <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"LISP"</span>
                                              <span class="syntax-keyword-symbol">:version</span> <span class="syntax-keyword-symbol">:wild</span>
                                              <span class="syntax-keyword-symbol">:defaults</span> <span class="syntax-interned-symbol">logpath</span>)</span>
                               <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-interned-symbol">phy</span>
                                              <span class="syntax-keyword-symbol">:defaults</span> <span class="syntax-interned-symbol">phypath</span>)</span>)</span>)</span>)</span></span>
                   <span class="syntax-interned-symbol">l</span>)</span>
           <span class="syntax-line-comment syntax-comment">;; Translations for compiled files
</span>           <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-mapcar">mapcar</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
                       <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let*">let*</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-log">log</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-first">first</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
                              <span class="syntax-cons">(<span class="syntax-interned-symbol">phy</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-second">second</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
                              <span class="syntax-cons">(<span class="syntax-interned-symbol">com</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-24.xhtml#function-compile-file-pathname">compile-file-pathname</a>
                                     <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <a class="function-reference" href="chapter-12.xhtml#function-log">log</a>
                                                    <span class="syntax-keyword-symbol">:type</span> <span class="syntax-string">"LISP"</span>
                                                    <span class="syntax-keyword-symbol">:version</span> <span class="syntax-keyword-symbol">:wild</span>
                                                    <span class="syntax-keyword-symbol">:defaults</span> <span class="syntax-interned-symbol">logpath</span>)</span>)</span>)</span>)</span>
                         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">phy</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-concatenate">concatenate</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-16.xhtml#function-string">string</a></span> <span class="syntax-interned-symbol">phy</span> <span class="syntax-string">"B"</span>)</span>)</span>
                         <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-list">list</a> <span class="syntax-interned-symbol">com</span>
                               <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-interned-symbol">phy</span>
                                              <span class="syntax-keyword-symbol">:defaults</span> <span class="syntax-interned-symbol">phypath</span>)</span>)</span>)</span>)</span></span>
                   <span class="syntax-interned-symbol">l</span>)</span>)</span>)</span>)</span>

 ;;;Sample use of that logical pathname.  The return value
 ;;;is implementation-dependent.          
 <span class="syntax-cons">(<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> <span class="syntax-string">"prog:code;documentation.lisp"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"PGDOC"</span></span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">host</span> is incorrectly supplied, 
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd>Implementations can define additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a>
that operate on <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> hosts,
for example to specify additional translation rules or options.<br/></dd></dl>
</div><br/>
<br/><div class="component" id="function-logical-pathname"><div class="header"><span class="left"><span class="name" id="function-logical-pathname">logical-pathname</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">logical-pathname</span>&nbsp;<span class="lambda-list">pathspec</span>&nbsp;â†’&nbsp;<span class="return-values">logical-pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathspec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>, 
		   a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>,
		or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>.<br/><span class="parameter">logical-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-logical-pathname">logical-pathname</a> converts <span class="parameter">pathspec</span> to a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> and returns the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.
If <span class="parameter">pathspec</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>,
it should contain a host component and its following <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a>.
If <span class="parameter">pathspec</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, it should be one
for which <a class="function-reference" href="#function-pathname">pathname</a> returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.  <br/>If <span class="parameter">pathspec</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> can be either open or closed.
<a class="function-reference" href="#function-logical-pathname">logical-pathname</a> returns the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> after a
file is closed as it did when the file was open.
It is an error if <span class="parameter">pathspec</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> that is 
created with
  <a class="function-reference" href="chapter-21.xhtml#function-make-two-way-stream">make-two-way-stream</a>, 
  <a class="function-reference" href="chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a>,             
  <a class="function-reference" href="chapter-21.xhtml#function-make-broadcast-stream">make-broadcast-stream</a>, 
  <a class="function-reference" href="chapter-21.xhtml#function-make-concatenated-stream">make-concatenated-stream</a>,
  <a class="function-reference" href="chapter-21.xhtml#function-make-string-input-stream">make-string-input-stream</a>,
or
  <a class="function-reference" href="chapter-21.xhtml#function-make-string-output-stream">make-string-output-stream</a>.

</dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>Signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> if <span class="parameter">pathspec</span> isn't supplied correctly.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a>,
<a class="section-reference" href="#section-LogicalPathnames">Logical Pathnames</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl>
</div><br/>

<br/><div class="component" id="variable-*default-pathname-defaults*"><div class="header"><span class="left"><span class="name" id="variable-*default-pathname-defaults*">*default-pathname-defaults*</span></span><span class="right"><span class="ftype">Variable</span></span></div><br/><dl><dt class="label">Value Type</dt><dd>a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/></dd></dl><dl><dt class="label">Initial Value</dt><dd>An <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, 
typically in the working directory that was current when <span class="explicit-roman">Common Lisp</span> was started up.<br/></dd></dl><dl><dt class="label">Description</dt><dd>a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, used as the default whenever a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>
needs a default <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> and one is not supplied.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;; This example illustrates a possible usage for a hypothetical Lisp running on a
 ;; DEC TOPS-20 file system.  Since pathname conventions vary between Lisp 
 ;; implementations and host file system types, it is not possible to provide a
 ;; general-purpose, conforming example.
 <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"PS:&lt;FRED&gt;"</span></span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"CALENDAR"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"PS:&lt;FRED&gt;CALENDAR"</span></span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"&lt;MARY&gt;"</span>)</span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"CALENDAR"</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"&lt;MARY&gt;CALENDAR"</span></span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/>


<br/><div class="component" id="function-namestring"><div class="header"><span class="left"><span class="name" id="function-namestring">namestring</span>, <span class="name" id="function-file-namestring">file-namestring</span>, <span class="name" id="function-directory-namestring">directory-namestring</span>, <span class="name" id="function-host-namestring">host-namestring</span>, <span class="name" id="function-enough-namestring">enough-namestring</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">namestring</span>&nbsp;<span class="lambda-list">pathname</span>&nbsp;â†’&nbsp;<span class="return-values">namestring</span></span><br/><br/><span class="function-definition"><span class="name">file-namestring</span>&nbsp;<span class="lambda-list">pathname</span>&nbsp;â†’&nbsp;<span class="return-values">namestring</span></span><br/>
<span class="function-definition"><span class="name">directory-namestring</span>&nbsp;<span class="lambda-list">pathname</span>&nbsp;â†’&nbsp;<span class="return-values">namestring</span></span><br/>
<span class="function-definition"><span class="name">host-namestring</span>&nbsp;<span class="lambda-list">pathname</span>&nbsp;â†’&nbsp;<span class="return-values">namestring</span></span><br/><br/><span class="function-definition"><span class="name">enough-namestring</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;optional</span> defaults</span>&nbsp;â†’&nbsp;<span class="return-values">namestring</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.
                 <br/><span class="parameter">defaults</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.
 The default is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>.<br/><span class="parameter">namestring</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.

</dd></dl><dl><dt class="label">Description</dt><dd>
These functions convert <span class="parameter">pathname</span> into a namestring.
The name represented by <span class="parameter">pathname</span> is returned as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> canonical form.<br/><a class="function-reference" href="#function-namestring">namestring</a> returns the full form of <span class="parameter">pathname</span>.<br/><a class="function-reference" href="#function-file-namestring">file-namestring</a> returns just the name, type, and version
 components of <span class="parameter">pathname</span>.<br/><a class="function-reference" href="#function-directory-namestring">directory-namestring</a> returns the directory name portion.<br/><a class="function-reference" href="#function-host-namestring">host-namestring</a> returns the host name. 

<a class="function-reference" href="#function-enough-namestring">enough-namestring</a> returns an abbreviated namestring 
 that is just sufficient to identify the file named by <span class="parameter">pathname</span>
 when considered relative to the <span class="parameter">defaults</span>.
 It is required that<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-enough-namestring">enough-namestring</a> <a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-interned-symbol">defaults</span>)</span> <span class="syntax-interned-symbol">defaults</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <a class="function-reference" href="#function-pathname">pathname</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-interned-symbol">defaults</span>)</span> <span class="syntax-interned-symbol">defaults</span>)</span>
</span></code></pre>
in all cases, and the result of <a class="function-reference" href="#function-enough-namestring">enough-namestring</a> is
the shortest reasonable <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> that will satisfy this criterion.<br/>It is not necessarily possible to construct a valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> 
by concatenating some of the three shorter <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestrings</a> in some order.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a> <span class="syntax-string">"getty"</span>)</span>            
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"getty"</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:host</span> <span class="syntax-string">"kathy"</span> 
                         <span class="syntax-keyword-symbol">:directory</span> 
                           <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>)</span>
                         <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"getty"</span>)</span>)</span> 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <span class="syntax-string">"kathy"</span> <span class="syntax-keyword-symbol">:DEVICE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DIRECTORY</span> <span class="explicit-italic"> directory-name</span> 
       <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"getty"</span> <span class="syntax-keyword-symbol">:TYPE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:VERSION</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-file-namestring">file-namestring</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"getty"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-directory-namestring">directory-namestring</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="explicit-italic"> directory-name</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-host-namestring">host-namestring</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"kathy"</span> 
</span></code></pre>
<pre><code><span class="syntax-root"> ;;;Using Unix syntax and the wildcard conventions used by the
 ;;;particular version of Unix on which this example was created:
 <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a>
   <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"/usr/dmr/hacks/frob.l"</span>
                       <span class="syntax-string">"/usr/d*/hacks/*.l"</span>
                       <span class="syntax-string">"/usr/d*/backup/hacks/backup-*.*"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"/usr/dmr/backup/hacks/backup-frob.l"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a>
   <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"/usr/dmr/hacks/frob.l"</span>
                       <span class="syntax-string">"/usr/d*/hacks/fr*.l"</span>
                       <span class="syntax-string">"/usr/d*/backup/hacks/backup-*.*"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"/usr/dmr/backup/hacks/backup-ob.l"</span>
 
 ;;;This is similar to the above example but uses two different hosts,
 ;;;U: which is a Unix and V: which is a VMS.  Note the translation
 ;;;of file type and alphabetic case conventions.
 <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a>
   <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"U:/usr/dmr/hacks/frob.l"</span>
                       <span class="syntax-string">"U:/usr/d*/hacks/*.l"</span>
                       <span class="syntax-string">"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-FROB.LSP"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-namestring">namestring</a>
   <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"U:/usr/dmr/hacks/frob.l"</span>
                       <span class="syntax-string">"U:/usr/d*/hacks/fr*.l"</span>
                       <span class="syntax-string">"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-OB.LSP"</span>
</span></code></pre> <br/>
</dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="chapter-20.xhtml#function-truename">truename</a>,
<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/>
<br/><div class="component" id="function-parse-namestring"><div class="header"><span class="left"><span class="name" id="function-parse-namestring">parse-namestring</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">parse-namestring</span>&nbsp;<span class="lambda-list">thing <span class="lambda-list-keyword">&amp;optional</span> host default-pathname <span class="lambda-list-keyword">&amp;key</span> start end junk-allowed</span>&nbsp;â†’&nbsp;<span class="return-values">pathname, position</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">thing</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
	        a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>,
	     or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream associated with a file">stream associated with a file</a>.

<span class="parameter">host</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname host">valid pathname host</a>, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.

<span class="parameter">default-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.
 The default is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>.<br/>
<span class="parameter">start</span>, <span class="parameter">end</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-bounding index designator">bounding index designators</a> of <span class="parameter">thing</span>.
 The defaults for <span class="parameter">start</span> and <span class="parameter">end</span> are <pre><code><span class="syntax-root"><span class="syntax-number">0</span>
</span></code></pre> and <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, respectively.
<span class="parameter">junk-allowed</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.
  The default is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>.<br/><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/><span class="parameter">position</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-bounding index designator">bounding index designator</a> for <span class="parameter">thing</span>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Converts <span class="parameter">thing</span> into a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/>The <span class="parameter">host</span> supplies a host name with respect to which the parsing occurs.

If <span class="parameter">thing</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream associated with a file">stream associated with a file</a>,
processing proceeds as if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> used to open that <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a>
had been supplied instead.

If <span class="parameter">thing</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>,
the <span class="parameter">host</span> and the host component of <span class="parameter">thing</span> are compared.
If they match, 
two values are immediately returned: <span class="parameter">thing</span> and <span class="parameter">start</span>;
otherwise (if they do not match), an error is signaled.<br/>
Otherwise (if <span class="parameter">thing</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>),
<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> parses the name of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a> within
the substring of <span class="parameter">thing</span> bounded by <span class="parameter">start</span> and <span class="parameter">end</span>.<br/>If <span class="parameter">thing</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> then 
the substring of <span class="parameter">thing</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-bounded">bounded</a> by <span class="parameter">start</span> and <span class="parameter">end</span>
is parsed into a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> 
as follows:<br/><ul><li>If <span class="parameter">host</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a> then <span class="parameter">thing</span> is parsed
  as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> 
  on the <span class="parameter">host</span>.<br/></li><li>If <span class="parameter">host</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and <span class="parameter">thing</span> is a syntactically valid 
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> containing an explicit host,
  then it is parsed as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>.<br/></li><li>If  <span class="parameter">host</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>,
      <span class="parameter">default-pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
  and <span class="parameter">thing</span> is a syntactically valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
       without an explicit host,
  then it is parsed as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
        on the host that is the host component of <span class="parameter">default-pathname</span>.<br/></li><li>Otherwise, the parsing of <span class="parameter">thing</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.<br/></li></ul><br/>In the first 
of these
cases,
the host portion of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> namestring
and its following <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a> are optional.

If the host portion of the namestring and <span class="parameter">host</span> 
are both present and do not match,
an error is signaled.               <br/>If <span class="parameter">junk-allowed</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>,
then the <a class="glossary-reference" href="chapter-26.xhtml#glossary-primary value">primary value</a> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> parsed 
or, if no syntactically correct <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> was seen, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.
If <span class="parameter">junk-allowed</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>,
then the entire substring is scanned, 
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-primary value">primary value</a> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> parsed.<br/>In either case, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-secondary value">secondary value</a>
is the index into <span class="parameter">thing</span> of the delimiter that terminated the parse,
or the index beyond the substring if the parse terminated at the end of the substring
  (as will always be the case if <span class="parameter">junk-allowed</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>).<br/>Parsing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-null">null</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> always succeeds,
producing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> with all components (except the host) equal to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>If <span class="parameter">thing</span> contains an explicit host name and no explicit device name,
then it is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> whether <a class="function-reference" href="#function-parse-namestring">parse-namestring</a>
will supply the standard default device for that host as the device component
of the resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">q</span> <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"test"</span>)</span>)</span>  
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DEVICE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DIRECTORY</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"test"</span> 
       <span class="syntax-keyword-symbol">:TYPE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:VERSION</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathnamep">pathnamep</a> <span class="syntax-interned-symbol">q</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"test"</span>)</span> 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DEVICE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DIRECTORY</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"test"</span>
       <span class="syntax-keyword-symbol">:TYPE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:VERSION</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span><span class="syntax-verbatim">,</span> <span class="syntax-number">4</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">s</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-open">open</a> <span class="explicit-italic"> xxx</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-verbatim">#&lt;Input File Stream...&gt;</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-interned-symbol">s</span>)</span> 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:HOST</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DEVICE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:DIRECTORY</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="explicit-italic"> xxx</span> 
       <span class="syntax-keyword-symbol">:TYPE</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:VERSION</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span><span class="syntax-verbatim">,</span> <span class="syntax-number">0</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"test"</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-keyword-symbol">:start</span> <span class="syntax-number">2</span> <span class="syntax-keyword-symbol">:end</span> <span class="syntax-number">4</span> )</span>
 <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-structure">#S(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-interned-symbol">...</span>)</span><span class="syntax-verbatim">,</span> <span class="syntax-number">15</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-parse-namestring">parse-namestring</a> <span class="syntax-string">"foo.lisp"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"foo.lisp"</span></span>
</span></code></pre>
</dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">junk-allowed</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>,
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-parse-error">parse-error</a> is signaled if <span class="parameter">thing</span> 
does not consist entirely of the representation of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, 
possibly surrounded on either side by <a class="glossary-reference" href="chapter-26.xhtml#glossary-whitespace">whitespace</a><sub>1</sub> characters if that is
appropriate to the cultural conventions of the implementation.<br/>If <span class="parameter">host</span> is supplied and not <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>,
and <span class="parameter">thing</span> contains a manifest host name, 
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled if the hosts do not match.<br/>If <span class="parameter">thing</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> namestring
and if the host portion of the namestring and <span class="parameter">host</span> 
are both present and do not match,
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled.               


</dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-UnspecificComponent">:UNSPECIFIC as a Component Value</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/>

<br/><div class="component" id="function-wild-pathname-p"><div class="header"><span class="left"><span class="name" id="function-wild-pathname-p">wild-pathname-p</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">wild-pathname-p</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;optional</span> field-key</span>&nbsp;â†’&nbsp;<span class="return-values">generalized-boolean</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.

<span class="parameter">Field-key</span>&mdash;one of <span class="keyword">:host</span>,
			   <span class="keyword">:device</span>
			   <span class="keyword">:directory</span>,
			   <span class="keyword">:name</span>,
			   <span class="keyword">:type</span>,
		 	   <span class="keyword">:version</span>,
			or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/><span class="parameter">generalized-boolean</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> tests <span class="parameter">pathname</span> for the presence of wildcard components.  <br/>If <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> (as returned by <a class="function-reference" href="#function-pathname">pathname</a>)
it represents the name used to open the file. This may be, but is
not required to be, the actual name of the file. <br/>If <span class="parameter">field-key</span> is not supplied or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, <a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a>    
returns true if <span class="parameter">pathname</span> has any wildcard components, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> 
if <span class="parameter">pathname</span> has none.
If <span class="parameter">field-key</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>, <a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a>    
returns true if the indicated component of <span class="parameter">pathname</span> is a wildcard, 
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> if the component is not a wildcard.  <br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;;;The following examples are not portable.  They are written to run
 ;;;with particular file systems and particular wildcard conventions.
 ;;;Other implementations will behave differently.  These examples are
 ;;;intended to be illustrative, not to be prescriptive.
 
 <span class="syntax-cons">(<a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-keyword-symbol">:wild</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-keyword-symbol">:wild</span>)</span> <span class="syntax-keyword-symbol">:name</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-keyword-symbol">:wild</span>)</span> <span class="syntax-keyword-symbol">:type</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-string">"s:&gt;foo&gt;**&gt;"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> ;Lispm
 <span class="syntax-cons">(<a class="function-reference" href="#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"F*O"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> ;Most places
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">pathname</span> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, 
or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream associated with a file">stream associated with a file</a> an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd>Not all implementations support wildcards in all fields.
See <a class="section-reference" href="#section-WildComponents">:WILD as a Component Value</a> and <a class="section-reference" href="#section-WildcardRestrictions">Restrictions on Wildcard Pathnames</a>.<br/></dd></dl></div><br/>
<br/><div class="component" id="function-pathname-match-p"><div class="header"><span class="left"><span class="name" id="function-pathname-match-p">pathname-match-p</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">pathname-match-p</span>&nbsp;<span class="lambda-list">pathname wildcard</span>&nbsp;â†’&nbsp;<span class="return-values">generalized-boolean</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.<br/><span class="parameter">wildcard</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-wild">wild</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.

<span class="parameter">generalized-boolean</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a> returns true if 
<span class="parameter">pathname</span> matches <span class="parameter">wildcard</span>, otherwise <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.  The 
matching rules are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> but should be consistent with 
<a class="function-reference" href="chapter-20.xhtml#function-directory">directory</a>. Missing components of <span class="parameter">wildcard</span> default to <span class="keyword">:wild</span>.<br/>It is valid for <span class="parameter">pathname</span> to be a wild <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>; 
a wildcard field in <span class="parameter">pathname</span> only matches a
wildcard field in <span class="parameter">wildcard</span> (<span class="explicit-italic"> i.e.</span>,  
<a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a> is not commutative).
It is valid for <span class="parameter">wildcard</span> to be a non-wild <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">pathname</span> or <span class="parameter">wildcard</span> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, 
or <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream associated with a file">stream associated with a file</a> an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="chapter-20.xhtml#function-directory">directory</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/>
<br/><div class="component" id="function-translate-logical-pathname"><div class="header"><span class="left"><span class="name" id="function-translate-logical-pathname">translate-logical-pathname</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">translate-logical-pathname</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;key</span></span>&nbsp;â†’&nbsp;<span class="return-values">physical-pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>,
		or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>.<br/><span class="parameter">physical-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-physical pathname">physical pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Translates <span class="parameter">pathname</span> to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-physical pathname">physical pathname</a>, which it returns.<br/>If <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> can be either open or closed.
<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> returns the same 
physical pathname after a
    file is closed as it did when the file was open.
It is an error if <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> that is 
created with <a class="function-reference" href="chapter-21.xhtml#function-make-two-way-stream">make-two-way-stream</a>, 
<a class="function-reference" href="chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a>,             
<a class="function-reference" href="chapter-21.xhtml#function-make-broadcast-stream">make-broadcast-stream</a>, 
<a class="function-reference" href="chapter-21.xhtml#function-make-concatenated-stream">make-concatenated-stream</a>, <a class="function-reference" href="chapter-21.xhtml#function-make-string-input-stream">make-string-input-stream</a>,
<a class="function-reference" href="chapter-21.xhtml#function-make-string-output-stream">make-string-output-stream</a>.

If <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> namestring,
the host portion of the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> namestring and its following <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a> are required.<br/>
<span class="parameter">Pathname</span> is first coerced to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.
If the coerced <span class="parameter">pathname</span> is a physical pathname, it is returned.
If the coerced <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
the first matching translation (according to <a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a>)
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> host is applied, as if by calling 
<a class="function-reference" href="#function-translate-pathname">translate-pathname</a>.  If the result is
    a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>, this process is repeated.  
When the result is
    finally a physical pathname, it is returned.
    If no translation matches, an error 
is signaled.<br/><a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a> might perform additional translations,
    typically to provide translation of file types to local naming
    conventions, to accomodate physical file systems with limited length
    names, or to deal with special character requirements such as
    translating hyphens to underscores or uppercase letters to lowercase.
    Any such additional translations are <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.  Some
    implementations do no additional translations.<br/>    There are no specified keyword arguments for
<a class="function-reference" href="#function-translate-logical-pathname">translate-logical-pathname</a>, 
but implementations are permitted to extend
    it by adding keyword arguments.  <br/> <br/></dd></dl><dl><dt class="label">Examples</dt><dd>See <a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.
</dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">pathname</span> is incorrectly supplied, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/>If no translation matches, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a> is signaled.
<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-logical-pathname">logical-pathname</a>,
<a class="function-reference" href="#function-logical-pathname-translations">logical-pathname-translations</a>, 
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl>
</div><br/>
<br/><div class="component" id="function-translate-pathname"><div class="header"><span class="left"><span class="name" id="function-translate-pathname">translate-pathname</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">translate-pathname</span>&nbsp;<span class="lambda-list">source from-wildcard to-wildcard <span class="lambda-list-keyword">&amp;key</span></span>&nbsp;â†’&nbsp;<span class="return-values">translated-pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">source</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.<br/><span class="parameter">from-wildcard</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.<br/><span class="parameter">to-wildcard</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.<br/><span class="parameter">translated-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-translate-pathname">translate-pathname</a> translates <span class="parameter">source</span> 
(that matches <span class="parameter">from-wildcard</span>) into a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> 
that matches <span class="parameter">to-wildcard</span>, and returns the corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/>The resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is <span class="parameter">to-wildcard</span> with each wildcard or missing
field replaced by a portion of <span class="parameter">source</span>.  A ``wildcard field'' is a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component with a value of <span class="keyword">:wild</span>, a <span class="keyword">:wild</span> element of a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>-valued directory component, or an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> portion
of a component, such as the <pre><code><span class="syntax-root"><span class="syntax-string">"*"</span>
</span></code></pre> in the complex wildcard string
<pre><code><span class="syntax-root"><span class="syntax-string">"foo*bar"</span>
</span></code></pre> that some implementations support.  An implementation that
adds other wildcard features, such as regular expressions, must define
how <a class="function-reference" href="#function-translate-pathname">translate-pathname</a> extends to those features.  
A ``missing field'' is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component with a value of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>    The portion of <span class="parameter">source</span> 
that is copied into the resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> is 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.  Typically 
it is determined by the user interface conventions
    of the file systems involved.  Usually it is the portion of <span class="parameter">source</span>
    that matches a wildcard field of 
<span class="parameter">from-wildcard</span> that is in the same
    position as the wildcard or missing field of 
<span class="parameter">to-wildcard</span>.  If there
    is no wildcard field in 
<span class="parameter">from-wildcard</span> at that position, then usually
    it is the entire corresponding 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component of <span class="parameter">source</span>, or in
    the case of a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>-valued directory component, the entire corresponding
    <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> element.  <br/>    During the copying of a portion of <span class="parameter">source</span> into 
the resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, additional
    <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> translations of <a class="glossary-reference" href="chapter-26.xhtml#glossary-case">case</a> or file naming
    conventions might occur, especially when 
<span class="parameter">from-wildcard</span> and
    <span class="parameter">to-wildcard</span> are for different hosts.<br/>It is valid for
    <span class="parameter">source</span> to be a wild 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>; in general this will produce a wild
    result.  It 
is valid for <span class="parameter">from-wildcard</span> and/or <span class="parameter">to-wildcard</span> to be
    non-wild <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a>.  <br/>    There are no specified keyword arguments for 
<a class="function-reference" href="#function-translate-pathname">translate-pathname</a>, but
    implementations are permitted to extend it by adding keyword arguments.<br/><a class="function-reference" href="#function-translate-pathname">translate-pathname</a> maps customary case in
<span class="parameter">source</span> into customary case in the output <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.
<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;; The results of the following five forms are all implementation-dependent.
 ;; The second item in particular is shown with multiple results just to 
 ;; emphasize one of many particular variations which commonly occurs.
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"foo*"</span> <span class="syntax-string">"*baz"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"barbaz"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"foo*"</span> <span class="syntax-string">"*"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"foobar"</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-string">"bar"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"*"</span>    <span class="syntax-string">"foo*"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"foofoobar"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"bar"</span>    <span class="syntax-string">"*"</span>    <span class="syntax-string">"foo*"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"foobar"</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"foo*"</span> <span class="syntax-string">"baz*"</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"bazbar"</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">translate-logical-pathname-1</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-interned-symbol">rules</span>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">rule</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-assoc">assoc</a> <a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-interned-symbol">rules</span> <span class="syntax-keyword-symbol">:test</span> <span class="syntax-function">#'<a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a></span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-unless">unless</a> <span class="syntax-interned-symbol">rule</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-9.xhtml#function-error">error</a> <span class="syntax-string">"No translation rule for ~A"</span> <a class="function-reference" href="#function-pathname">pathname</a>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <a class="function-reference" href="#function-pathname">pathname</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-first">first</a> <span class="syntax-interned-symbol">rule</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-second">second</a> <span class="syntax-interned-symbol">rule</span>)</span>)</span>)</span>)</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">translate-logical-pathname-1</span> <span class="syntax-string">"FOO:CODE;BASIC.LISP"</span>
                       <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"FOO:DOCUMENTATION;"</span> <span class="syntax-string">"MY-UNIX:/doc/foo/"</span>)</span>
                         <span class="syntax-cons">(<span class="syntax-string">"FOO:CODE;"</span>          <span class="syntax-string">"MY-UNIX:/lib/foo/"</span>)</span>
                         <span class="syntax-cons">(<span class="syntax-string">"FOO:PATCHES;*;"</span>     <span class="syntax-string">"MY-UNIX:/lib/foo/patch/*/"</span>)</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"MY-UNIX:/lib/foo/basic.l"</span></span>

;;;This example assumes one particular set of wildcard conventions
;;;Not all file systems will run this example exactly as written
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">rename-files</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">from</span> <span class="syntax-interned-symbol">to</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">file</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-20.xhtml#function-directory">directory</a> <span class="syntax-interned-symbol">from</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-20.xhtml#function-rename-file">rename-file</a> <span class="syntax-interned-symbol">file</span> <span class="syntax-cons">(<a class="function-reference" href="#function-translate-pathname">translate-pathname</a> <span class="syntax-interned-symbol">file</span> <span class="syntax-interned-symbol">from</span> <span class="syntax-interned-symbol">to</span>)</span>)</span>)</span>)</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">rename-files</span> <span class="syntax-string">"/usr/me/*.lisp"</span> <span class="syntax-string">"/dev/her/*.l"</span>)</span>
   ;Renames /usr/me/init.lisp to /dev/her/init.l
 <span class="syntax-cons">(<span class="syntax-interned-symbol">rename-files</span> <span class="syntax-string">"/usr/me/pcl*/*"</span> <span class="syntax-string">"/sys/pcl/*/"</span>)</span>
   ;Renames /usr/me/pcl-5-may/low.lisp to /sys/pcl/pcl-5-may/low.lisp
   ;In some file systems the result might be /sys/pcl/5-may/low.lisp
 <span class="syntax-cons">(<span class="syntax-interned-symbol">rename-files</span> <span class="syntax-string">"/usr/me/pcl*/*"</span> <span class="syntax-string">"/sys/library/*/"</span>)</span>
   ;Renames /usr/me/pcl-5-may/low.lisp to /sys/library/pcl-5-may/low.lisp
   ;In some file systems the result might be /sys/library/5-may/low.lisp
 <span class="syntax-cons">(<span class="syntax-interned-symbol">rename-files</span> <span class="syntax-string">"/usr/me/foo.bar"</span> <span class="syntax-string">"/usr/me2/"</span>)</span>
   ;Renames /usr/me/foo.bar to /usr/me2/foo.bar
 <span class="syntax-cons">(<span class="syntax-interned-symbol">rename-files</span> <span class="syntax-string">"/usr/joe/*-recipes.text"</span> <span class="syntax-string">"/usr/jim/cookbook/joe's-*-rec.text"</span>)</span>
   ;Renames /usr/joe/lamb-recipes.text to /usr/jim/cookbook/joe's-lamb-rec.text
   ;Renames /usr/joe/pork-recipes.text to /usr/jim/cookbook/joe's-pork-rec.text
   ;Renames /usr/joe/veg-recipes.text to /usr/jim/cookbook/joe's-veg-rec.text
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If any of <span class="parameter">source</span>, <span class="parameter">from-wildcard</span>, or <span class="parameter">to-wildcard</span>
is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream associated with a file">stream associated with a file</a>
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.  <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname-match-p">pathname-match-p</a> <span class="parameter">source from-wildcard</span>)</span>
</span></code></pre> must
be true or an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-namestring">namestring</a>,
<a class="function-reference" href="#function-pathname-host">pathname-host</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd>The exact behavior of <a class="function-reference" href="#function-translate-pathname">translate-pathname</a> cannot be dictated
by the <span class="explicit-roman">Common Lisp</span> language and must be allowed to vary, depending on the
user interface conventions of the file systems involved.<br/>The following is an implementation guideline.
One file system performs this operation by
    examining each piece of the three 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathnames</a> in turn, where a piece is a
    <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> component or a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> element of a structured component such as
    a hierarchical directory.  Hierarchical directory elements in
    <span class="parameter">from-wildcard</span> and 
<span class="parameter">to-wildcard</span> are matched by whether they are
    wildcards, not by depth in the directory hierarchy.  If the piece in
<span class="parameter">to-wildcard</span> is present and not wild, it is copied into the result.
    If the piece in <span class="parameter">to-wildcard</span> is 
<span class="keyword">:wild</span> or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, the piece in <span class="parameter">source</span> is
    copied into the result.  Otherwise, the piece in
<span class="parameter">to-wildcard</span> might be
    a complex wildcard such as <pre><code><span class="syntax-root"><span class="syntax-string">"foo*bar"</span>
</span></code></pre> and the piece in 
<span class="parameter">from-wildcard</span>
    should be wild; the portion of the piece in 
<span class="parameter">source</span> that matches the
    wildcard portion of the piece in 
<span class="parameter">from-wildcard</span> replaces the wildcard
    portion of the piece in 
<span class="parameter">to-wildcard</span> and the value produced is used in
    the result.<br/></dd></dl></div><br/>

<br/><div class="component" id="function-merge-pathnames"><div class="header"><span class="left"><span class="name" id="function-merge-pathnames">merge-pathnames</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">merge-pathnames</span>&nbsp;<span class="lambda-list">pathname <span class="lambda-list-keyword">&amp;optional</span> default-pathname default-version</span>&nbsp;â†’&nbsp;<span class="return-values">merged-pathname</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd>  
<span class="parameter">pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.

<span class="parameter">default-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname designator">pathname designator</a>.
 The default is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>.<br/><span class="parameter">default-version</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-valid pathname version">valid pathname version</a>.
 The default is <span class="keyword">:newest</span>.<br/><span class="parameter">merged-pathname</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Constructs a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a> from <span class="parameter">pathname</span> 
by filling in any unsupplied components with the corresponding values
from <span class="parameter">default-pathname</span> and <span class="parameter">default-version</span>. <br/>Defaulting of pathname components 
is done by filling in components taken from another <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.
This is especially useful for cases such as 
a program that has an input file and an output file.
Unspecified components of the output pathname will come from the input pathname,
except that the type should not default
to the type of the input pathname
but rather to the appropriate default type for output from the program;
for example, see the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-24.xhtml#function-compile-file-pathname">compile-file-pathname</a>.

If no version is supplied, <span class="parameter">default-version</span> is used.
If <span class="parameter">default-version</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, the version component will remain unchanged.<br/>If <span class="parameter">pathname</span> explicitly specifies a host and not a device, and 
if the host component of <span class="parameter">default-pathname</span> matches the host component
of <span class="parameter">pathname</span>, then the device is taken from the <span class="parameter">default-pathname</span>;
otherwise the device will be the default file device for that host.  If
<span class="parameter">pathname</span> does not specify a host, device, directory, name,
or type, each such component is copied from <span class="parameter">default-pathname</span>.
If <span class="parameter">pathname</span> does not specify a name, then the version, if not provided, will
come from <span class="parameter">default-pathname</span>, just like the other components.  If
<span class="parameter">pathname</span> does specify a name, then the version is not affected
by <span class="parameter">default-pathname</span>. If this process leaves the
version missing, the <span class="parameter">default-version</span> is used.
If the host's file name syntax provides a way
to input a version without a name or type, the user can let the name
and type default but supply a version different from the one in <span class="parameter">default-pathname</span>.<br/>If <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, <span class="parameter">pathname</span> effectively
becomes <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname">pathname</a> <span class="parameter">pathname</span>)</span>
</span></code></pre>. <a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a>
can be used on either an open or a closed <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>.

If <span class="parameter">pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>
it represents the name used to open the file. This may be, but is
not required to be, the actual name of the file. <br/><a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> recognizes a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
   when <span class="parameter">default-pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
or when the <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> begins with 
    the name of a defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical host">logical host</a> followed by a <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a>.
In the first of these two cases,
the host portion of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a>
and its following <a class="glossary-reference" href="chapter-26.xhtml#glossary-colon">colon</a> are optional.

<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> returns a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> if and only if
   its first argument is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>,
or its first argument is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-namestring">namestring</a> with an explicit host,
or its first argument does not specify a host 
    and the <span class="parameter">default-pathname</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-logical pathname">logical pathname</a>.
 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">Pathname</a> merging treats a relative directory specially.  
If <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">pathname</span>)</span>
</span></code></pre> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> whose
<a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> is <span class="keyword">:relative</span>, and 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">default-pathname</span>)</span>
</span></code></pre> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>, then
the merged directory is the value of<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-append">append</a> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">default-pathname</span>)</span>
        <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-cdr">cdr</a>  <span class="syntax-line-comment syntax-comment">;remove :relative from the front
</span>          <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">pathname</span>)</span>)</span>)</span>
</span></code></pre>
except that if the resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> contains a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> or <span class="keyword">:wild</span>
immediately followed by <span class="keyword">:back</span>, both of them are removed.  This removal of 
redundant <span class="keyword">:back</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-keyword">keywords</a> is repeated as many times as possible.
If <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">default-pathname</span>)</span>
</span></code></pre> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> or
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">pathname</span>)</span>
</span></code></pre> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> 
whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> is <span class="keyword">:relative</span>, the merged directory is
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">pathname</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="#function-pathname-directory">pathname-directory</a> <span class="parameter">default-pathname</span>)</span>)</span>
</span></code></pre>.

<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> maps customary case in <span class="parameter">pathname</span> 
into customary case in the output <a class="glossary-reference" href="chapter-26.xhtml#glossary-pathname">pathname</a>.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-merge-pathnames">merge-pathnames</a> <span class="syntax-string">"CMUC::FORMAT"</span>
                  <span class="syntax-string">"CMUC::PS:&lt;LISPIO&gt;.FASL"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-pathname">#P<span class="syntax-string">"CMUC::PS:&lt;LISPIO&gt;FORMAT.FASL.0"</span></span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="variable-reference" href="#variable-*default-pathname-defaults*">*default-pathname-defaults*</a>,
<a class="type-reference" href="#type-pathname">pathname</a>,
<a class="type-reference" href="#type-logical-pathname">logical-pathname</a>,
<a class="section-reference" href="chapter-20.xhtml#section-FileSystemConcepts">File System Concepts</a>,
<a class="section-reference" href="#section-PathnamesAsFilenames">Pathnames as Filenames</a>
</dd></dl><dl><dt class="label">Notes</dt><dd>The net effect 
is that if just a name is supplied, 
the host, device, directory, and type will come from <span class="parameter">default-pathname</span>, 
but the version will come from <span class="parameter">default-version</span>.
If nothing or just a directory is supplied,
the name, type, and version will come from <span class="parameter">default-pathname</span> together.<br/></dd></dl></div><br/></section></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>