<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="style.css"/><script src="permalink.js"/><script src="navigation.js"/><title>Well-specified Common Lisp â€” Types and Classes</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">Types and Classes</span><br/><ol class="local-toc"><li><a href="#section-TypesAndClassesIntroduction">Introduction</a><ol> </ol></li><li><a href="#section-Types">Types</a><ol> <li><a href="#section-DataTypeDefinition">Data Type Definition</a><ol> </ol></li><li><a href="#section-TypeRelationships">Type Relationships</a><ol> </ol></li><li><a href="#section-TypeSpecifiers">Type Specifiers</a><ol> </ol></li></ol></li><li><a href="#section-Classes">Classes</a><ol> <li><a href="#section-IntroductiontoClasses">Introduction to Classes</a><ol> </ol></li><li><a href="#section-StandardMetaclasses">Standard Metaclasses</a><ol> </ol></li><li><a href="#section-DefiningClasses">Defining Classes</a><ol> </ol></li><li><a href="#section-CreatingInstancesofClasses">Creating Instances of Classes</a><ol> </ol></li><li><a href="#section-Inheritance">Inheritance</a><ol> <li><a href="#section-ExamplesofInheritance">Examples of Inheritance</a><ol> </ol></li><li><a href="#section-InheritanceofClassOptions">Inheritance of Class Options</a><ol> </ol></li></ol></li><li><a href="#section-DeterminingtheCPL">Determining the Class Precedence List</a><ol> <li><a href="#section-TopologicalSorting">Topological Sorting</a><ol> </ol></li><li><a href="#section-ExamplesofClassPrecedenceListDetermination">Examples of Class Precedence List Determination</a><ol> </ol></li></ol></li><li><a href="#section-ClassReDef">Redefining Classes</a><ol> <li><a href="#section-ModifyingtheStructureofInstances">Modifying the Structure of Instances</a><ol> </ol></li><li><a href="#section-InitializingNewlyAddedLocalSlots">Initializing Newly Added Local Slots</a><ol> </ol></li><li><a href="#section-CustomizingClassRedefinition">Customizing Class Redefinition</a><ol> </ol></li></ol></li><li><a href="#section-IntegratingTypesAndClasses">Integrating Types and Classes</a><ol> </ol></li></ol></li><li><a href="#section-Dictionary">Dictionary</a><ol> <li><a href="#type-nil">nil</a></li><li><a href="#type-boolean">boolean</a></li><li><a href="#type-function">function</a></li><li><a href="#type-compiled-function">compiled-function</a></li><li><a href="#type-generic-function">generic-function</a></li><li><a href="#type-standard-generic-function">standard-generic-function</a></li><li><a href="#type-class">class</a></li><li><a href="#type-built-in-class">built-in-class</a></li><li><a href="#type-structure-class">structure-class</a></li><li><a href="#type-standard-class">standard-class</a></li><li><a href="#type-method">method</a></li><li><a href="#type-standard-method">standard-method</a></li><li><a href="#type-structure-object">structure-object</a></li><li><a href="#type-standard-object">standard-object</a></li><li><a href="#type-method-combination">method-combination</a></li><li><a href="#type-t">t</a></li><li><a href="#type-satisfies">satisfies</a></li><li><a href="#type-member">member</a></li><li><a href="#type-not">not</a></li><li><a href="#type-and">and</a></li><li><a href="#type-or">or</a></li><li><a href="#type-values">values</a></li><li><a href="#type-eql">eql</a></li><li><a href="#function-coerce">coerce</a></li><li><a href="#macro-deftype">deftype</a></li><li><a href="#function-subtypep">subtypep</a></li><li><a href="#function-type-of">type-of</a></li><li><a href="#function-typep">typep</a></li><li><a href="#type-type-error">type-error</a></li><li><a href="#function-type-error-datum">type-error-datum, type-error-expected-type</a></li><li><a href="#type-simple-type-error">simple-type-error</a></li><li><a href="#function-type-expand">type-expand, type-expand-1</a></li><li><a href="#function-type-macro-function">type-macro-function</a></li></ol></li></ol></nav><div class="content"><section id="section-ChapFour"><h1 class="section-title">4. Types and Classes</h1><section id="section-TypesAndClassesIntroduction"><h2 class="section-title">Introduction</h2>

A <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> is a (possibly infinite) set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.
An <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> can belong to more than one <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">Types</a> are never explicitly represented as <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> by <span class="explicit-roman">Common Lisp</span>.
Instead, they are referred to indirectly by the use of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>,
which are <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that denote <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.<br/>New <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> can be defined using <a class="macro-reference" href="#macro-deftype">deftype</a>, <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>, 
<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>, and <a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-typep">typep</a>, a set membership test, is used to determine
whether a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is of a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  The function
<a class="function-reference" href="#function-subtypep">subtypep</a>, a subset test, is used to determine whether a
given <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of another given <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  The
function <a class="function-reference" href="#function-type-of">type-of</a> returns a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> to
which a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> belongs, even though that <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>
must belong to one or more other <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> as well.
(For example, every <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-t">t</a>, 
 but <a class="function-reference" href="#function-type-of">type-of</a> always returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>
 for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> more specific than <a class="type-reference" href="#type-t">t</a>.)<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-object">Objects</a>, not <a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variables</a>, have <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.
Normally, any <a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variable</a> can have any <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> as its <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a>.
It is possible to declare that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variable</a> takes on only 
values of a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> by making an explicit <a class="glossary-reference" href="chapter-26.xhtml#glossary-type declaration">type declaration</a>.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">Types</a> are arranged in a directed acyclic graph, except
for the presence of equivalences. <br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-declaration">Declarations</a> can be made about <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> using <a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a>, 
<a class="function-reference" href="chapter-3.xhtml#function-proclaim">proclaim</a>, <a class="macro-reference" href="chapter-3.xhtml#macro-declaim">declaim</a>, or <a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a>.
For more information about <a class="glossary-reference" href="chapter-26.xhtml#glossary-declaration">declarations</a>,
see <span class="section-reference error">section:Declarations.</span><br/>Among the fundamental <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> of the object system are <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> determines the structure and behavior of a set of
other <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>, which are called its <span class="glossary-reference error">glossary:instances</span>. 
Every <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-direct instance">direct instance</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> determines the set of
operations that can be performed on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.
For more information, see <span class="section-reference error">section:Classes.</span><br/>It is possible to write <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> that have behavior <a class="glossary-reference" href="chapter-26.xhtml#glossary-specialized">specialized</a>
to the class of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> which are their <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a>.
For more information, see <span class="section-reference error">section:GFsAndMethods.</span><br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> 
is called its <span class="newterm">metaclass</span>.
For more information about <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclasses</a>,
see <span class="section-reference error">section:MetaObjects.</span>

</section><section id="section-Types"><h2 class="section-title">Types</h2>


<section id="section-DataTypeDefinition"><h3 class="section-title">Data Type Definition</h3>Information about <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> usage is located in 
the sections specified in <span class="figure-reference error">figure:TypeInfoXrefs.</span> 
<a class="figure-reference" href="#figure-ObjectSystemClasses">ObjectSystemClasses</a> lists some <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> 
that are particularly relevant to the object system.
<a class="figure-reference" href="chapter-9.xhtml#figure-StandardizedConditionTypes">StandardizedConditionTypes</a> lists the defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.<br/>
<span class="float" id="figure-TypeInfoXrefs"><table><tbody><tr><td><span class="explicit-bold"> Section</span> </td><td> Data Type </td></tr><tr><td>
<a class="section-reference" href="#section-Classes">Classes</a>                 </td><td> Object System types                </td></tr><tr><td><a class="section-reference" href="chapter-7.xhtml#section-Slots">Slots</a>                   </td><td> Object System types                </td></tr><tr><td><a class="section-reference" href="chapter-7.xhtml#section-ChapSeven">Objects</a>                 </td><td> Object System types                </td></tr><tr><td><a class="section-reference" href="chapter-7.xhtml#section-GFsAndMethods">Generic Functions and Methods</a>           </td><td> Object System types                </td></tr><tr><td><a class="section-reference" href="chapter-9.xhtml#section-ConditionSystemConcepts">Condition System Concepts</a> </td><td> Condition System types             </td></tr><tr><td><a class="section-reference" href="#section-ChapFour">Types and Classes</a>        </td><td> Miscellaneous types		     </td></tr><tr><td><a class="section-reference" href="chapter-2.xhtml#section-ChapTwo">Syntax</a>                 </td><td> All types&mdash;read and print syntax  </td></tr><tr><td><a class="section-reference" href="chapter-22.xhtml#section-TheLispPrinter">The Lisp Printer</a>          </td><td> All types&mdash;print syntax           </td></tr><tr><td><a class="section-reference" href="chapter-3.xhtml#section-Compilation">Compilation</a>             </td><td> All types&mdash;compilation issues     </td></tr></tbody></table><div class="caption">Cross-References to Data Type Information</div></span><br/>
</section><section id="section-TypeRelationships"><h3 class="section-title">Type Relationships</h3><br/><ul><div class="issue-annotation"><a class="issue-reference" href="issues/data-types-hierarchy-underspecified.xhtml#issue-data-types-hierarchy-underspecified">Issue DATA-TYPES-HIERARCHY-UNDERSPECIFIED</a><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> <a class="type-reference" href="chapter-14.xhtml#type-cons">cons</a>, <a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a>, <a class="type-reference" href="chapter-15.xhtml#type-array">array</a>, <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>,
<a class="type-reference" href="chapter-13.xhtml#type-character">character</a>, <a class="type-reference" href="chapter-18.xhtml#type-hash-table">hash-table</a>, 
<span class="issue-annotation"><a class="issue-reference" href="issues/function-type.xhtml#issue-function-type:x3j13-march-88">Issue FUNCTION-TYPE:X3J13-MARCH-88</a><a class="type-reference" href="#type-function">function</a>,
</span><a class="type-reference" href="chapter-23.xhtml#type-readtable">readtable</a>, <a class="type-reference" href="chapter-11.xhtml#type-package">package</a>, <a class="type-reference" href="chapter-19.xhtml#type-pathname">pathname</a>, <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>, 
<a class="type-reference" href="chapter-12.xhtml#type-random-state">random-state</a>, <a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>, <a class="type-reference" href="chapter-9.xhtml#type-restart">restart</a>,
and any single other <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> created by <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>,
<div class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><span class="issue-annotation"><a class="issue-reference" href="issues/clos-conditions.xhtml#issue-clos-conditions:integrate">Issue CLOS-CONDITIONS:INTEGRATE</a><a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>,
</span></div>or <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-pairwise">pairwise</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-disjoint">disjoint</a>, 
except for type relations explicitly established by specifying 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> in <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> 
<div class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><span class="issue-annotation"><a class="issue-reference" href="issues/clos-conditions.xhtml#issue-clos-conditions:integrate">Issue CLOS-CONDITIONS:INTEGRATE</a>or <a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a></span></div>or the <span class="keyword">:include</span> option of <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>.<br/></li></div><span class="issue-annotation"><a class="issue-reference" href="issues/data-types-hierarchy-underspecified.xhtml#issue-data-types-hierarchy-underspecified">Issue DATA-TYPES-HIERARCHY-UNDERSPECIFIED</a></span><li>Any two <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> created by <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> are 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-disjoint">disjoint</a> unless
one is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertype</a> of the other by virtue of
the <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> <span class="keyword">:include</span> option.<br/><span class="editor-note" id="editor-note-the-comments-in-the-"><span class="editor-note-tooltip"><span class="editor">KMP</span>: The comments in the source say gray suggested some change
from ``common superclass'' to ``common subclass'' in the following, but the
result looks suspicious to me.</span>â€£</span>

</li><li>Any two <a class="glossary-reference" href="chapter-26.xhtml#glossary-distinct">distinct</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> created by <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> 
or <a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>
are <a class="glossary-reference" href="chapter-26.xhtml#glossary-disjoint">disjoint</a> unless they have a common <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> or
one <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of the other.

<span class="issue-annotation"><a class="issue-reference" href="issues/common-type.xhtml#issue-common-type:remove">Issue COMMON-TYPE:REMOVE</a></span>
</li><li>An implementation may be extended to add other <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a>
relationships between the specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>, as long as they do
not violate the type relationships and disjointness requirements
specified here.  An implementation may define additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>
that are <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtypes</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertypes</a> of any
specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>, as long as each additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> is
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-t">t</a> and a <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertype</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-nil">nil</a> and the disjointness requirements
are not violated.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a>At the discretion of the implementation, either <a class="type-reference" href="#type-standard-object">standard-object</a>
or <a class="type-reference" href="#type-structure-object">structure-object</a> might appear in any class precedence list
for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-system class">system class</a> that does not already specify either 
<a class="type-reference" href="#type-standard-object">standard-object</a> or <a class="type-reference" href="#type-structure-object">structure-object</a>.  If it does,
it must precede the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-t">t</a> and follow all other <a class="glossary-reference" href="chapter-26.xhtml#glossary-standardized">standardized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.
</div>
</li></ul>                                     <br/></section><section id="section-TypeSpecifiers"><h3 class="section-title">Type Specifiers</h3><br/><span class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a></span>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">Type specifiers</a> can be <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>, or <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">lists</a>.
<a class="figure-reference" href="#figure-StandardizedAtomicTypeSpecs">StandardizedAtomicTypeSpecs</a> lists <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> that are
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-standardized">standardized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-atomic type specifier">atomic type specifiers</a>, and
<a class="figure-reference" href="#figure-StandardizedCompoundTypeSpecNames">StandardizedCompoundTypeSpecNames</a> lists
 <a class="glossary-reference" href="chapter-26.xhtml#glossary-standardized">standardized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-compound type specifier">compound type specifier</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a>.
For syntax information, see the dictionary entry for the corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.
It is possible to define new <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> using
 <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>,
 <a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>,
 <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>, 
or
 <a class="macro-reference" href="#macro-deftype">deftype</a>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue CHARACTER-VS-CHAR:LESS-INCONSISTENT-SHORT</span><div class="issue-annotation"><a class="issue-reference" href="issues/stream-access.xhtml#issue-stream-access:add-types-accessors">Issue STREAM-ACCESS:ADD-TYPES-ACCESSORS</a>

<span class="float" id="figure-StandardizedAtomicTypeSpecs"><table><tbody><tr><td><a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></td><td><a class="type-reference" href="#type-function">function</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-array">array</a></td><td><a class="type-reference" href="#type-generic-function">generic-function</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-error">simple-error</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-atom">atom</a></td><td><a class="type-reference" href="chapter-18.xhtml#type-hash-table">hash-table</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-string">simple-string</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-base-char">base-char</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></td><td><a class="type-reference" href="#type-simple-type-error">simple-type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-16.xhtml#type-base-string">base-string</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-keyword">keyword</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-vector">simple-vector</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-bignum">bignum</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-list">list</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-warning">simple-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-bit">bit</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-logical-pathname">logical-pathname</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-bit-vector">bit-vector</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a></td><td><a class="type-reference" href="chapter-13.xhtml#type-standard-char">standard-char</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-broadcast-stream">broadcast-stream</a></td><td><a class="type-reference" href="#type-method">method</a></td><td><a class="type-reference" href="#type-standard-class">standard-class</a></td></tr><tr><td><a class="type-reference" href="#type-built-in-class">built-in-class</a></td><td><a class="type-reference" href="#type-method-combination">method-combination</a></td><td><a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-cell-error">cell-error</a></td><td><a class="type-reference" href="#type-nil">nil</a></td><td><a class="type-reference" href="#type-standard-method">standard-method</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-character">character</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-null">null</a></td><td><a class="type-reference" href="#type-standard-object">standard-object</a></td></tr><tr><td><a class="type-reference" href="#type-class">class</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-number">number</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-storage-condition">storage-condition</a></td></tr><tr><td><a class="type-reference" href="#type-compiled-function">compiled-function</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package">package</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package-error">package-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-concatenated-stream">concatenated-stream</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-parse-error">parse-error</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-string">string</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-pathname">pathname</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-string-stream">string-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-cons">cons</a></td><td><a class="type-reference" href="chapter-22.xhtml#type-print-not-readable">print-not-readable</a></td><td><a class="type-reference" href="#type-structure-class">structure-class</a></td></tr><tr><td><a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-program-error">program-error</a></td><td><a class="type-reference" href="#type-structure-object">structure-object</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-division-by-zero">division-by-zero</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-random-state">random-state</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-style-warning">style-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-ratio">ratio</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-echo-stream">echo-stream</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-rational">rational</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-synonym-stream">synonym-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-end-of-file">end-of-file</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-reader-error">reader-error</a></td><td><a class="type-reference" href="#type-t">t</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-error">error</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-readtable">readtable</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-two-way-stream">two-way-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-extended-char">extended-char</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-real">real</a></td><td><a class="type-reference" href="#type-type-error">type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-restart">restart</a></td><td><a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-file-stream">file-stream</a></td><td><a class="type-reference" href="chapter-17.xhtml#type-sequence">sequence</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-serious-condition">serious-condition</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-float">float</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-unsigned-byte">unsigned-byte</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-inexact">floating-point-inexact</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-signed-byte">signed-byte</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-vector">vector</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-invalid-operation">floating-point-invalid-operation</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-array">simple-array</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-warning">warning</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-overflow">floating-point-overflow</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-base-string">simple-base-string</a></td><td/></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-bit-vector">simple-bit-vector</a></td><td/></tr></tbody></table><div class="caption">Standardized Atomic Type Specifiers</div></span><br/></div></div>
               
If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> 
is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, and the rest of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> is subsidiary
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> information.  Such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> is called 
a <span class="newterm">compound type specifier</span>.
Except as explicitly stated otherwise,
the subsidiary items can be unspecified.
The unspecified subsidiary items are indicated
by writing <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code>.  For example, to completely specify
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-vector">vector</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> of the elements
and the length of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-vector">vector</a> must be present.<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a> <span class="syntax-number">100</span>)</span>
</span></code></pre>
The following leaves the length unspecified:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a>)</span>
</span></code></pre>
The following leaves the element type unspecified:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">100</span>)</span>                                      
</span></code></pre>
Suppose that two <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> are the same except that the first
has a <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code> where the second has a more explicit specification.
Then the second denotes a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> 
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> denoted by the first.<br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> has one or more unspecified items at the end, 
those items can be dropped.
If dropping all occurrences of <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code> results in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-singleton">singleton</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>,
then the parentheses can be dropped as well (the list can be replaced
by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> in its <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a>).  
For example,                       
<span class="explicit-mono">(vector double-float *)</span>                    
can be abbreviated to <span class="explicit-mono">(vector double-float)</span>,               
and <span class="explicit-mono">(vector * *)</span> can be abbreviated to <span class="explicit-mono">(vector)</span> 
and then to 
<span class="explicit-mono">vector</span>.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/real-number-type.xhtml#issue-real-number-type:x3j13-mar-89">Issue REAL-NUMBER-TYPE:X3J13-MAR-89</a>
<span class="float" id="figure-StandardizedCompoundTypeSpecNames"><table><tbody><tr><td><a class="type-reference" href="#type-and">and</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-base-string">simple-base-string</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-array">array</a></td><td><a class="type-reference" href="#type-member">member</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-bit-vector">simple-bit-vector</a></td></tr><tr><td><a class="type-reference" href="chapter-16.xhtml#type-base-string">base-string</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-mod">mod</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-string">simple-string</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-bit-vector">bit-vector</a></td><td><a class="type-reference" href="#type-not">not</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-vector">simple-vector</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a></td><td><a class="type-reference" href="#type-or">or</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-cons">cons</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-rational">rational</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-string">string</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-real">real</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-unsigned-byte">unsigned-byte</a></td></tr><tr><td><a class="type-reference" href="#type-eql">eql</a></td><td><a class="type-reference" href="#type-satisfies">satisfies</a></td><td><a class="type-reference" href="#type-values">values</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-float">float</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-vector">vector</a></td></tr><tr><td><a class="type-reference" href="#type-function">function</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-signed-byte">signed-byte</a></td><td/></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-array">simple-array</a></td><td/></tr></tbody></table><div class="caption">Standardized Compound Type Specifier Names</div></span></div>
Figure <span class="explicit-mono">()</span>&ndash; show the <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> that can be used as 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-compound type specifier">compound type specifier</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a>
but that cannot be used as <a class="glossary-reference" href="chapter-26.xhtml#glossary-atomic type specifier">atomic type specifiers</a>.<br/><span class="float" id="figure-Standardized Compound-Only Type Specifier Names"><table><tbody><tr><td><a class="type-reference" href="#type-and">and</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-mod">mod</a></td><td><a class="type-reference" href="#type-satisfies">satisfies</a></td></tr><tr><td><a class="type-reference" href="#type-eql">eql</a></td><td><a class="type-reference" href="#type-not">not</a></td><td><a class="type-reference" href="#type-values">values</a></td></tr><tr><td><a class="type-reference" href="#type-member">member</a></td><td><a class="type-reference" href="#type-or">or</a></td><td/></tr></tbody></table><div class="caption">Standardized Compound-Only Type Specifier Names</div></span><br/>
New <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> can come into existence in two ways.
<ul><li>Defining a structure by using <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> without using
 the <span class="keyword">:type</span> specifier or defining a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> by using 
 <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> 
 or <a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>
 automatically causes the name of the structure 
 or class to be a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.
</li><li><a class="macro-reference" href="#macro-deftype">deftype</a> can be used to define <span class="newterm">derived type specifiers</span>,
 which act as `abbreviations' for other <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>.
</li></ul><br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> can be used as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>. 
When used this way, it denotes the set of all members of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.<br/>Figure <span class="explicit-mono">()</span>&ndash; shows some <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> relating to 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-declaration">declarations</a>.<br/>
<span class="float" id="figure-TypesAndDeclsNames"><table><tbody><tr><td><a class="function-reference" href="#function-coerce">coerce</a></td><td><a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a></td><td><a class="function-reference" href="#function-subtypep">subtypep</a></td></tr><tr><td><a class="macro-reference" href="chapter-3.xhtml#macro-declaim">declaim</a></td><td><a class="macro-reference" href="#macro-deftype">deftype</a></td><td><a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a></td></tr><tr><td><a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a></td><td><a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a></td><td><a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a></td></tr><tr><td><a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a></td><td><a class="special-operator-reference" href="chapter-3.xhtml#special-operator-locally">locally</a></td><td><a class="function-reference" href="#function-type-of">type-of</a></td></tr><tr><td><a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a></td><td><a class="function-reference" href="chapter-3.xhtml#function-proclaim">proclaim</a></td><td><a class="function-reference" href="#function-typep">typep</a></td></tr></tbody></table><div class="caption">Defined names relating to types and declarations.</div></span><br/>Figure <span class="explicit-mono">()</span>&ndash; shows all <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> that are <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a>,
whether for <a class="glossary-reference" href="chapter-26.xhtml#glossary-atomic type specifier">atomic type specifiers</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-compound type specifier">compound type specifiers</a>;
this list is the union of the lists in <a class="figure-reference" href="#figure-StandardizedAtomicTypeSpecs">StandardizedAtomicTypeSpecs</a> 
and <span class="figure-reference error">figure:StandardizedCompoundTypeSpecNames.</span><br/>
<span class="float" id="figure-StandardizedTypeSpecifierNames"><table><tbody><tr><td><a class="type-reference" href="#type-and">and</a></td><td><a class="type-reference" href="#type-function">function</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-array">simple-array</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></td><td><a class="type-reference" href="#type-generic-function">generic-function</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-base-string">simple-base-string</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-array">array</a></td><td><a class="type-reference" href="chapter-18.xhtml#type-hash-table">hash-table</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-bit-vector">simple-bit-vector</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-atom">atom</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-base-char">base-char</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-keyword">keyword</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-error">simple-error</a></td></tr><tr><td><a class="type-reference" href="chapter-16.xhtml#type-base-string">base-string</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-list">list</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-simple-string">simple-string</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-bignum">bignum</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-logical-pathname">logical-pathname</a></td><td><a class="type-reference" href="#type-simple-type-error">simple-type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-bit">bit</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-simple-vector">simple-vector</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-bit-vector">bit-vector</a></td><td><a class="type-reference" href="#type-member">member</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-warning">simple-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-broadcast-stream">broadcast-stream</a></td><td><a class="type-reference" href="#type-method">method</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a></td></tr><tr><td><a class="type-reference" href="#type-built-in-class">built-in-class</a></td><td><a class="type-reference" href="#type-method-combination">method-combination</a></td><td><a class="type-reference" href="chapter-13.xhtml#type-standard-char">standard-char</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-cell-error">cell-error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-mod">mod</a></td><td><a class="type-reference" href="#type-standard-class">standard-class</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-character">character</a></td><td><a class="type-reference" href="#type-nil">nil</a></td><td><a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a></td></tr><tr><td><a class="type-reference" href="#type-class">class</a></td><td><a class="type-reference" href="#type-not">not</a></td><td><a class="type-reference" href="#type-standard-method">standard-method</a></td></tr><tr><td><a class="type-reference" href="#type-compiled-function">compiled-function</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-null">null</a></td><td><a class="type-reference" href="#type-standard-object">standard-object</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-number">number</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-storage-condition">storage-condition</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-concatenated-stream">concatenated-stream</a></td><td><a class="type-reference" href="#type-or">or</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package">package</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-cons">cons</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package-error">package-error</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-string">string</a></td></tr><tr><td><a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-parse-error">parse-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-string-stream">string-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-division-by-zero">division-by-zero</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-pathname">pathname</a></td><td><a class="type-reference" href="#type-structure-class">structure-class</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a></td><td><a class="type-reference" href="chapter-22.xhtml#type-print-not-readable">print-not-readable</a></td><td><a class="type-reference" href="#type-structure-object">structure-object</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-echo-stream">echo-stream</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-program-error">program-error</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-style-warning">style-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-end-of-file">end-of-file</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-random-state">random-state</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a></td></tr><tr><td><a class="type-reference" href="#type-eql">eql</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-ratio">ratio</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-synonym-stream">synonym-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-error">error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-rational">rational</a></td><td><a class="type-reference" href="#type-t">t</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-extended-char">extended-char</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-reader-error">reader-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-two-way-stream">two-way-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-readtable">readtable</a></td><td><a class="type-reference" href="#type-type-error">type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-file-stream">file-stream</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-real">real</a></td><td><a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-restart">restart</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-float">float</a></td><td><a class="type-reference" href="#type-satisfies">satisfies</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-inexact">floating-point-inexact</a></td><td><a class="type-reference" href="chapter-17.xhtml#type-sequence">sequence</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-unsigned-byte">unsigned-byte</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-invalid-operation">floating-point-invalid-operation</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-serious-condition">serious-condition</a></td><td><a class="type-reference" href="#type-values">values</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-overflow">floating-point-overflow</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-vector">vector</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-signed-byte">signed-byte</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-warning">warning</a></td></tr></tbody></table><div class="caption">Standardized Type Specifier Names</div></span><br/></section>
</section><section id="section-Classes"><h2 class="section-title">Classes</h2>

While the object system is general enough to describe all <a class="glossary-reference" href="chapter-26.xhtml#glossary-standardized">standardized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>
(including, for example, <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>, <a class="type-reference" href="chapter-18.xhtml#type-hash-table">hash-table</a>, and
<a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a>), Figure <span class="explicit-mono">()</span>&ndash; contains a list of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> that are
especially relevant to understanding the object system.<br/>
<span class="float" id="figure-ObjectSystemClasses"><table><tbody><tr><td><a class="type-reference" href="#type-built-in-class">built-in-class</a></td><td><a class="symbol-reference" href="chapter-25.xhtml#symbol-method-combination">method-combination</a></td><td><a class="type-reference" href="#type-standard-object">standard-object</a></td></tr><tr><td><a class="type-reference" href="#type-class">class</a></td><td><a class="type-reference" href="#type-standard-class">standard-class</a></td><td><a class="type-reference" href="#type-structure-class">structure-class</a></td></tr><tr><td><a class="type-reference" href="#type-generic-function">generic-function</a></td><td><a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a></td><td><a class="type-reference" href="#type-structure-object">structure-object</a></td></tr><tr><td><a class="type-reference" href="#type-method">method</a></td><td><a class="type-reference" href="#type-standard-method">standard-method</a></td><td/></tr></tbody></table><div class="caption">Object System Classes</div></span><br/><section id="section-IntroductiontoClasses"><h3 class="section-title">Introduction to Classes</h3>A <span class="newterm">class</span> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> that determines the structure and behavior 
of a set of other <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>, which are called its <span class="newterm">instances</span>.   <br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> can inherit structure and behavior from other <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> whose definition refers to other <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> for the purpose 
of inheriting from them is said to be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of each of
those <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>. The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> that are designated for purposes of
inheritance are said to be <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> of the inheriting <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> can have a <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a>. The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-7.xhtml#function-class-name">class-name</a> 
takes a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> and returns its <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a>. 
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of an anonymous <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.  A <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> 
can <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>. The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-7.xhtml#function-find-class">find-class</a> takes a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> and returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> names.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> has a <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a> if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>
and if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> names that <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.
That is, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a><math xmlns="http://www.w3.org/1998/Math/MathML">C</math> has the <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a><math xmlns="http://www.w3.org/1998/Math/MathML">S</math> if <math xmlns="http://www.w3.org/1998/Math/MathML">S=</math>
<code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-class-name">class-name</a> <math xmlns="http://www.w3.org/1998/Math/MathML">C</math>)</span>
</span></code> and <math xmlns="http://www.w3.org/1998/Math/MathML">C=</math> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-find-class">find-class</a> <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>)</span>
</span></code>.
Notice that it is possible for 
<code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-find-class">find-class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>1</mo></msub></math>)</span>
</span></code> = <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-find-class">find-class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>2</mo></msub></math>)</span>
</span></code>
and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>1</mo></msub><mo>â‰ </mo><msub><mrow>S</mrow><mo>2</mo></msub></math>.
If <math xmlns="http://www.w3.org/1998/Math/MathML">C=</math> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-find-class">find-class</a> <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>)</span>
</span></code>, we say that <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">named</a> <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> is 
a <span class="newterm">direct superclass</span> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math>
if <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math> explicitly designates <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> 
as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> in its definition.
In this case <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math> is a <span class="newterm">direct subclass</span> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>n</mo></msub></math> is a <span class="newterm">superclass</span> of 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> if there exists a series of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub>,<mi>â€¦</mi><msub><mrow>,C</mrow><mo>n-1</mo></msub></math> such that 
<math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>i+1</mo></msub></math> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-direct superclass">direct superclass</a> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>i</mo></msub></math> for <math xmlns="http://www.w3.org/1998/Math/MathML">1 <mo>â‰¤</mo>i&lt;n</math>.
In this case, <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> is a <span class="newterm">subclass</span> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>n</mo></msub></math>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is considered neither a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> nor a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of itself.
That is, if <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math>, 
then <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub><mo>â‰ </mo><msub><mrow>C</mrow><mo>2</mo></msub></math>.
The set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> consisting of some given <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> 
along with all of its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> is called ``<math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and its superclasses.''<br/>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> has a <span class="newterm">class precedence list</span>,
which is a total ordering on the set of the given <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.
The total ordering is expressed as a list ordered from most specific to least specific.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> is used in several ways.  In general, more
specific <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> can <span class="newterm">shadow</span><sub>1</sub> features that would
otherwise be inherited from less specific <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> selection and combination process uses 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> to order <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> 
from most specific to least specific. <br/>When a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is defined, the order in which its direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>
are mentioned in the defining form is important.  Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> has a
<span class="newterm">local precedence order</span>, which is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> consisting of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> followed by its <a class="glossary-reference" href="chapter-26.xhtml#glossary-direct superclass">direct superclasses</a> in the order mentioned
in the defining <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> is always consistent with the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local precedence order">local precedence order</a> of each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> in the list.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> in each <a class="glossary-reference" href="chapter-26.xhtml#glossary-local precedence order">local precedence order</a> appear
within the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> in the same order.  
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-local precedence order">local precedence orders</a> are inconsistent with each other, 
no <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> can be constructed, and an error is signaled.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> and its computation is discussed
in <a class="section-reference" href="#section-DeterminingtheCPL">Determining the Class Precedence List</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> are organized into a directed acyclic graph.
There are two distinguished <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>, named <a class="type-reference" href="#type-t">t</a> and <a class="type-reference" href="#type-standard-object">standard-object</a>.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> named <a class="type-reference" href="#type-t">t</a> has no <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>. 
It is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> except itself.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> named <a class="type-reference" href="#type-standard-object">standard-object</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a> and is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of
every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a> except itself.<br/><span class="reviewer-note" id="reviewer-note-this-or-something-li"><span class="reviewer-note-tooltip"><span class="reviewer">Barmar</span>: This or something like it needs to be said in the introduction.</span>â€£</span>There is a mapping from the object system <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> space into
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> space.  Many of the standard <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> specified 
in this document have a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that has the same 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> as the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>. Some <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> do not have a
corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>. The integration of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>
systems is discussed in <a class="section-reference" href="#section-IntegratingTypesAndClasses">Integrating Types and Classes</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-class">Classes</a> are represented by <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that are themselves
<span class="glossary-reference error">glossary:instances</span> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>. 
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is termed
the <span class="newterm">metaclass</span> of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>. When no misinterpretation is
possible, the term <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclass</a> is used to refer to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>
that has <span class="glossary-reference error">glossary:instances</span> that are themselves <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>. The <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclass</a>
determines the form of inheritance used by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> that are its
<span class="glossary-reference error">glossary:instances</span> and the representation of the <span class="glossary-reference error">glossary:instances</span> of those <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.
The object system provides a default <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclass</a>, <a class="type-reference" href="#type-standard-class">standard-class</a>, that is
appropriate for most programs.

Except where otherwise specified, all <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> mentioned in this
standard are <span class="glossary-reference error">glossary:instances</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a>,
all <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic functions</a> are <span class="glossary-reference error">glossary:instances</span> 
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a>,
and all <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> are <span class="glossary-reference error">glossary:instances</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-method">standard-method</a>.<br/>
</section><section id="section-StandardMetaclasses"><h4 class="section-title">Standard Metaclasses</h4>The object system provides a number of predefined <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclasses</a>. 
These include the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> <a class="type-reference" href="#type-standard-class">standard-class</a>, 
<a class="type-reference" href="#type-built-in-class">built-in-class</a>, and <a class="type-reference" href="#type-structure-class">structure-class</a>:<br/><ul><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a> is the default <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> defined by <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>.<br/></li><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-built-in-class">built-in-class</a> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> whose
<span class="glossary-reference error">glossary:instances</span> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> that have special implementations with
restricted capabilities.  Any <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that corresponds to a standard
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> might be an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of <a class="type-reference" href="#type-built-in-class">built-in-class</a>.
The predefined <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> specifiers that are required to have
corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> are listed in <span class="figure-reference error">figure:ClassTypeCorrespondence.</span>  
It is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> whether each of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> 
is implemented as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>.<br/></li><li>All <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> defined by means of <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> are
<span class="glossary-reference error">glossary:instances</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-structure-class">structure-class</a>.
</li></ul><br/></section><section id="section-DefiningClasses"><h3 class="section-title">Defining Classes</h3>The macro <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> is used to define a new named <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  

The definition of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> includes:<br/><ul><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>. 
  For newly-defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> this <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a>.<br/></li><li>The list of the direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> of the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>. <br/></li><li>A set of <span class="newterm">slot specifiers</span>.
  Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot specifier">slot specifier</a> includes the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> 
  and zero or more <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> options.  A <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> option pertains 
  only to a single <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definition contains
  two <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot specifier">slot specifiers</a> with the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a>, an error is signaled.<br/></li><li>A set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> options.  
  Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> option pertains to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> as a whole.  <br/></li></ul><br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> options and <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> options of 
the <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form provide mechanisms for the following:<br/><ul><li>Supplying a default initial value <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> 
for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  <br/></li><li>Requesting that <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> for <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic functions</a>
be automatically generated for reading or writing <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>. <br/></li><li>Controlling whether a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> is shared by 
all <span class="glossary-reference error">glossary:instances</span>
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> or whether each 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> has its own <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.<br/></li><li>Supplying a set of initialization arguments and initialization
argument defaults to be used in <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> creation.<br/>
</li><li>Indicating that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclass</a> is to be other 
than the default.  The <span class="keyword">:metaclass</span> option is reserved for future use; 
an implementation can be extended to make use of the <span class="keyword">:metaclass</span>
option.<br/></li><li>Indicating the expected <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> for the value stored
in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.<br/></li><li>Indicating the <a class="glossary-reference" href="chapter-26.xhtml#glossary-documentation string">documentation string</a> for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.<br/></li></ul> <br/></section><br/><section id="section-CreatingInstancesofClasses"><h3 class="section-title">Creating Instances of Classes</h3>The generic function <a class="function-reference" href="chapter-7.xhtml#function-make-instance">make-instance</a> creates and returns a new
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  
The object system provides several mechanisms for
specifying how a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> is to be initialized.  For example, it
is possible to specify the initial values for <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> in newly created
<span class="glossary-reference error">glossary:instances</span> 
either by giving arguments to <a class="function-reference" href="chapter-7.xhtml#function-make-instance">make-instance</a> or by
providing default initial values.  Further initialization activities
can be performed by <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> written for <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic functions</a> 
that are
part of the initialization protocol.  The complete initialization
protocol is described in <a class="section-reference" href="chapter-7.xhtml#section-ObjectCreationAndInit">Object Creation and Initialization</a>.<br/></section><section id="section-Inheritance"><h3 class="section-title">Inheritance</h3><br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> can inherit <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>, 
and some <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> options from its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.  
Other sections describe the inheritance of <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>, 
the inheritance of <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> options, 
and the inheritance of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> options.<br/>
<div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><section id="section-ExamplesofInheritance"><h4 class="section-title">Examples of Inheritance</h4><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">C1</span> <span class="syntax-symbol">()</span> 
     <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">S1</span> <span class="syntax-keyword-symbol">:initform</span> <span class="syntax-number">5.4</span> <span class="syntax-keyword-symbol">:type</span> <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>)</span> 
      <span class="syntax-cons">(<span class="syntax-interned-symbol">S2</span> <span class="syntax-keyword-symbol">:allocation</span> <span class="syntax-keyword-symbol">:class</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">C2</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">C1</span>)</span> 
     <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">S1</span> <span class="syntax-keyword-symbol">:initform</span> <span class="syntax-number">5</span> <span class="syntax-keyword-symbol">:type</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">S2</span> <span class="syntax-keyword-symbol">:allocation</span> <span class="syntax-keyword-symbol">:instance</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">S3</span> <span class="syntax-keyword-symbol">:accessor</span> <span class="syntax-interned-symbol">C2-S3</span>)</span>)</span>)</span>
</span></code></pre><br/><span class="glossary-reference error">glossary:Instances</span> of the class <code><span class="syntax-root"><span class="syntax-interned-symbol">C1</span>
</span></code> have a <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slot</a> named <code><span class="syntax-root"><span class="syntax-interned-symbol">S1</span>
</span></code>,
whose default initial value is 5.4 and
whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> should always be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-number">number</a>.
The class <code><span class="syntax-root"><span class="syntax-interned-symbol">C1</span>
</span></code> also has a <a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slot</a> named <code><span class="syntax-root"><span class="syntax-interned-symbol">S2</span>
</span></code>.<br/>There is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slot</a> named <code><span class="syntax-root"><span class="syntax-interned-symbol">S1</span>
</span></code> in <span class="glossary-reference error">glossary:instances</span> of <code><span class="syntax-root"><span class="syntax-interned-symbol">C2</span>
</span></code>.
The default initial value of <code><span class="syntax-root"><span class="syntax-interned-symbol">S1</span>
</span></code> is 5.
The value of <code><span class="syntax-root"><span class="syntax-interned-symbol">S1</span>
</span></code> should always be of type <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>)</span>
</span></code>.
There are also <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> named <code><span class="syntax-root"><span class="syntax-interned-symbol">S2</span>
</span></code> and <code><span class="syntax-root"><span class="syntax-interned-symbol">S3</span>
</span></code> in <span class="glossary-reference error">glossary:instances</span> of <code><span class="syntax-root"><span class="syntax-interned-symbol">C2</span>
</span></code>.
The class <code><span class="syntax-root"><span class="syntax-interned-symbol">C2</span>
</span></code> has a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> for <code><span class="syntax-root"><span class="syntax-interned-symbol">C2-S3</span>
</span></code> for reading the value of slot <code><span class="syntax-root"><span class="syntax-interned-symbol">S3</span>
</span></code>;
there is also a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> for <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-interned-symbol">C2-S3</span>)</span>
</span></code> that writes the value of <code><span class="syntax-root"><span class="syntax-interned-symbol">S3</span>
</span></code>.<br/></section></div><section id="section-InheritanceofClassOptions"><h4 class="section-title">Inheritance of Class Options</h4>The <span class="keyword">:default-initargs</span> class option is inherited.  The set of
defaulted initialization arguments for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is the union of the
sets of initialization arguments supplied in
the <span class="keyword">:default-initargs</span> class options of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.
When more than one default initial value <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> is supplied for a given
initialization argument, the default initial value <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that is used
is the one supplied by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that is most specific according to
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a>.<br/>
If a given <span class="keyword">:default-initargs</span> class option specifies an
initialization argument of the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> more than once, an
error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-program-error">program-error</a> is signaled.<br/></section></section><section id="section-DeterminingtheCPL"><h3 class="section-title">Determining the Class Precedence List</h3><br/>The <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> provides a total ordering
on that <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and its direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.  This ordering is
called the <span class="newterm">local precedence order</span>.  It is an ordered list of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and its direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>. The
<span class="newterm">class precedence list</span> for a class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is a total ordering on
<math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> that is consistent with the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local precedence order">local precedence orders</a> for each of <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> precedes its direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>, 
and a direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> precedes all other 
direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> specified to its right 
in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> list of the <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form.  
For every class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math>, define <math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><msub><mrow>R</mrow><mo><msub><mrow>C={(C,C</mrow><mo><msub><mrow>1),(C</mrow><mo><msub><mrow>1,C</mrow><mo>2),</mo></msub></mo></msub></mo></msub></mo></msub><mi>â€¦</mi><msub><mrow>,(C</mrow><mo>n-1</mo></msub><msub><mrow>,C</mrow><mo>n)}</mo></msub></math>where <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1,</mo></msub><mi>â€¦</mi><msub><mrow>,C</mrow><mo>n</mo></msub></math> are
the direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> of <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> in the order in which
they are mentioned in the <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form. These ordered pairs
generate the total ordering on the class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and its direct
<a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.<br/>Let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> be the set of <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>. Let <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> be
<math xmlns="http://www.w3.org/1998/Math/MathML" display="block">R=<msub><mrow><mo>â‹ƒ</mo></mrow><mo>c<mo>âˆˆ</mo> <msub><mrow>S</mrow><mo>C</mo></msub></mo></msub><msub><mrow>R</mrow><mo>c</mo></msub></math>.<br/><span class="reviewer-note" id="reviewer-note-``consistent''-needs"><span class="reviewer-note-tooltip"><span class="reviewer">Barmar</span>: ``Consistent'' needs to be defined, or maybe we should say
``logically consistent''?</span>â€£</span>
The set <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> might or might not generate a partial ordering, depending on
whether the <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>c</mo></msub></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">c<mo>âˆˆ</mo><msub><mrow>S</mrow><mo>C</mo></msub></math>, are 
consistent; it is assumed
that they are consistent and that <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> generates a partial ordering.
When the <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>c</mo></msub></math> are not consistent, it is said that <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> is inconsistent.<br/>
To compute the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> for<math xmlns="http://www.w3.org/1998/Math/MathML">C</math>,
topologically sort the elements of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> with respect to the
partial ordering generated by <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>.  When the topological
sort must select a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> from a set of two or more 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>, none of
which are preceded by other <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> with respect to<math xmlns="http://www.w3.org/1998/Math/MathML">R</math>,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> selected is chosen deterministically, as described below.<br/>If <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> is inconsistent, an error is signaled.<br/>
<br/><section id="section-TopologicalSorting"><h4 class="section-title">Topological Sorting</h4>Topological sorting proceeds by finding a class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> in<math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> such
that no other <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> precedes that element according to the elements
in<math xmlns="http://www.w3.org/1998/Math/MathML">R</math>.  The class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is placed first in the result.
Remove <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> from <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math>, and remove all pairs of the form <math xmlns="http://www.w3.org/1998/Math/MathML">(C,D)</math>,
<math xmlns="http://www.w3.org/1998/Math/MathML">D<mo>âˆˆ</mo><msub><mrow>S</mrow><mo>C</mo></msub></math>, from <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>. Repeat the process, adding
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> with no predecessors to the end of the result.  Stop when no
element can be found that has no predecessor.<br/>If <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> is not empty and the process has stopped, the set <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> is
inconsistent. If every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> in the finite set of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> is preceded
by another, then <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> contains a loop. That is, there is a chain of
classes <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1,</mo></msub><mi>â€¦</mi><msub><mrow>,C</mrow><mo>n</mo></msub></math> such that <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>i</mo></msub></math> precedes
<math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>i+1</mo></msub></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">1<mo>â‰¤</mo>i&lt;n</math>, and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>n</mo></msub></math> precedes <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math>.<br/>Sometimes there are several <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> from <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> with no
predecessors.  In this case select the one that has a direct
<a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> rightmost in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> computed so far.
(If there is no such candidate <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>, <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> does not generate 
a partial ordering&mdash;the <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>c</mo></msub></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">c<mo>âˆˆ</mo><msub><mrow>S</mrow><mo>C</mo></msub></math>, are inconsistent.)<br/>In more precise terms, let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>{N</mrow><mo>1,</mo></msub><mi>â€¦</mi><msub><mrow>,N</mrow><mo>m}</mo></msub></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">m<mo>â‰¥</mo>2</math>, be
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> from <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>C</mo></msub></math> with no predecessors.  Let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>(C</mrow><mo>1</mo></msub><mi>â€¦</mi><msub><mrow>C</mrow><mo>n)</mo></msub></math>, <math xmlns="http://www.w3.org/1998/Math/MathML">n<mo>â‰¥</mo>1</math>, be the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a>
constructed so far.  <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> is the most specific <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>, and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>n</mo></msub></math> is the least specific.  Let <math xmlns="http://www.w3.org/1998/Math/MathML">1<mo>â‰¤</mo>j<mo>â‰¤</mo>n</math> be the largest number
such that there exists an <math xmlns="http://www.w3.org/1998/Math/MathML">i</math> where <math xmlns="http://www.w3.org/1998/Math/MathML">1<mo>â‰¤</mo>i<mo>â‰¤</mo>m</math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>N</mrow><mo>i</mo></msub></math>
is a direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>j</mo></msub></math>; <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>N</mrow><mo>i</mo></msub></math> is placed next.<br/>
The effect of this rule for selecting from a set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> with no
predecessors is that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> in a simple <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> chain are
adjacent in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> and that <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> in each
relatively separated subgraph are adjacent in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a>.
For example, let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>1</mo></msub></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>2</mo></msub></math> be subgraphs whose only
element in common is the class <math xmlns="http://www.w3.org/1998/Math/MathML">J</math>.
Suppose that no superclass of <math xmlns="http://www.w3.org/1998/Math/MathML">J</math> appears in either <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>1</mo></msub></math> or <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>2</mo></msub></math>,
and that <math xmlns="http://www.w3.org/1998/Math/MathML">J</math> is in the superclass chain of every class in both <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>1</mo></msub></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>2</mo></msub></math>.
    Let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> be the bottom of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>1</mo></msub></math>; 
and let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math> be the bottom of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>2</mo></msub></math>.
Suppose <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> whose direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>
are <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>1</mo></msub></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>C</mrow><mo>2</mo></msub></math> in that order, then the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a>
for <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> starts with <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> and is followed by
all <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> in <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>1</mo></msub></math> except <math xmlns="http://www.w3.org/1998/Math/MathML">J</math>. 
All the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>T</mrow><mo>2</mo></msub></math> are next.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML">J</math> and its <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> appear last.<br/></section><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><section id="section-ExamplesofClassPrecedenceListDetermination"><h4 class="section-title">Examples of Class Precedence List Determination</h4>This example determines a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> for the
class <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code>.  The following <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> are defined:<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">pie</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">apple</span> <span class="syntax-interned-symbol">cinnamon</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">apple</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">fruit</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">cinnamon</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">spice</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">fruit</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">food</span>)</span> <span class="syntax-symbol">()</span>)</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">spice</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">food</span>)</span> <span class="syntax-symbol">()</span>)</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">food</span> <span class="syntax-symbol">()</span> <span class="syntax-symbol">()</span>)</span>
</span></code></pre><br/>The set <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>S</mrow><mo>pie</mo></msub></math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">pie, apple, cinnamon, fruit, spice, food,
standard-object, t</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>. The set <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">(pie, apple),
(apple, cinnamon), (apple, fruit), (cinnamon, spice), 
(fruit, food), (spice, food), (food, standard-object), (standard-object,
t)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>.<br/>The class <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> is not preceded by anything, so it comes first;
the result so far is <span class="explicit-mono">(pie)</span>.  Remove <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> from <math xmlns="http://www.w3.org/1998/Math/MathML">S</math> and pairs
mentioning <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> from <math xmlns="http://www.w3.org/1998/Math/MathML">R</math> to get <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">apple, cinnamon,
fruit, spice, food, standard-object, t</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>=<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">(apple, cinnamon), (apple, fruit), (cinnamon, spice), (fruit,
food), (spice, food), (food, standard-object),
(standard-object, t)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>.<br/>The class <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> is not preceded by anything, so it is next; the
result is <span class="explicit-mono">(pie apple)</span>. Removing <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> and the relevant
pairs results in <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">cinnamon, fruit, spice, food,
standard-object, t</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math> and <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">(cinnamon, spice),
(fruit, food), (spice, food), (food, standard-object),
(standard-object, t)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>.<br/>The classes <code><span class="syntax-root"><span class="syntax-interned-symbol">cinnamon</span>
</span></code> and <span class="explicit-mono">fruit</span> are not preceded by
anything, so the one with a direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> rightmost in the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> computed so far goes next.  The class <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> is a
direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of <span class="explicit-mono">fruit</span>, and the class <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> is a direct
<a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of <code><span class="syntax-root"><span class="syntax-interned-symbol">cinnamon</span>
</span></code>.  Because <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> appears to the right
of <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a>, 
<span class="explicit-mono">fruit</span> goes next, and the
result so far is <span class="explicit-mono">(pie apple fruit)</span>.  <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">cinnamon,
spice, food, standard-object, t</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>; <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">(cinnamon,
spice), (spice, food), (food, standard-object),
(standard-object, t)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>.<br/>The class <code><span class="syntax-root"><span class="syntax-interned-symbol">cinnamon</span>
</span></code> is next, giving the result so far as <span class="explicit-mono">(pie apple fruit cinnamon)</span>.  At this point <math xmlns="http://www.w3.org/1998/Math/MathML">S</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">spice,
food, standard-object, t</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>; <math xmlns="http://www.w3.org/1998/Math/MathML">R</math>= <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-mono">(spice, food), (food,
standard-object), (standard-object, t)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>.<br/>The classes <code><span class="syntax-root"><span class="syntax-interned-symbol">spice</span>
</span></code>, <code><span class="syntax-root"><span class="syntax-interned-symbol">food</span>
</span></code>, <a class="type-reference" href="#type-standard-object">standard-object</a>, and 
<a class="type-reference" href="#type-t">t</a> are added in that order, and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> 
is <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pie</span> <span class="syntax-interned-symbol">apple</span> <span class="syntax-interned-symbol">fruit</span> <span class="syntax-interned-symbol">cinnamon</span> <span class="syntax-interned-symbol">spice</span> <span class="syntax-interned-symbol">food</span> <a class="type-reference" href="#type-standard-object">standard-object</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
</span></code>.<br/>It is possible to write a set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definitions that cannot be 
ordered.   For example: <br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">new-class</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">fruit</span> <span class="syntax-interned-symbol">apple</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">apple</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">fruit</span>)</span> <span class="syntax-symbol">()</span>)</span>
</span></code></pre><br/>The class <code><span class="syntax-root"><span class="syntax-interned-symbol">fruit</span>
</span></code> must precede <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> 
because the local ordering of <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> must be preserved.
The class <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> must precede <code><span class="syntax-root"><span class="syntax-interned-symbol">fruit</span>
</span></code> 
because a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> always precedes its own <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.
When this situation occurs, an error is signaled, as happens here
when the system tries to compute the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> 
of <code><span class="syntax-root"><span class="syntax-interned-symbol">new-class</span>
</span></code>.<br/>The following might appear to be a conflicting set of definitions:<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">pie</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">apple</span> <span class="syntax-interned-symbol">cinnamon</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">pastry</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">cinnamon</span> <span class="syntax-interned-symbol">apple</span>)</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">apple</span> <span class="syntax-symbol">()</span> <span class="syntax-symbol">()</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <span class="syntax-interned-symbol">cinnamon</span> <span class="syntax-symbol">()</span> <span class="syntax-symbol">()</span>)</span>
</span></code></pre><br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> for <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> is 
<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pie</span> <span class="syntax-interned-symbol">apple</span> <span class="syntax-interned-symbol">cinnamon</span> <a class="type-reference" href="#type-standard-object">standard-object</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
</span></code>.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> for <code><span class="syntax-root"><span class="syntax-interned-symbol">pastry</span>
</span></code> is  
<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pastry</span> <span class="syntax-interned-symbol">cinnamon</span> <span class="syntax-interned-symbol">apple</span> <a class="type-reference" href="#type-standard-object">standard-object</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
</span></code>.<br/>It is not a problem for <code><span class="syntax-root"><span class="syntax-interned-symbol">apple</span>
</span></code> to precede <code><span class="syntax-root"><span class="syntax-interned-symbol">cinnamon</span>
</span></code> in the
ordering of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> of <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> but not in the ordering for
<code><span class="syntax-root"><span class="syntax-interned-symbol">pastry</span>
</span></code>.  However, it is not possible to build a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that
has both <code><span class="syntax-root"><span class="syntax-interned-symbol">pie</span>
</span></code> and <code><span class="syntax-root"><span class="syntax-interned-symbol">pastry</span>
</span></code> as <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a>.<br/></section></div></section><section id="section-ClassReDef"><h3 class="section-title">Redefining Classes</h3><br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-direct instance">direct instance</a> of <a class="type-reference" href="#type-standard-class">standard-class</a> can
be redefined if the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is also
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-direct instance">direct instance</a> of <a class="type-reference" href="#type-standard-class">standard-class</a>.
Redefining a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> modifies the existing
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> to reflect the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definition; it does not
create a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  
Any <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> created by a <span class="keyword">:reader</span>, <span class="keyword">:writer</span>, 
or <span class="keyword">:accessor</span> option specified by the old <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form is
removed from the corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">Methods</a> specified by the new <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> form are added.<br/>
When the class <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is redefined, changes are propagated to its <span class="glossary-reference error">glossary:instances</span>
and to <span class="glossary-reference error">glossary:instances</span> of any of its <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclasses</a>.  Updating such an
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> occurs at an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> time, but no later than
the next time a <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> 
of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> is read or written.  Updating an
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> 
does not change its identity as defined by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-5.xhtml#function-eq">eq</a>.
The updating process may change the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> of that
particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a>, 
but it does not create a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a>.  Whether
updating an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> consumes storage is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/>Note that redefining a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> may cause <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> to be added or 
deleted.  If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is redefined in a way that changes the set of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-accessible">accessible</a> in <span class="glossary-reference error">glossary:instances</span>, the <span class="glossary-reference error">glossary:instances</span> 
are updated.  It is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> whether <span class="glossary-reference error">glossary:instances</span> 
are updated if a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is redefined in a way that does not change 
the set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-accessible">accessible</a> in <span class="glossary-reference error">glossary:instances</span>.<br/>The value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> 
that is specified as shared both in the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>
and in the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is retained.  
If such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slot</a> was unbound
in the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>, it is unbound in the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">Slots</a> that
were local in the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and that are shared in the new 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> are
initialized.  Newly added <a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slots</a> are initialized.<br/>Each newly added <a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slot</a> is set to the result of evaluating the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-captured initialization form">captured initialization form</a> for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> that was specified 
in the <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> for the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  
If there was no <a class="glossary-reference" href="chapter-26.xhtml#glossary-initialization form">initialization form</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> is unbound.<br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is redefined in such a way that the set of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-accessible">accessible</a> in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> 
is changed, a two-step process of updating the <span class="glossary-reference error">glossary:instances</span> of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> takes place.  The process may be explicitly started by 
invoking the generic function <a class="function-reference" href="chapter-7.xhtml#function-make-instances-obsolete">make-instances-obsolete</a>.  This
two-step process can happen in other circumstances in some implementations.
For example, in some implementations this two-step process is
triggered if the order of <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> in storage is changed.<br/>The first step modifies the structure of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> by adding new
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> and discarding <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> that are not
defined in the new version of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  The second step
initializes the newly-added <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> and performs any other
user-defined actions. These two steps are further specified
in the next two sections.<br/><section id="section-ModifyingtheStructureofInstances"><h4 class="section-title">Modifying the Structure of Instances</h4><span class="reviewer-note" id="reviewer-note-what-about-shared-sl"><span class="reviewer-note-tooltip"><span class="reviewer">Barmar</span>: What about shared slots that are deleted?</span>â€£</span>
The first step modifies the structure of <span class="glossary-reference error">glossary:instances</span> of the redefined
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> to conform to its new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definition.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">Local slots</a> specified
by the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definition that are not specified as either local or
shared by the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> are added, and <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> 
not specified as either
local or shared by the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> definition that are specified as
local by the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> are discarded. 
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a> of these added and discarded
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> are passed as arguments 
to <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a>
as described in the next section.<br/>The values of <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> specified by both the new and old
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> are retained. If such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slot</a> was unbound,
it remains unbound.<br/>The value of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> that is specified as shared in the old 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and as local in the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is retained.  If such 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slot</a> was unbound, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slot</a> is unbound.<br/></section><section id="section-InitializingNewlyAddedLocalSlots"><h4 class="section-title">Initializing Newly Added Local Slots</h4>The second step initializes the newly added <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> and performs
any other user-defined actions.  This step is implemented by the generic
function <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a>, which is called after
completion of the first step of modifying the structure of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a>.<br/>The generic function <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> takes
four required arguments: the <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> being updated after it has
undergone the first step, a list of the names of <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> that were
added, a list of the names of <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a> that were discarded, and a
property list containing the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> names and values of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> that were
discarded and had values.  Included among the discarded <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> are
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> that were local in the old <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> and that are shared in the new
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.<br/>The generic function <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> also
takes any number of initialization arguments.  When it is called by
the system to update an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> 
has been redefined, no
initialization arguments are provided.<br/>There is a system-supplied primary <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> for 
<a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializer</a>
for its <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> argument is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-object">standard-object</a>.  
First this <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> checks the validity of initialization arguments and signals an
error if an initialization argument is supplied that is not declared
as valid.  (For more information, see <span class="section-reference error">section:DeclaringInitargValidity.</span>)
Then it calls the generic function
<a class="function-reference" href="chapter-7.xhtml#function-shared-initialize">shared-initialize</a> with the following arguments: the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a>,
the list of <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a> of 
the newly added <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>, and the initialization
arguments it received.<br/></section><section id="section-CustomizingClassRedefinition"><h4 class="section-title">Customizing Class Redefinition</h4><span class="reviewer-note" id="reviewer-note-this-description-is-"><span class="reviewer-note-tooltip"><span class="reviewer">Barmar</span>: This description is hard to follow.</span>â€£</span>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">Methods</a> for <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> may be 
defined to specify actions to be taken when an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> is updated.
If only <a class="glossary-reference" href="chapter-26.xhtml#glossary-after method">after methods</a> for <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> are
defined, they will be run after the system-supplied primary <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> for
initialization and therefore will not interfere with the default
behavior of <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a>.  Because no
initialization arguments are passed to <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a>
when it is called by the system, the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-initialization form">initialization forms</a> for <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> 
that are filled by <a class="glossary-reference" href="chapter-26.xhtml#glossary-before method">before methods</a> for <a class="function-reference" href="chapter-7.xhtml#function-update-instance-for-redefined-class">update-instance-for-redefined-class</a> 
will not be evaluated by <a class="function-reference" href="chapter-7.xhtml#function-shared-initialize">shared-initialize</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-method">Methods</a> for <a class="function-reference" href="chapter-7.xhtml#function-shared-initialize">shared-initialize</a> may be defined to customize
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> redefinition.  For more information, see <span class="section-reference error">section:SharedInitialize.</span><br/></section></section><section id="section-IntegratingTypesAndClasses"><h3 class="section-title">Integrating Types and Classes</h3><br/>The object system maps the space of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> into the space of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.
Every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that has a proper name has a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
with the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a>.  <br/>The proper name of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is a valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.  In
addition, every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.  
Thus the expression <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="parameter">object</span> <span class="parameter">class</span>)</span>
</span></code> evaluates to 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of <span class="parameter">object</span> is <span class="parameter">class</span> itself or 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  The evaluation of the expression
<code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-interned-symbol">class1</span> <span class="syntax-interned-symbol">class2</span>)</span>
</span></code> returns the values 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if <code><span class="syntax-root"><span class="syntax-interned-symbol">class1</span>
</span></code> is a subclass of <code><span class="syntax-root"><span class="syntax-interned-symbol">class2</span>
</span></code> or if they are the
same <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>; otherwise it returns the values 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>.
If  <math xmlns="http://www.w3.org/1998/Math/MathML">I</math> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of some <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> named <math xmlns="http://www.w3.org/1998/Math/MathML">S</math> 
and <math xmlns="http://www.w3.org/1998/Math/MathML">C</math> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of <a class="type-reference" href="#type-standard-class">standard-class</a>, 
the evaluation of the expression <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <math xmlns="http://www.w3.org/1998/Math/MathML">I</math>)</span>
</span></code> returns <math xmlns="http://www.w3.org/1998/Math/MathML">S</math> 
if <math xmlns="http://www.w3.org/1998/Math/MathML">S</math> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a> of <math xmlns="http://www.w3.org/1998/Math/MathML">C</math>; 
otherwise, it returns <math xmlns="http://www.w3.org/1998/Math/MathML">C</math>.<br/>Because the names of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> 
and <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>, they may
be used in the special form <a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a> and in type declarations.<br/>Many but not all of the predefined <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> have a
corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> with 
the same proper name as the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  These type
specifiers are listed in <span class="figure-reference error">figure:ClassTypeCorrespondence.</span>
For example, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-15.xhtml#type-array">array</a> has 
a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> named <a class="type-reference" href="chapter-15.xhtml#type-array">array</a>.  
No <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> that is a
list, such as <span class="explicit-mono">(vector double-float 100)</span>, has a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operator</a> <a class="macro-reference" href="#macro-deftype">deftype</a> does not create any <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>.<br/>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that corresponds to a predefined <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> can
be implemented in one of three ways, at the discretion of each implementation.
It can be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-standard class">standard class</a>,
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-structure class">structure class</a>,
<span class="issue-annotation"><span class="issue-reference error">issue:Issue METACLASS-OF-SYSTEM-CLASS:UNSPECIFIED</span>or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-system class">system class</a>.
</span>
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> is one whose <span class="glossary-reference error">glossary:generalized instances</span> have restricted capabilities 
or special representations.  Attempting to use <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> to define 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclasses</a> of a <a class="type-reference" href="#type-built-in-class">built-in-class</a> signals an error.
Calling <a class="function-reference" href="chapter-7.xhtml#function-make-instance">make-instance</a> to create a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized instance">generalized instance</a> of a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> signals an error.  Calling <a class="function-reference" href="chapter-7.xhtml#function-slot-value">slot-value</a> on a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized instance">generalized instance</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> signals an error.
Redefining a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> or using <a class="function-reference" href="chapter-7.xhtml#function-change-class">change-class</a> to change
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> to or from a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> signals an error.
However, <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in classes</a> can be used as <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializers</a> 
in <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>.<br/>
It is possible to determine whether a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>
by checking the <a class="glossary-reference" href="chapter-26.xhtml#glossary-metaclass">metaclass</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-standard class">standard class</a>  is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a>,
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>  is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-built-in-class">built-in-class</a>, and
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-structure class">structure class</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-structure-class">structure-class</a>.<br/>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-structure">structure</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> created by <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> without 
using the <span class="keyword">:type</span> option has a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  
This <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized instance">generalized instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-structure-class">structure-class</a>.  
The <span class="keyword">:include</span> option of <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> creates a direct
<a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> 
that corresponds to the included <a class="glossary-reference" href="chapter-26.xhtml#glossary-structure">structure</a> 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/condition-slots.xhtml#issue-condition-slots:hidden">Issue CONDITION-SLOTS:HIDDEN</a>It is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> whether <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> are involved in the
operation of <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> defined in this specification
on <span class="glossary-reference error">glossary:instances</span> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> defined in this specification,
except when <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> are explicitly defined by this specification.<br/>If in a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> defined in this specification
has <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> that are not defined by this specfication, the names of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>
must not be <a class="glossary-reference" href="chapter-26.xhtml#glossary-external symbol">external symbols</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-package">packages</a> defined in this specification nor
otherwise <a class="glossary-reference" href="chapter-26.xhtml#glossary-accessible">accessible</a> in the <a class="package-reference" href="chapter-11.xhtml#package-cl-user">cl-user</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-package">package</a>.
</div><br/>The purpose of specifying that many of the standard <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> have a
corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> is to enable users to write <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> that
discriminate on these <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.  <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">Method</a> selection requires that a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> can be determined for each <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>. <br/>The hierarchical relationships among the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> are mirrored by
relationships among the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> corresponding to those <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.  
                 
<a class="figure-reference" href="#figure-ClassTypeCorrespondence">ClassTypeCorrespondence</a> lists the set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> 
that correspond to predefined <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/real-number-type.xhtml#issue-real-number-type:x3j13-mar-89">Issue REAL-NUMBER-TYPE:X3J13-MAR-89</a>
<span class="float" id="figure-ClassTypeCorrespondence"><table><tbody><tr><td><a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></td><td><a class="type-reference" href="#type-generic-function">generic-function</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-error">simple-error</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-array">array</a></td><td><a class="type-reference" href="chapter-18.xhtml#type-hash-table">hash-table</a></td><td><a class="type-reference" href="#type-simple-type-error">simple-type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-15.xhtml#type-bit-vector">bit-vector</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-warning">simple-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-broadcast-stream">broadcast-stream</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-list">list</a></td><td><a class="type-reference" href="#type-standard-class">standard-class</a></td></tr><tr><td><a class="type-reference" href="#type-built-in-class">built-in-class</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-logical-pathname">logical-pathname</a></td><td><a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-cell-error">cell-error</a></td><td><a class="type-reference" href="#type-method">method</a></td><td><a class="type-reference" href="#type-standard-method">standard-method</a></td></tr><tr><td><a class="type-reference" href="chapter-13.xhtml#type-character">character</a></td><td><a class="type-reference" href="#type-method-combination">method-combination</a></td><td><a class="type-reference" href="#type-standard-object">standard-object</a></td></tr><tr><td><a class="type-reference" href="#type-class">class</a></td><td><a class="type-reference" href="chapter-14.xhtml#type-null">null</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-storage-condition">storage-condition</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-number">number</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-concatenated-stream">concatenated-stream</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package">package</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package-error">package-error</a></td><td><a class="type-reference" href="chapter-16.xhtml#type-string">string</a></td></tr><tr><td><a class="type-reference" href="chapter-14.xhtml#type-cons">cons</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-parse-error">parse-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-string-stream">string-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a></td><td><a class="type-reference" href="chapter-19.xhtml#type-pathname">pathname</a></td><td><a class="type-reference" href="#type-structure-class">structure-class</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-division-by-zero">division-by-zero</a></td><td><a class="type-reference" href="chapter-22.xhtml#type-print-not-readable">print-not-readable</a></td><td><a class="type-reference" href="#type-structure-object">structure-object</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-echo-stream">echo-stream</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-program-error">program-error</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-style-warning">style-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-end-of-file">end-of-file</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-random-state">random-state</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a></td></tr><tr><td><a class="type-reference" href="chapter-9.xhtml#type-error">error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-ratio">ratio</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-synonym-stream">synonym-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-rational">rational</a></td><td><a class="type-reference" href="#type-t">t</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-file-stream">file-stream</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-reader-error">reader-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-two-way-stream">two-way-stream</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-float">float</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-readtable">readtable</a></td><td><a class="type-reference" href="#type-type-error">type-error</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-inexact">floating-point-inexact</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-real">real</a></td><td><a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-invalid-operation">floating-point-invalid-operation</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-restart">restart</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-overflow">floating-point-overflow</a></td><td><a class="type-reference" href="chapter-17.xhtml#type-sequence">sequence</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-serious-condition">serious-condition</a></td><td><a class="type-reference" href="chapter-15.xhtml#type-vector">vector</a></td></tr><tr><td><a class="type-reference" href="#type-function">function</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a></td><td><a class="type-reference" href="chapter-9.xhtml#type-warning">warning</a></td></tr></tbody></table><div class="caption">Classes that correspond to pre-defined type specifiers</div></span></div>
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence list</a> information specified in the entries for
each of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> are those that are required by the object system.<br/>Individual implementations may be extended to define other type
specifiers to have a corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a>.  Individual implementations
may be extended to add other <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclass</a> relationships and to add other
<a class="glossary-reference" href="chapter-26.xhtml#glossary-element">elements</a> to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class precedence list">class precedence lists</a> as long as
they do not violate the type relationships and disjointness
requirements specified by this standard.
A standard <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> defined with no direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclasses</a> is guaranteed to
be disjoint from all of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> in the table, except for the
class named <a class="type-reference" href="#type-t">t</a>.<br/></section>
</section><br/><section id="section-Dictionary"><h2 class="section-title">Dictionary</h2>
<br/><div class="component" id="type-nil"><div class="header"><span class="left"><span class="name" id="type-nil">nil</span></span><span class="right"><span class="ftype">Type</span></span></div><br/><dl><dt class="label">Supertypes</dt><dd>all <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-nil">nil</a> contains no <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> and so is also
called the <a class="glossary-reference" href="chapter-26.xhtml#glossary-empty type">empty type</a>.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-nil">nil</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.
No <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-nil">nil</a>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> containing the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-14.xhtml#type-null">null</a>,
not the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-nil">nil</a>.<br/></dd></dl></div></div><br/>
<br/><div class="component" id="type-boolean"><div class="header"><span class="left"><span class="name" id="type-boolean">boolean</span></span><span class="right"><span class="ftype">Type</span></span></div><br/><dl><dt class="label">Supertypes</dt><dd><a class="type-reference" href="#type-boolean">boolean</a>,
<a class="type-reference" href="chapter-10.xhtml#type-symbol">symbol</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-boolean">boolean</a> contains the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a> and <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>,
which represent true and false, respectively.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-constant variable">constant variable</a>),
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-constant variable">constant variable</a>),
<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a>,
<a class="function-reference" href="chapter-5.xhtml#function-not">not</a>,
<a class="function-reference" href="chapter-5.xhtml#function-complement">complement</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd>Conditional operations, such as <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a>,
permit the use of <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized booleans</a>,
not just <a class="glossary-reference" href="chapter-26.xhtml#glossary-boolean">booleans</a>;
any <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a> value,
not just <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a>,
counts as true for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.
However, as a matter of convention, 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a> is considered the canonical value to use
even for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a> when no better choice presents itself.<br/></dd></dl></div></div><br/>

<br/><div class="component" id="type-function"><div class="header"><span class="left"><span class="name" id="type-function">function</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><div class="issue-annotation"><a class="issue-reference" href="issues/function-type.xhtml#issue-function-type:x3j13-march-88">Issue FUNCTION-TYPE:X3J13-MARCH-88</a>
<dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-function">function</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> that represents code 
to be executed when an appropriate number of arguments is supplied.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is produced by 
 the <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-special form">special form</a>,
 the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-coerce">coerce</a>,
<span class="issue-annotation"><span class="issue-reference error">issue:Issue SYNTACTIC-ENVIRONMENT-ACCESS:RETRACTED-MAR91</span></span>or
 the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-3.xhtml#function-compile">compile</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> can be directly invoked by using it as the first argument to
<a class="function-reference" href="chapter-5.xhtml#function-funcall">funcall</a>, <a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a>, or <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-multiple-value-call">multiple-value-call</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Specializing.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">function</span>&nbsp;<span class="lambda-list"><span class="explicit-mono">[</span>arg-typespec <span class="explicit-roman">[</span>value-typespec<span class="explicit-roman">]</span><span class="explicit-mono">]</span></span>)</span><br/><br/><tr><td>arg-typespec</td><td>::=</td><td><span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>            <br/>
		       <span class="explicit-mono">[</span><span class="lambda-list-keyword">&amp;optional</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-mono">]</span> <br/>
                       <span class="explicit-mono">[</span><span class="lambda-list-keyword">&amp;rest</span> <span class="parameter">typespec</span><span class="explicit-mono">]</span>    <br/>
                       <span class="explicit-mono">[</span><span class="lambda-list-keyword">&amp;key</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-roman">(</span>keyword typespec<span class="explicit-roman">)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-mono">]</span><span class="explicit-roman">)</span></td></tr><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">value-typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd><span class="editor-note" id="editor-note-isn't-there-some-con"><span class="editor-note-tooltip"><span class="editor">KMP</span>: Isn't there some context info about ftype declarations to be merged here?</span>â€£</span><br/><span class="editor-note" id="editor-note-this-could-still-use"><span class="editor-note-tooltip"><span class="editor">KMP</span>: This could still use some cleaning up.</span>â€£</span>
<span class="editor-note" id="editor-note-still-need-clarifica"><span class="editor-note-tooltip"><span class="editor">Sandra</span>: Still need clarification about what happens if the
number of arguments doesn't match the FUNCTION type declaration.</span>â€£</span><br/>The list form of the <a class="type-reference" href="#type-function">function</a> <span class="glossary-reference error">glossary:type-specifier</span>
can be used only for declaration and not for discrimination.
Every element of this <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> is
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> that accepts arguments of the
types   
specified by the  <span class="parameter">argj-types</span> and returns values that are
members of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> specified by <span class="parameter">value-type</span>. The
<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">optional</a>, <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">rest</a>, <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-key">key</a>, 
<span class="issue-annotation"><a class="issue-reference" href="issues/function-type-key-name.xhtml#issue-function-type-key-name:specify-keyword">Issue FUNCTION-TYPE-KEY-NAME:SPECIFY-KEYWORD</a>and <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-allow-other-keys">allow-other-keys</a> 
</span>markers can appear in the list of argument types. 
<span class="issue-annotation"><a class="issue-reference" href="issues/function-type-rest-list-element.xhtml#issue-function-type-rest-list-element:use-actual-argument-type">Issue FUNCTION-TYPE-REST-LIST-ELEMENT:USE-ACTUAL-ARGUMENT-TYPE</a>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> provided
with <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">rest</a> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
of each actual argument, not the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> of the
corresponding variable.
</span> 
<div class="issue-annotation"><a class="issue-reference" href="issues/function-type-key-name.xhtml#issue-function-type-key-name:specify-keyword">Issue FUNCTION-TYPE-KEY-NAME:SPECIFY-KEYWORD</a>The <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-key">key</a> parameters 
should be supplied as lists of the form <span class="explicit-mono">(<span class="parameter">keyword</span> <span class="parameter">type</span>)</span>.  
The <span class="parameter">keyword</span> must be a valid keyword-name symbol
as must be supplied in the actual arguments of a
call.
<div class="issue-annotation"><a class="issue-reference" href="issues/keyword-argument-name-package.xhtml#issue-keyword-argument-name-package:any">Issue KEYWORD-ARGUMENT-NAME-PACKAGE:ANY</a>This is usually a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> in the <a class="package-reference" href="chapter-11.xhtml#package-keyword">keyword</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-package">package</a> but can be any <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.
</div>When <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-key">key</a> is given in a
<a class="type-reference" href="#type-function">function</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda list">lambda list</a>,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-keyword parameter">keyword parameters</a> given
are exhaustive unless <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-allow-other-keys">allow-other-keys</a> is also present. 
<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-allow-other-keys">allow-other-keys</a> is an indication 
that other keyword arguments might actually be
supplied and, if supplied, can be used. 
For example,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-14.xhtml#function-make-list">make-list</a> could be declared as follows:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">0</span>)</span> <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-key">&amp;KEY</a> <span class="syntax-cons">(<span class="syntax-keyword-symbol">:initial-element</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>)</span> <a class="function-reference" href="chapter-14.xhtml#function-list">list</a>)</span>
</span></code></pre></div>
The <span class="parameter">value-type</span> can be a <a class="type-reference" href="#type-values">values</a> 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> in order to indicate the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-multiple values">multiple values</a>.<br/>
<div class="issue-annotation"><a class="issue-reference" href="issues/function-type-argument-type-semantics.xhtml#issue-function-type-argument-type-semantics:restrictive">Issue FUNCTION-TYPE-ARGUMENT-TYPE-SEMANTICS:RESTRICTIVE</a>
Consider a declaration of the following form:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">arg0-type</span> <span class="syntax-interned-symbol">arg1-type</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-interned-symbol">val-type</span>)</span> <span class="syntax-interned-symbol">f</span>)</span>
</span></code></pre><br/>Any <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>
<span class="explicit-mono">(f arg0 arg1 ...)</span>
within the scope of
that declaration is equivalent to the following:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">val-type</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">f</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">arg0-type</span> <span class="syntax-interned-symbol">arg0</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">arg1-type</span> <span class="syntax-interned-symbol">arg1</span>)</span> <span class="syntax-interned-symbol">...</span>)</span>)</span>
</span></code></pre><br/>That is, the consequences are undefined if any of the arguments are
not of the specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> or the result is not of the
specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>. In particular, if any argument is not of the
correct <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, the result is not guaranteed to be of the
specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/>Thus, an <a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> declaration for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>
describes <a class="glossary-reference" href="chapter-26.xhtml#glossary-call">calls</a> to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>, not the actual definition
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>.<br/>Consider a declaration of the following form:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">arg0-type</span> <span class="syntax-interned-symbol">arg1-type</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-interned-symbol">val-type</span>)</span> <span class="syntax-interned-symbol">fn-valued-variable</span>)</span>
</span></code></pre><br/>This declaration has the interpretation that, within the scope of the
declaration, the consequences are unspecified if the value of <span class="explicit-mono">fn-valued-variable</span> is called with arguments not of the specified
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>; the value resulting from a valid call will be of type
<span class="explicit-mono">val-type</span>.<br/>As with variable type declarations, nested declarations
imply intersections of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>, as follows:
<ul><li>Consider the following two
declarations of <a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a>:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">arg0-type1</span> <span class="syntax-interned-symbol">arg1-type1</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-interned-symbol">val-type1</span>)</span> <span class="syntax-interned-symbol">f</span>)</span>
</span></code></pre>
and<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">arg0-type2</span> <span class="syntax-interned-symbol">arg1-type2</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-interned-symbol">val-type2</span>)</span> <span class="syntax-interned-symbol">f</span>)</span>
</span></code></pre><br/>If both these declarations are in effect,
then within the shared scope of the declarations, calls to <span class="explicit-mono">f</span> can be
treated as if <span class="explicit-mono">f</span> were declared as follows:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">arg0-type1</span> <span class="syntax-interned-symbol">arg0-type2</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">arg1-type1</span> <span class="syntax-interned-symbol">arg1-type2</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-interned-symbol">...</span>)</span>
                 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">val-type1</span> <span class="syntax-interned-symbol">val-type2</span>)</span>)</span> 
       <span class="syntax-interned-symbol">f</span>)</span>
</span></code></pre><br/>It is permitted to ignore one or all of the <a class="declaration-reference" href="chapter-3.xhtml#declaration-ftype">ftype</a> declarations in force.<br/></li><li>If two (or more) type declarations are in effect for a variable, and
they are both <span class="explicit-mono">function</span> declarations, the declarations combine similarly.
</li></ul><br/></div>
</dd></dl></div>
</div><br/>
<br/><div class="component" id="type-compiled-function"><div class="header"><span class="left"><span class="name" id="type-compiled-function">compiled-function</span></span><span class="right"><span class="ftype">Type</span></span></div><br/><div class="issue-annotation"><a class="issue-reference" href="issues/function-type.xhtml#issue-function-type:x3j13-march-88">Issue FUNCTION-TYPE:X3J13-MARCH-88</a><br/><dl><dt class="label">Supertypes</dt><dd><a class="type-reference" href="#type-compiled-function">compiled-function</a>,
<a class="type-reference" href="#type-function">function</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd><div class="issue-annotation"><span class="issue-reference error">issue:Issue COMPILED-FUNCTION-REQUIREMENTS:TIGHTEN</span>Any <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> may be considered by an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> to be a 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-compiled function">compiled function</a> if it contains no references to <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro">macros</a> that
must be expanded at run time, and it contains no unresolved references 
to <span class="glossary-reference error">glossary:load time values</span>.  See <span class="section-reference error">section:CompilationSemantics.</span></div>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">Functions</a> whose definitions appear lexically within a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a> that has been <a class="glossary-reference" href="chapter-26.xhtml#glossary-compile">compiled</a> with <a class="function-reference" href="chapter-24.xhtml#function-compile-file">compile-file</a> and then
<a class="glossary-reference" href="chapter-26.xhtml#glossary-load">loaded</a> with <a class="function-reference" href="chapter-24.xhtml#function-load">load</a> are of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-compiled-function">compiled-function</a>.
<div class="issue-annotation"><span class="issue-reference error">issue:Issue COMPILED-FUNCTION-REQUIREMENTS:TIGHTEN</span><a class="glossary-reference" href="chapter-26.xhtml#glossary-function">Functions</a> produced by the <a class="function-reference" href="chapter-3.xhtml#function-compile">compile</a> function
are of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-compiled-function">compiled-function</a>.
</div>Other <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> might also be of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-compiled-function">compiled-function</a>.

</dd></dl></div>
</div><br/>
<br/><div class="component" id="type-generic-function"><div class="header"><span class="left"><span class="name" id="type-generic-function">generic-function</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue JUN90-TRIVIAL-ISSUES:9</span><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-generic-function">generic-function</a>,
<a class="type-reference" href="#type-function">function</a>,
<a class="type-reference" href="#type-t">t</a>
</dd></dl></div>
<dl><dt class="label">Description</dt><dd>A <span class="newterm">generic function</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> whose behavior
depends on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> or identities of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a>
supplied to it.  A generic function object contains a set of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda list">lambda list</a>, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, 
and other information.  The <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>
define the class-specific behavior and operations of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>;
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> is said to <a class="glossary-reference" href="chapter-26.xhtml#glossary-specialize">specialize</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>.
When invoked, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a> executes a subset of its
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> based on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> or identities of its <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a> can be used in the same ways that an
ordinary <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> can be used; specifically, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a> can
be used as an argument to <a class="function-reference" href="chapter-5.xhtml#function-funcall">funcall</a> and <a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a>,
and can be given a global or a local name.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-standard-generic-function"><div class="header"><span class="left"><span class="name" id="type-standard-generic-function">standard-generic-function</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a>,
<a class="type-reference" href="#type-generic-function">generic-function</a>,
<a class="type-reference" href="#type-function">function</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-generic-function">standard-generic-function</a> is the default <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic functions</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a> by
<a class="macro-reference" href="chapter-7.xhtml#macro-defmethod">defmethod</a>,
<a class="function-reference" href="chapter-7.xhtml#function-ensure-generic-function">ensure-generic-function</a>,
<a class="macro-reference" href="chapter-7.xhtml#macro-defgeneric">defgeneric</a>,
<span class="issue-annotation"><span class="issue-reference error">issue:Issue GENERIC-FLET-POORLY-DESIGNED:DELETE</span></span><span class="issue-annotation"><a class="issue-reference" href="issues/with-added-methods.xhtml#issue-with-added-methods:delete">Issue WITH-ADDED-METHODS:DELETE</a></span>and
<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a>.<br/></dd></dl></div><br/>


<br/><div class="component" id="type-class"><div class="header"><span class="left"><span class="name" id="type-class">class</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue JUN90-TRIVIAL-ISSUES:9</span><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-class">class</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-standard-object">standard-object</a>,
</span><a class="type-reference" href="#type-t">t</a>
</dd></dl></div>
<dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-class">class</a> represents <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that determine the structure 
and behavior of their <span class="glossary-reference error">glossary:instances</span>. Associated with an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>
of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-class">class</a> is information describing its place in the 
directed acyclic graph of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>, its <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>, and its options.


</dd></dl></div><br/>
<br/><div class="component" id="type-built-in-class"><div class="header"><span class="left"><span class="name" id="type-built-in-class">built-in-class</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-built-in-class">built-in-class</a>,
<a class="type-reference" href="#type-class">class</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-standard-object">standard-object</a>,
</span><a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> whose <span class="glossary-reference error">glossary:instances</span> have 
restricted capabilities or special representations.
Attempting to use
<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> to define <a class="glossary-reference" href="chapter-26.xhtml#glossary-subclass">subclasses</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>
signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a>.
Calling <a class="function-reference" href="chapter-7.xhtml#function-make-instance">make-instance</a> to create an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> 
of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a>.
Calling <a class="function-reference" href="chapter-7.xhtml#function-slot-value">slot-value</a> on an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>
signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a>.  Redefining a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a>
or using <a class="function-reference" href="chapter-7.xhtml#function-change-class">change-class</a> to change the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a>
to or from a <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in class</a> signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a>.
However, <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in class">built-in classes</a> can be used as <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializers</a>
in <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>.

</dd></dl></div><br/>
<br/><div class="component" id="type-structure-class"><div class="header"><span class="left"><span class="name" id="type-structure-class">structure-class</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-structure-class">structure-class</a>,
<a class="type-reference" href="#type-class">class</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-standard-object">standard-object</a>,
</span><a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>All <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a> defined by means of <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> 
are <span class="glossary-reference error">glossary:instances</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-structure-class">structure-class</a>.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-standard-class"><div class="header"><span class="left"><span class="name" id="type-standard-class">standard-class</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-standard-class">standard-class</a>,
<a class="type-reference" href="#type-class">class</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-standard-object">standard-object</a>,
</span><a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-class">standard-class</a> is the default <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">classes</a>
defined by <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-method"><div class="header"><span class="left"><span class="name" id="type-method">method</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue JUN90-TRIVIAL-ISSUES:9</span><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-method">method</a>,
<a class="type-reference" href="#type-t">t</a>
</dd></dl></div>
<dl><dt class="label">Description</dt><dd>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> that represents a modular part of the behavior
of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> contains <a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a> to implement the <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a>'s
behavior, a sequence of <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializers</a> that specify when the
given <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> is applicable, and a sequence of <a class="glossary-reference" href="chapter-26.xhtml#glossary-qualifier">qualifiers</a>
that is used by the method combination facility to distinguish among
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>.  Each required parameter of each 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> has an associated <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializer</a>, and the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> will be invoked only on arguments that satisfy its 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter specializer">parameter specializers</a>.<br/>The method combination facility controls the selection of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a>, the order in which they are run, and the values that are
returned by the generic function.  The object system offers a default method
combination type and provides a facility for declaring new types of
method combination.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="chapter-7.xhtml#section-GFsAndMethods">Generic Functions and Methods</a><br/></dd></dl></div></div><br/>
<br/><div class="component" id="type-standard-method"><div class="header"><span class="left"><span class="name" id="type-standard-method">standard-method</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-standard-method">standard-method</a>,
<a class="type-reference" href="#type-method">method</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-standard-object">standard-object</a>,
</span><a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-method">standard-method</a> is the default <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> defined by the 
 <a class="macro-reference" href="chapter-7.xhtml#macro-defmethod">defmethod</a> and
 <a class="macro-reference" href="chapter-7.xhtml#macro-defgeneric">defgeneric</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a>.
<span class="issue-annotation"><span class="issue-reference error">issue:Issue GENERIC-FLET-POORLY-DESIGNED:DELETE</span></span><span class="issue-annotation"><a class="issue-reference" href="issues/with-added-methods.xhtml#issue-with-added-methods:delete">Issue WITH-ADDED-METHODS:DELETE</a></span>
</dd></dl></div><br/>
<br/><div class="component" id="type-structure-object"><div class="header"><span class="left"><span class="name" id="type-structure-object">structure-object</span></span><span class="right"><span class="ftype">Class</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue JUN90-TRIVIAL-ISSUES:9</span><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-structure-object">structure-object</a>,
<a class="type-reference" href="#type-t">t</a>
</dd></dl></div>
<dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-structure-object">structure-object</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of <a class="type-reference" href="#type-structure-class">structure-class</a>
and is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> 
that is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of <a class="type-reference" href="#type-structure-class">structure-class</a>
except itself, and is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> 
that is defined by <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>.<br/><span class="issue-annotation"><a class="issue-reference" href="issues/data-types-hierarchy-underspecified.xhtml#issue-data-types-hierarchy-underspecified">Issue DATA-TYPES-HIERARCHY-UNDERSPECIFIED</a></span>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>,
<a class="section-reference" href="chapter-2.xhtml#section-SharpsignS">Sharpsign S</a>,
<a class="section-reference" href="chapter-22.xhtml#section-PrintingStructures">Printing Structures</a><br/></dd></dl></div></div><br/>
<br/><div class="component" id="type-standard-object"><div class="header"><span class="left"><span class="name" id="type-standard-object">standard-object</span></span><span class="right"><span class="ftype">Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-standard-object">standard-object</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-standard-object">standard-object</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of <a class="type-reference" href="#type-standard-class">standard-class</a>
and is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> that is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-instance">instance</a> of
<a class="type-reference" href="#type-standard-class">standard-class</a> except itself.

</dd></dl></div><br/>
<br/><div class="component" id="type-method-combination"><div class="header"><span class="left"><span class="name" id="type-method-combination">method-combination</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-method-combination">method-combination</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>Every <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is an 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-indirect instance">indirect instance</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-method-combination">method-combination</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> represents the information about
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> being used by a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> contains information about
both the type of <a class="glossary-reference" href="chapter-26.xhtml#glossary-method combination">method combination</a> and the arguments being used
with that <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-t"><div class="header"><span class="left"><span class="name" id="type-t">t</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The set of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-t">t</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertype</a> of every <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, 
including itself. Every <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-t">t</a>.<br/><span class="issue-annotation"><a class="issue-reference" href="issues/common-type.xhtml#issue-common-type:remove">Issue COMMON-TYPE:REMOVE</a></span>
</dd></dl></div><br/>
<br/><div class="component" id="type-satisfies"><div class="header"><span class="left"><span class="name" id="type-satisfies">satisfies</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Predicating.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">satisfies</span>&nbsp;<span class="lambda-list">predicate-name</span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">predicate-name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This denotes the set of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that satisfy the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-predicate">predicate</a> <span class="parameter">predicate-name</span>, which must be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>
whose global <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> definition is a one-argument
predicate.  A name is required for <span class="parameter">predicate-name</span>; 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expressions</a> are not allowed.
For example, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> <span class="explicit-mono">(and integer (satisfies evenp))</span>
denotes the set of all even integers.
The form <span class="explicit-mono">(typep <span class="parameter">x</span> '(satisfies <span class="parameter">p</span>))</span> is equivalent to
<span class="explicit-mono">(if (<span class="parameter">p</span> <span class="parameter">x</span>) t nil)</span>.

<div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span>The argument is required.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> <span class="symbol-reference error">symbol:*</span> can be the argument, but it
denotes itself (the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> <span class="symbol-reference error">symbol:*</span>),
and does not represent an unspecified value.<br/>The symbol <a class="type-reference" href="#type-satisfies">satisfies</a> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.
</div><br/></dd></dl></div><br/>
<br/><div class="component" id="type-member"><div class="header"><span class="left"><span class="name" id="type-member">member</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Combining.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">member</span>&nbsp;<span class="lambda-list"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">object</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This denotes the set containing the named <span class="parameter">objects</span>. An
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is of this <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> if and only if it is <a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a>
to one of the specified <span class="parameter">objects</span>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a>)</span>
</span></code> and <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> are equivalent.
<span class="symbol-reference error">symbol:*</span> can be among the <span class="parameter">objects</span>,
but if so it denotes itself (the symbol <span class="symbol-reference error">symbol:*</span>) 
and does not represent an unspecified value.
The symbol <span class="symbol-reference error">symbol:member</span> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>;
and, specifically, it is not an abbreviation for either <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a>)</span>
</span></code> or <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a>)</span>
</span></code>.
</div>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd>the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-eql">eql</a><br/></dd></dl></div></div><br/>
<br/><div class="component" id="type-not"><div class="header"><span class="left"><span class="name" id="type-not">not</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Combining.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">not</span>&nbsp;<span class="lambda-list">typespec</span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This denotes the set of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> that are not of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">typespec</span>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span>The argument is required, and cannot be <span class="symbol-reference error">symbol:*</span>.<br/>The symbol <a class="type-reference" href="#type-not">not</a> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.
</div>
</dd></dl></div><br/>
<br/><div class="component" id="type-and"><div class="header"><span class="left"><span class="name" id="type-and">and</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Combining.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">and</span>&nbsp;<span class="lambda-list"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This denotes the set of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
determined by the intersection of the <span class="parameter">typespecs</span>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span><span class="symbol-reference error">symbol:*</span> is not permitted as an argument.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a>)</span>
</span></code> and <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a> are equivalent.
The symbol <a class="symbol-reference" href="chapter-7.xhtml#symbol-and">and</a> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>,
and, specifically, it is not an abbreviation for <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a>)</span>
</span></code>.
</div>
</dd></dl></div><br/>
<br/><div class="component" id="type-or"><div class="header"><span class="left"><span class="name" id="type-or">or</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Combining.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">or</span>&nbsp;<span class="lambda-list"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This denotes the set of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> determined by the union of the <span class="parameter">typespecs</span>.
For example, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-14.xhtml#type-list">list</a> by definition is the same as <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <a class="function-reference" href="chapter-14.xhtml#function-null">null</a> <a class="function-reference" href="chapter-14.xhtml#function-cons">cons</a>)</span>
</span></code>.
Also, the value returned by <a class="function-reference" href="chapter-17.xhtml#function-position">position</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <code><span class="syntax-root"><span class="syntax-symbol">#1
Â¶</span></span></code>;
<span class="explicit-italic"> i.e.</span>,  either <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> or a non-negative <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integer</a>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span><span class="symbol-reference error">symbol:*</span> is not permitted as an argument.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a>)</span>
</span></code> and <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> are equivalent.
The symbol <a class="type-reference" href="#type-or">or</a> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>;
and, specifically, it is not an abbreviation for <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a>)</span>
</span></code>.
</div>
</dd></dl></div><br/>
<br/><div class="component" id="type-values"><div class="header"><span class="left"><span class="name" id="type-values">values</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Specializing.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">values</span>&nbsp;<span class="lambda-list"><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">value-typespec</span></span>)</span><br/><br/><span class="reviewer-note" id="reviewer-note-missing-\keyref{key}"><span class="reviewer-note-tooltip"><span class="reviewer">Barmar</span>: Missing \keyref{key}</span>â€£</span>
<tr><td>value-typespec</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>
			<span class="explicit-mono">[</span><span class="lambda-list-keyword">&amp;optional</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">typespec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-mono">]</span>
			<span class="explicit-mono">[</span><span class="lambda-list-keyword">&amp;rest</span> typespec<span class="explicit-mono">]</span>
			<span class="explicit-mono">[</span><a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-allow-other-keys">allow-other-keys</a><span class="explicit-mono">]</span></td></tr><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>This <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> can be used only as the <span class="parameter">value-type</span> in a
<a class="type-reference" href="#type-function">function</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> or a <a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-special form">special form</a>.  It is used to specify individual <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> 
when <a class="glossary-reference" href="chapter-26.xhtml#glossary-multiple values">multiple values</a> are involved.
The <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">optional</a> and <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">rest</a> markers can appear in the <span class="parameter">value-type</span> list;
they indicate the parameter list of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> that, 
when given to <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-multiple-value-call">multiple-value-call</a> along with the values,
would correctly receive those values.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span>The symbol <span class="symbol-reference error">symbol:*</span> may not be among the <span class="parameter">value-types</span>.<br/>The symbol <span class="symbol-reference error">symbol:values</span> is not valid as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>;
and, specifically, it is not an abbreviation for <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-values">values</a>)</span>
</span></code>.
</div>
</dd></dl></div><br/>
<br/><div class="component" id="type-eql"><div class="header"><span class="left"><span class="name" id="type-eql">eql</span></span><span class="right"><span class="ftype">Type Specifier</span></span></div><br/><dl><dt class="label">Compound Type Specifier Kind</dt><dd>Combining.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Syntax</dt><dd><span class="type-definition">(<span class="name">eql</span>&nbsp;<span class="lambda-list">object</span>)</span><br/><br/></dd></dl><dl><dt class="label">Compound Type Specifier Arguments</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/></dd></dl><dl><dt class="label">Compound Type Specifier Description</dt><dd>Represents the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
of all <span class="parameter">x</span> for which <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a> <span class="parameter">object</span> <span class="parameter">x</span>)</span>
</span></code> is true.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue TYPE-SPECIFIER-ABBREVIATION:X3J13-JUN90-GUESS</span>The argument <span class="parameter">object</span> is required.  The <span class="parameter">object</span> can be <span class="symbol-reference error">symbol:*</span>,
but if so it denotes itself (the symbol <span class="symbol-reference error">symbol:*</span>) 
and does not represent an unspecified value.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> <span class="symbol-reference error">symbol:eql</span> is not valid as an <a class="glossary-reference" href="chapter-26.xhtml#glossary-atomic type specifier">atomic type specifier</a>.
</div>
</dd></dl></div><br/>
<br/><div class="component" id="function-coerce"><div class="header"><span class="left"><span class="name" id="function-coerce">coerce</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">coerce</span>&nbsp;<span class="lambda-list">object result-type</span>&nbsp;â†’&nbsp;<span class="return-values">result</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">result-type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">result</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">result-type</span>
  except in situations described in <a class="section-reference" href="chapter-12.xhtml#section-RuleOfCanonRepForComplexRationals">Rule of Canonical Representation for Complex Rationals</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><span class="glossary-reference error">glossary:Coerces</span> the <span class="parameter">object</span> to <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">result-type</span>.<br/>If <span class="parameter">object</span> is already of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">result-type</span>,
the <span class="parameter">object</span> itself is returned, regardless of whether it
would have been possible in general to coerce an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of 
some other <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> to <span class="parameter">result-type</span>.<br/>Otherwise, the <span class="parameter">object</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-coerce">coerced</a> to <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">result-type</span>
according to the following rules:<br/><dl><dt><a class="type-reference" href="chapter-17.xhtml#type-sequence">sequence</a></dt><dd><div class="issue-annotation"><span class="issue-reference error">issue:Issue CONCATENATE-SEQUENCE:SIGNAL-ERROR</span>
If the <span class="parameter">result-type</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a> of <a class="type-reference" href="chapter-14.xhtml#type-list">list</a>,
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-sequence">sequence</a>,
then the <span class="parameter">result</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> 
that has the <a class="glossary-reference" href="chapter-26.xhtml#glossary-same">same</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">elements</a> as <span class="parameter">object</span>.<br/>If the <span class="parameter">result-type</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a> of <a class="type-reference" href="chapter-15.xhtml#type-vector">vector</a>,
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-sequence">sequence</a>,
then the <span class="parameter">result</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-vector">vector</a> 
that has the <a class="glossary-reference" href="chapter-26.xhtml#glossary-same">same</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">elements</a> as <span class="parameter">object</span>.
If <span class="parameter">result-type</span> is a specialized <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, 
the <span class="parameter">result</span> has an <a class="glossary-reference" href="chapter-26.xhtml#glossary-actual array element type">actual array element type</a> that is the result of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-upgrade">upgrading</a> the element type part of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-specialized">specialized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.
If no element type is specified, the element type defaults to <a class="type-reference" href="#type-t">t</a>.
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> cannot determine the element type, an error is signaled.<br/></div>
</dd><dt><a class="type-reference" href="chapter-13.xhtml#type-character">character</a></dt><dd>If the <span class="parameter">result-type</span> is <a class="type-reference" href="chapter-13.xhtml#type-character">character</a>
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-character designator">character designator</a>,
the <span class="parameter">result</span> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">character</a> it denotes.<br/><span class="issue-annotation"><a class="issue-reference" href="issues/character-loose-ends.xhtml#issue-character-loose-ends:fix">Issue CHARACTER-LOOSE-ENDS:FIX</a></span>
</dd><dt><a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a></dt><dd>If the <span class="parameter">result-type</span> is <a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a> 
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a <span class="glossary-reference error">glossary:real</span>,
then the <span class="parameter">result</span> is obtained by constructing a <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a>
whose real part is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> and
whose imaginary part is the result of <span class="glossary-reference error">glossary:coercing</span> an <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integer</a> zero
to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> (using <a class="function-reference" href="#function-coerce">coerce</a>).
(If the real part is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-rational">rational</a>, however, 
then the result must be represented as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-rational">rational</a> rather
than a <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a>; see <span class="section-reference error">section:RuleOfCanonRepForComplexRationals.</span>
So, for example, <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">3</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a></span>)</span>
</span></code> is permissible,
but will return <code><span class="syntax-root"><span class="syntax-number">3</span>
</span></code>, which is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a>.)<br/></dd><dt><a class="type-reference" href="chapter-12.xhtml#type-float">float</a></dt><dd>If the <span class="parameter">result-type</span> is any of <a class="type-reference" href="chapter-12.xhtml#type-float">float</a>,
 <a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a>, 
 <a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a>, 
 <a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a>, 
 <a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a>,
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is a 
<span class="issue-annotation"><a class="issue-reference" href="issues/real-number-type.xhtml#issue-real-number-type:x3j13-mar-89">Issue REAL-NUMBER-TYPE:X3J13-MAR-89</a><span class="glossary-reference error">glossary:real</span>,
</span>then the <span class="parameter">result</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-float">float</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">result-type</span>
which is equal in sign and magnitude to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> to whatever degree of
representational precision is permitted by that <a class="glossary-reference" href="chapter-26.xhtml#glossary-float">float</a> representation.
(If the <span class="parameter">result-type</span> is <a class="type-reference" href="chapter-12.xhtml#type-float">float</a>
and <span class="parameter">object</span> is not already a <a class="glossary-reference" href="chapter-26.xhtml#glossary-float">float</a>, 
then the <span class="parameter">result</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-single float">single float</a>.)<br/></dd><div class="issue-annotation"><a class="issue-reference" href="issues/function-type.xhtml#issue-function-type:x3j13-march-88">Issue FUNCTION-TYPE:X3J13-MARCH-88</a><dt><a class="type-reference" href="#type-function">function</a></dt><dd>If the <span class="parameter">result-type</span> is <a class="type-reference" href="#type-function">function</a>,
and <span class="parameter">object</span> is any 
<span class="issue-annotation"><span class="issue-reference error">issue:Issue COERCING-SETF-NAME-TO-FUNCTION:ALL-FUNCTION-NAMES</span><a class="glossary-reference" href="chapter-26.xhtml#glossary-function name">function name</a></span>that is <a class="glossary-reference" href="chapter-26.xhtml#glossary-fbound">fbound</a> 
but that is globally defined neither as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro name">macro name</a> nor as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-special operator">special operator</a>,
then the <span class="parameter">result</span> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-functional value">functional value</a> of <span class="parameter">object</span>.<br/>If the <span class="parameter">result-type</span> is <a class="type-reference" href="#type-function">function</a>,
and <span class="parameter">object</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a>,
then the <span class="parameter">result</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-closure">closure</a> of <span class="parameter">object</span>
in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-null lexical environment">null lexical environment</a>.
</dd></div><dt><a class="type-reference" href="#type-t">t</a></dt><dd>Any <span class="parameter">object</span> can be <a class="glossary-reference" href="chapter-26.xhtml#glossary-coerce">coerced</a> to an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-t">t</a>.
In this case, the <span class="parameter">object</span> is simply returned.<br/></dd></dl><br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">c</span>)</span></span> <span class="syntax-quote">'<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-vector">#(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span> <span class="syntax-quote">'<a class="function-reference" href="chapter-13.xhtml#function-character">character</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-character">#\A</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">4.56</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">#C<span class="syntax-symbol">(<span class="syntax-number">4.56</span> <span class="syntax-number">0.0</span>)</span></span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">4.5s0</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">#C<span class="syntax-symbol">(<span class="syntax-number">4.5s0</span> <span class="syntax-number">0.0s0</span>)</span></span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">7/2</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">7/2</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">0</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">0.0s0</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">3.5L0</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-float">float</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3.5L0</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-number">7/2</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-float">float</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3.5</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-cons">cons</a> <span class="syntax-number">1</span> <span class="syntax-number">2</span>)</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-number">1</span> <span class="syntax-symbol">.</span> <span class="syntax-number">2</span>)</span>
</span></code></pre><br/><div class="issue-annotation"><a class="issue-reference" href="issues/sequence-type-length.xhtml#issue-sequence-type-length:must-match">Issue SEQUENCE-TYPE-LENGTH:MUST-MATCH</a>All the following <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a> should signal an error:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">c</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">4</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-vector">#(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">c</span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">4</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">c</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">2</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-vector">#(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">c</span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">2</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-string">"foo"</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-string">string</a> <span class="syntax-number">2</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-vector">#(<span class="syntax-character">#\a</span> <span class="syntax-character">#\b</span> <span class="syntax-character">#\c</span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-string">string</a> <span class="syntax-number">2</span>)</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">1</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-simple-bit-vector">simple-bit-vector</a> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code></pre></div>
</dd></dl></div><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If a coercion is not possible, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a> is signaled.<br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-quote">'<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a></span>)</span>
</span></code> always signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a>.<br/>An error
of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled
if the <span class="parameter">result-type</span> is <a class="type-reference" href="#type-function">function</a> but
<span class="parameter">object</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> that is not <a class="glossary-reference" href="chapter-26.xhtml#glossary-fbound">fbound</a> or
if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> names a <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro">macro</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-special operator">special operator</a>.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/sequence-type-length.xhtml#issue-sequence-type-length:must-match">Issue SEQUENCE-TYPE-LENGTH:MUST-MATCH</a>An error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a> should be signaled if <span class="parameter">result-type</span>
specifies the number of elements and <span class="parameter">object</span> is of a different length.
</div>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="chapter-12.xhtml#function-rational">rational</a>, <a class="function-reference" href="chapter-12.xhtml#function-floor">floor</a>, <a class="function-reference" href="chapter-13.xhtml#function-char-code">char-code</a>, <a class="function-reference" href="chapter-13.xhtml#function-char-int">char-int</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd>Coercions from <a class="glossary-reference" href="chapter-26.xhtml#glossary-float">floats</a> to <a class="glossary-reference" href="chapter-26.xhtml#glossary-rational">rationals</a> 
and from <a class="glossary-reference" href="chapter-26.xhtml#glossary-ratio">ratios</a> to <a class="glossary-reference" href="chapter-26.xhtml#glossary-integer">integers</a> 
are not provided because of rounding problems.  <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-coerce">coerce</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-quote">'<a class="section-reference" href="chapter-26.xhtml#section-T">T</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-identity">identity</a> <span class="syntax-interned-symbol">x</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-interned-symbol">x</span>
</span></code></pre><br/></dd></dl></div></div><br/><br/><br/><div class="component" id="macro-deftype"><div class="header"><span class="left"><span class="name" id="macro-deftype">deftype</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue DECLS-AND-DOC</span>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">deftype</span>&nbsp;<span class="lambda-list">name lambda-list <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>[</mi><mi>[</mi></math> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">declaration</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>|</mi></math> <span class="parameter">documentation</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>]</mi><mi>]</mi></math> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values">name</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/><span class="parameter">lambda-list</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-deftype lambda list">deftype lambda list</a>.<br/><span class="parameter">declaration</span>&mdash;a <a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-expression">expression</a>; not evaluated.<br/><span class="parameter">documentation</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>; not evaluated.<br/><span class="parameter">form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-deftype">deftype</a> defines a <a class="glossary-reference" href="chapter-26.xhtml#glossary-derived type specifier">derived type specifier</a> named <span class="parameter">name</span>.<br/>The meaning of the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> is given in terms of
a function which expands the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> into another
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>, which itself will be expanded if it contains
references to another <a class="glossary-reference" href="chapter-26.xhtml#glossary-derived type specifier">derived type specifier</a>.<br/>The newly defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> may be referenced as a list of
the form <span class="explicit-mono">(<span class="parameter">name</span>  arg<sub>1</sub>  arg<sub>2</sub> ...)</span>.
The number of arguments must be appropriate to the <span class="parameter">lambda-list</span>.
If the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> takes no arguments, 
or if all of its arguments are optional, 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> may be used as an <a class="glossary-reference" href="chapter-26.xhtml#glossary-atomic type specifier">atomic type specifier</a>.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-expression">expressions</a> to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>,
 arg<sub>1</sub> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â€¦</mi></math>  arg<sub>n</sub>, are not <span class="glossary-reference error">glossary:evaluated</span>.
Instead, these <span class="glossary-reference error">glossary:literal objects</span> become the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> to which
corresponding <a class="glossary-reference" href="chapter-26.xhtml#glossary-parameter">parameters</a> become <a class="glossary-reference" href="chapter-26.xhtml#glossary-bound">bound</a>.<br/>The body of the <a class="macro-reference" href="#macro-deftype">deftype</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> 
<div class="issue-annotation"><a class="issue-reference" href="issues/defmacro-block-scope.xhtml#issue-defmacro-block-scope:excludes-bindings">Issue DEFMACRO-BLOCK-SCOPE:EXCLUDES-BINDINGS</a>(but not the <span class="parameter">lambda-list</span>)
</div>is
<div class="issue-annotation"><a class="issue-reference" href="issues/flet-implicit-block.xhtml#issue-flet-implicit-block:yes">Issue FLET-IMPLICIT-BLOCK:YES</a>implicitly enclosed in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-block">block</a> named <span class="parameter">name</span>,
</div>and is evaluated as an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>, 
returning a new <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue DEFINING-MACROS-NON-TOP-LEVEL:ALLOW</span>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-lexical environment">lexical environment</a> of the body is the one which was current
at the time the <a class="macro-reference" href="#macro-deftype">deftype</a> form was evaluated, augmented by the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variables</a> in the <span class="parameter">lambda-list</span>.
</div>
<div class="issue-annotation"><span class="issue-reference error">issue:Issue RECURSIVE-DEFTYPE:EXPLICITLY-VAGUE</span>Recursive expansion of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> returned as the expansion
must terminate, including the expansion of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> which
are nested within the expansion.<br/>The consequences are undefined if the result of fully expanding a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> contains any circular structure, except within
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> referred to by <a class="type-reference" href="#type-member">member</a> and <a class="type-reference" href="#type-eql">eql</a>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>.
</div>
<span class="parameter">Documentation</span> is attached to <span class="parameter">name</span> as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-documentation string">documentation string</a>
of kind <a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a>.<br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue COMPILE-FILE-HANDLING-OF-TOP-LEVEL-FORMS:CLARIFY</span>If a <a class="macro-reference" href="#macro-deftype">deftype</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> appears as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-top level form">top level form</a>,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-compiler">compiler</a> must ensure that the <span class="parameter">name</span> is recognized
in subsequent <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> declarations.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-programmer">programmer</a> must ensure that the body of a <a class="macro-reference" href="#macro-deftype">deftype</a> form 
can be <span class="glossary-reference error">glossary:evaluated</span> at compile time if the <span class="parameter">name</span> is
referenced in subsequent <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> declarations.  
If the expansion of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> is not defined fully at compile time
(perhaps because it expands into an unknown <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> or a
<a class="type-reference" href="#type-satisfies">satisfies</a> of a named <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> that isn't defined in the
compile-time environment), an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> may ignore any references to
this <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> in declarations and/or signal a warning.
</div>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">equidimensional</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">a</span>)</span>
  <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-&lt;">&lt;</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-rank">array-rank</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-number">2</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a> <span class="syntax-function">#'<a class="function-reference" href="chapter-12.xhtml#function-=">=</a></span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-dimensions">array-dimensions</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">EQUIDIMENSIONAL</span>
<span class="syntax-cons">(<a class="macro-reference" href="#macro-deftype">deftype</a> <span class="syntax-interned-symbol">square-matrix</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a> <span class="syntax-interned-symbol">size</span>)</span>
  <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-unquote">,<a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a></span> <span class="syntax-cons">(<span class="syntax-unquote">,<span class="syntax-interned-symbol">size</span></span> <span class="syntax-unquote">,<span class="syntax-interned-symbol">size</span></span>)</span>)</span>
        <span class="syntax-cons">(<a class="type-reference" href="#type-satisfies">satisfies</a> <span class="syntax-interned-symbol">equidimensional</span>)</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">SQUARE-MATRIX</span>
</span></code></pre><br/></dd></dl></div><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a>,
<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a>,
<a class="function-reference" href="chapter-25.xhtml#function-documentation">documentation</a>,
<a class="section-reference" href="#section-TypeSpecifiers">Type Specifiers</a>,
<a class="section-reference" href="chapter-3.xhtml#section-DocVsDecls">Syntactic Interaction of Documentation Strings and Declarations</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div></div>
</div><br/><br/><br/><div class="component" id="function-subtypep"><div class="header"><span class="left"><span class="name" id="function-subtypep">subtypep</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue SUBTYPEP-ENVIRONMENT:ADD-ARG</span>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">subtypep</span>&nbsp;<span class="lambda-list">type-1 type-2 <span class="lambda-list-keyword">&amp;optional</span> environment</span>&nbsp;â†’&nbsp;<span class="return-values">subtype-p, valid-p</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">type-1</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.

<span class="parameter">type-2</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.


<span class="parameter">environment</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-environment">environment</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.
  The default is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, denoting the <a class="glossary-reference" href="chapter-26.xhtml#glossary-null lexical environment">null lexical environment</a>
	   and the current <a class="glossary-reference" href="chapter-26.xhtml#glossary-global environment">global environment</a>.

<span class="parameter">subtype-p</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/><span class="parameter">valid-p</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>If <span class="parameter">type-1</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a> of <span class="parameter">type-2</span>, 
the first <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>.
Otherwise, the first <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>,
indicating that either
 <span class="parameter">type-1</span> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <span class="parameter">type-2</span>, or else
 <span class="parameter">type-1</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <span class="parameter">type-2</span> 
  but is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a>.<br/>A second <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> is also returned indicating the `certainty' of 
the first <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a>.  If this value is <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>, then the first
value is an accurate indication of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> relationship.
(The second <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> is always <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> when the first <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a>
 is <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>.)<br/>Figure <span class="explicit-mono">()</span>&ndash; summarizes the possible combinations of <span class="glossary-reference error">glossary:values</span>
that might result.<br/><span class="float" id="figure-Result possibilities for subtypep"><table><thead><th>Value 1</th><th>Value 2</th><th>Meaning</th></thead><tbody><tr><td><a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>  </td><td> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>  </td><td> <span class="parameter">type-1</span> is definitely a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of
			      <span class="parameter">type-2</span>.</td></tr><tr><td><a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> </td><td> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>  </td><td> <span class="parameter">type-1</span> is definitely not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of
			      <span class="parameter">type-2</span>.</td></tr><tr><td><a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> </td><td> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> </td><td> <a class="function-reference" href="#function-subtypep">subtypep</a> could not determine the relationship,</td></tr><tr><td/><td> 	            </td><td> so <span class="parameter">type-1</span> might or might not be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of
			      <span class="parameter">type-2</span>.</td></tr></tbody></table><div class="caption">Result possibilities for subtypep</div></span><br/><div class="issue-annotation"><a class="issue-reference" href="issues/subtypep-too-vague.xhtml#issue-subtypep-too-vague:clarify-more">Issue SUBTYPEP-TOO-VAGUE:CLARIFY-MORE</a>
<a class="function-reference" href="#function-subtypep">subtypep</a> is permitted to return the 
<span class="glossary-reference error">glossary:values</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> only when at least
one argument involves one of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>:
  <a class="type-reference" href="#type-and">and</a>,
  <a class="type-reference" href="#type-eql">eql</a>,
  the list form of <a class="type-reference" href="#type-function">function</a>,
  <a class="type-reference" href="#type-member">member</a>,
  <a class="type-reference" href="#type-not">not</a>,
  <a class="type-reference" href="#type-or">or</a>,
  <a class="type-reference" href="#type-satisfies">satisfies</a>,
or
  <a class="type-reference" href="#type-values">values</a>.
(A <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> `involves' such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> if, 
 after being <a class="glossary-reference" href="chapter-26.xhtml#glossary-type expand">type expanded</a>,
 it contains that <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> in a position that would call for
 its meaning as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> to be used.)
One consequence of this is that if neither <span class="parameter">type-1</span> nor <span class="parameter">type-2</span>
involves any of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>, then <a class="function-reference" href="#function-subtypep">subtypep</a> is obliged
to determine the relationship accurately.  In particular, <a class="function-reference" href="#function-subtypep">subtypep</a> 
returns the <span class="glossary-reference error">glossary:values</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
if the arguments are <a class="function-reference" href="chapter-5.xhtml#function-equal">equal</a> and do not involve
any of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a>.<br/><a class="function-reference" href="#function-subtypep">subtypep</a> never returns a second value of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> when both
<span class="parameter">type-1</span> and <span class="parameter">type-2</span> involve only
 the names in <span class="figure-reference error">figure:StandardizedAtomicTypeSpecs,</span> or
 names of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> defined by <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>,
<a class="macro-reference" href="chapter-9.xhtml#macro-define-condition">define-condition</a>,
 or <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>, or
 <a class="glossary-reference" href="chapter-26.xhtml#glossary-derived type">derived types</a> that expand into only those names.
While <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> listed in <a class="figure-reference" href="#figure-StandardizedAtomicTypeSpecs">StandardizedAtomicTypeSpecs</a> and 
names of <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> and <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> can in some cases be
implemented as <a class="glossary-reference" href="chapter-26.xhtml#glossary-derived type">derived types</a>, <a class="function-reference" href="#function-subtypep">subtypep</a> regards them as primitive.<br/>The relationships between <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> reflected by <a class="function-reference" href="#function-subtypep">subtypep</a>
are those specific to the particular implementation.  For example, if
an implementation supports only a single type of floating-point numbers,
in that implementation <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-float">float</a></span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a></span>)</span>
</span></code> 
returns the <span class="glossary-reference error">glossary:values</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> 
(since the two <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> are identical).
</div>
<div class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a>For all <span class="parameter">T1</span> and <span class="parameter">T2</span> other than <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code>, 
<code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">T1</span>)</span>
</span></code> and <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">T2</span>)</span>
</span></code> 
are two different <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that always refer to the same sets of
things if and only if they refer to <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">arrays</a>
of exactly the same specialized representation, <span class="explicit-italic"> i.e.</span>, 
if <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="parameter">T1</span></span>)</span>
</span></code>  and
   <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="parameter">T2</span></span>)</span>
</span></code> 
return two different <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that always refer to the same sets of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.
This is another way of saying that 
<code><span class="syntax-root"><span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">type-specifier</span>)</span></span>
</span></code>
and
<code><span class="syntax-root"><span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-unquote">,<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="parameter">type-specifier</span></span>)</span></span>)</span></span>
</span></code> 
refer to the same
set of specialized <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">array</a> representations.
For all <span class="parameter">T1</span> and <span class="parameter">T2</span> other than <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code>, 
the intersection of
    <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">T1</span>)</span>
</span></code>
and <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">T2</span>)</span>
</span></code> is the empty set
if and only if they refer to <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">arrays</a> of different,
distinct specialized representations.  <br/>Therefore,<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">T1</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">T2</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre>
if and only if<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">T1</span></span>)</span>  <a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a>
<span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">T2</span></span>)</span>  
</span></code></pre><br/>return two different <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that always refer to the same sets of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.<br/>For all type-specifiers <span class="parameter">T1</span> and <span class="parameter">T2</span> other than <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code>, <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="syntax-interned-symbol">T1</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="syntax-interned-symbol">T2</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre><br/>if:
<ol><li><code><span class="syntax-root"><span class="syntax-interned-symbol">T1</span>
</span></code> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <code><span class="syntax-root"><span class="syntax-interned-symbol">T2</span>
</span></code>, or
</li><li><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-upgraded-complex-part-type">upgraded-complex-part-type</a> <span class="syntax-quote">'<span class="parameter">T1</span></span>)</span>
</span></code> and
	      <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-upgraded-complex-part-type">upgraded-complex-part-type</a> <span class="syntax-quote">'<span class="parameter">T2</span></span>)</span>
</span></code> 
   return two different <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that always refer to the 
   same sets of <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>; in this case,
    <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="parameter">T1</span>)</span>
</span></code> and 
    <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="parameter">T2</span>)</span>
</span></code> both refer to the 
   same specialized representation.
</li></ol> 
The <span class="glossary-reference error">glossary:values</span> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> otherwise.<br/>The form<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <a class="function-reference" href="chapter-12.xhtml#function-float">float</a>)</span></span>)</span>
</span></code></pre>
 must return <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> in all implementations, but<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <a class="function-reference" href="chapter-12.xhtml#function-float">float</a>)</span></span>)</span>
</span></code></pre><br/>returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> only in implementations that do not have a specialized <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">array</a>
representation for <a class="glossary-reference" href="chapter-26.xhtml#glossary-single float">single floats</a> distinct from that for other <a class="glossary-reference" href="chapter-26.xhtml#glossary-float">floats</a>.<br/></div> 

</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="type-reference" href="#type-compiled-function">compiled-function</a></span> <span class="syntax-quote">'<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-14.xhtml#function-null">null</a></span> <span class="syntax-quote">'<a class="function-reference" href="chapter-14.xhtml#function-list">list</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-14.xhtml#function-null">null</a></span> <span class="syntax-quote">'<a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></span> <span class="syntax-quote">'<a class="function-reference" href="chapter-16.xhtml#function-string">string</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="#type-satisfies">satisfies</a> <span class="syntax-interned-symbol">dummy</span>)</span></span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">1</span> <span class="syntax-number">3</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">1</span> <span class="syntax-number">4</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span>)</span></span> <span class="syntax-quote">'<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span> <span class="syntax-cons">(<span class="syntax-number">0</span>)</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> ;or \term{false}, \term{false}
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a>)</span></span> <span class="syntax-quote">'<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> ;or \term{false}, \term{false}
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-member">member</a>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> ;or \term{false}, \term{false}
</span></code></pre><br/><div class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a> Let <code><span class="syntax-root"><span class="syntax-interned-symbol">&lt;aet-x&gt;</span>
</span></code> and <code><span class="syntax-root"><span class="syntax-interned-symbol">&lt;aet-y&gt;</span>
</span></code> be two distinct <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that 
do not always refer to the same sets of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>
in a given implementation, but for which
<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a>, will return an 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">array</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/>Thus, in each case, <br/><pre><code><span class="syntax-root">  <span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-element-type">array-element-type</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">&lt;aet-x&gt;</span></span>)</span>)</span>
            <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-element-type">array-element-type</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">&lt;aet-y&gt;</span></span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 
  <span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-element-type">array-element-type</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">&lt;aet-y&gt;</span></span>)</span>)</span>
            <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-element-type">array-element-type</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">&lt;aet-x&gt;</span></span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre></div> 
If  <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-x&gt;</span>)</span>
</span></code> 
and <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-y&gt;</span>)</span>
</span></code> are different names for
exactly the same set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>, 
these names should always refer to the same sets of
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.
 That implies that the following set of tests are also true:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-x&gt;</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-y&gt;</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-y&gt;</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">&lt;aet-x&gt;</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre><br/></dd></dl></div><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Types">Types</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd><div class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a>The small differences between the <a class="function-reference" href="#function-subtypep">subtypep</a> specification for
the <a class="type-reference" href="chapter-15.xhtml#type-array">array</a> and <a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a> types are necessary because there 
is no creation function for <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complexes</a> which allows 
the specification of the resultant part type independently of
the actual types of the parts.  Thus in the case of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-12.xhtml#type-complex">complex</a>,
the actual type of the parts is referred to, although a <a class="glossary-reference" href="chapter-26.xhtml#glossary-number">number</a> 
can be a member of more than one <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.
For example, <code><span class="syntax-root"><span class="syntax-number">17</span>
</span></code> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-mod">mod</a> <span class="syntax-number">18</span>)</span>
</span></code> 
as well as <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-mod">mod</a> <span class="syntax-number">256</span>)</span>
</span></code> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>;
and <code><span class="syntax-root"><span class="syntax-number">2.3f5</span>
</span></code> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a> 
as well as <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-12.xhtml#type-float">float</a>.
</div> 
</dd></dl></div></div>
</div><br/><br/><br/><div class="component" id="function-type-of"><div class="header"><span class="left"><span class="name" id="function-type-of">type-of</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">type-of</span>&nbsp;<span class="lambda-list">object</span>&nbsp;â†’&nbsp;<span class="return-values">typespec</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><div class="issue-annotation"><a class="issue-reference" href="issues/type-of-underconstrained.xhtml#issue-type-of-underconstrained:add-constraints">Issue TYPE-OF-UNDERCONSTRAINED:ADD-CONSTRAINTS</a> 
Returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>, <span class="parameter">typespec</span>, for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
that has the <span class="parameter">object</span> as an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a>.
The <span class="parameter">typespec</span> satisfies the following:<br/><ol><li>For any <span class="parameter">object</span> that is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a> of some <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in type">built-in type</a>:<br/><dl><dt>a.</dt><dd>the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> returned is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a> of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-built-in type">built-in type</a>.<br/></dd><dt>b.</dt><dd>the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> returned does not involve 
     <code><span class="syntax-root"><a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a>
</span></code>,
     <code><span class="syntax-root"><a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a>
</span></code>,
     <code><span class="syntax-root"><a class="function-reference" href="chapter-14.xhtml#function-member">member</a>
</span></code>,
     <code><span class="syntax-root"><a class="function-reference" href="chapter-5.xhtml#function-not">not</a>
</span></code>,
     <code><span class="syntax-root"><a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a>
</span></code>, 
     <code><span class="syntax-root"><a class="type-reference" href="#type-satisfies">satisfies</a>
</span></code>,
  or <code><span class="syntax-root"><a class="function-reference" href="chapter-5.xhtml#function-values">values</a>
</span></code>.
</dd></dl><br/></li><li>For all <span class="parameter">objects</span>, <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="parameter">object</span> <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="parameter">object</span>)</span>)</span>
</span></code> 
returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>.
Implicit in this is that <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> which are
not valid for use with <a class="function-reference" href="#function-typep">typep</a>, such as the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> form of the
<a class="type-reference" href="#type-function">function</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>, are never returned by <a class="function-reference" href="#function-type-of">type-of</a>.<br/></li><li>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> returned by <a class="function-reference" href="#function-type-of">type-of</a> is always a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a>
of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> returned by <a class="function-reference" href="chapter-7.xhtml#function-class-of">class-of</a>.  That is,<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="parameter">object</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-class-of">class-of</a> <span class="parameter">object</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre><br/></li><li>For <span class="parameter">objects</span> of metaclass <a class="type-reference" href="#type-structure-class">structure-class</a> or <a class="type-reference" href="#type-standard-class">standard-class</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a>and for <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>,
</span><a class="function-reference" href="#function-type-of">type-of</a> returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> returned 
by <a class="function-reference" href="chapter-7.xhtml#function-class-of">class-of</a> if it has a <a class="glossary-reference" href="chapter-26.xhtml#glossary-proper name">proper name</a>,
and otherwise returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> itself.
In particular, for <span class="parameter">objects</span> created by the constructor function
of a structure defined with <a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> without a <span class="keyword">:type</span> option,
<a class="function-reference" href="#function-type-of">type-of</a> returns the structure name; and for <span class="parameter">objects</span> created 
by <a class="function-reference" href="chapter-9.xhtml#function-make-condition">make-condition</a>, the <span class="parameter">typespec</span> is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/></li><div class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:type-of-handles-floats">Issue TYPE-OF-AND-PREDEFINED-CLASSES:TYPE-OF-HANDLES-FLOATS</a><li>For each of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>
     <a class="type-reference" href="chapter-12.xhtml#type-short-float">short-float</a>, 
     <a class="type-reference" href="chapter-12.xhtml#type-single-float">single-float</a>,
     <a class="type-reference" href="chapter-12.xhtml#type-double-float">double-float</a>,
  or <a class="type-reference" href="chapter-12.xhtml#type-long-float">long-float</a>
of which the <span class="parameter">object</span> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a>,
the <span class="parameter">typespec</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-recognizable subtype">recognizable subtype</a> of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.
</li></div></ol><br/></div> 


</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"/></code></pre><br/><div class="issue-annotation"><a class="issue-reference" href="issues/type-of-underconstrained.xhtml#issue-type-of-underconstrained:add-constraints">Issue TYPE-OF-UNDERCONSTRAINED:ADD-CONSTRAINTS</a><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>          
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">1</span> <span class="syntax-symbol">.</span> <span class="syntax-number">2</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="function-reference" href="chapter-14.xhtml#function-cons">cons</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-cons">cons</a> <a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a> <a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-number">#c<span class="syntax-symbol">(<span class="syntax-number">0</span> <span class="syntax-number">1</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a> <span class="syntax-interned-symbol">temp-struct</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span> <span class="syntax-interned-symbol">z</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">TEMP-STRUCT</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">make-temp-struct</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">TEMP-STRUCT</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-string">"abc"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="function-reference" href="chapter-16.xhtml#function-string">string</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-string">string</a> <span class="syntax-number">3</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-string">"abc"</span>)</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-16.xhtml#function-string">string</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-expt">expt</a> <span class="syntax-number">2</span> <span class="syntax-number">40</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="type-reference" href="chapter-12.xhtml#type-bignum">bignum</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">1099511627776</span> <span class="syntax-number">1099511627776</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-two-package-markers syntax-interned-symbol">SYSTEM::TWO-WORD-BIGNUM</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-number">112312</span>)</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*foo*</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">5</span> <span class="syntax-keyword-symbol">:element-type</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">*FOO*</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-class-name">class-name</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-class-of">class-of</a> <span class="syntax-interned-symbol">*foo*</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-type-of">type-of</a> <span class="syntax-interned-symbol">*foo*</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mover>or<mi>â†’</mi></mover></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-number">5</span>)</span>
</span></code></pre></div>
</dd></dl></div><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>!<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="chapter-15.xhtml#function-array-element-type">array-element-type</a>,
<a class="function-reference" href="chapter-7.xhtml#function-class-of">class-of</a>,
<a class="macro-reference" href="chapter-8.xhtml#macro-defstruct">defstruct</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-typecase">typecase</a>,
<a class="function-reference" href="#function-typep">typep</a>,
<a class="section-reference" href="#section-Types">Types</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd>Implementors are encouraged to arrange for <a class="function-reference" href="#function-type-of">type-of</a> to return
<span class="issue-annotation"><a class="issue-reference" href="issues/type-of-underconstrained.xhtml#issue-type-of-underconstrained:add-constraints">Issue TYPE-OF-UNDERCONSTRAINED:ADD-CONSTRAINTS</a>a portable value.
</span> 
</dd></dl></div></div><br/><br/><br/><div class="component" id="function-typep"><div class="header"><span class="left"><span class="name" id="function-typep">typep</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><div class="issue-annotation"><span class="issue-reference error">issue:Issue SUBTYPEP-ENVIRONMENT:ADD-ARG</span>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">typep</span>&nbsp;<span class="lambda-list">object type-specifier <span class="lambda-list-keyword">&amp;optional</span> environment</span>&nbsp;â†’&nbsp;<span class="return-values">generalized-boolean</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">object</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">type-specifier</span>&mdash;any <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> except 
<span class="issue-annotation"><a class="issue-reference" href="issues/function-type.xhtml#issue-function-type">Issue FUNCTION-TYPE</a></span><span class="symbol-reference error">symbol:values</span>, or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> list
whose first element is either <a class="symbol-reference" href="chapter-2.xhtml#symbol-function">function</a> or <span class="symbol-reference error">symbol:values</span>.<br/><span class="parameter">environment</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-environment">environment</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.
  The default is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, denoting the <a class="glossary-reference" href="chapter-26.xhtml#glossary-null lexical environment">null lexical environment</a>
	   and the and current <a class="glossary-reference" href="chapter-26.xhtml#glossary-global environment">global environment</a>.

<span class="parameter">generalized-boolean</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if <span class="parameter">object</span> is of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> specified by <span class="parameter">type-specifier</span>;
otherwise, returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>.<br/>A <span class="parameter">type-specifier</span> of the form <code><span class="syntax-root"><span class="syntax-cons">(<a class="type-reference" href="#type-satisfies">satisfies</a> <span class="syntax-interned-symbol">fn</span>)</span>
</span></code> 
is handled by applying the function <code><span class="syntax-root"><span class="syntax-interned-symbol">fn</span>
</span></code> to <span class="parameter">object</span>.<br/><div class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="parameter">object</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">type-specifier</span>)</span></span>)</span>
</span></code>, 
where <span class="parameter">type-specifier</span> is not <code><span class="syntax-root"><a class="function-reference" href="chapter-12.xhtml#function-*">*</a>
</span></code>,   
returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if and only if <span class="parameter">object</span> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">array</a> 
that could be the result 
of supplying <span class="parameter">type-specifier</span> 
as the <span class="keyword">:element-type</span> argument to <a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a>.
<code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a>)</span>
</span></code> refers to all <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">arrays</a> 
regardless of element type, while <code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="parameter">type-specifier</span>)</span>
</span></code>
refers only to those <a class="glossary-reference" href="chapter-26.xhtml#glossary-array">arrays</a> 
that can result from giving <span class="parameter">type-specifier</span> as the
<span class="keyword">:element-type</span> argument to <a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a>.  
A similar interpretation applies to <code><span class="syntax-root"><span class="syntax-cons">(<a class="type-reference" href="chapter-15.xhtml#type-simple-array">simple-array</a> <span class="parameter">type-specifier</span>)</span>
</span></code> 
and <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-vector">vector</a> <span class="parameter">type-specifier</span>)</span>
</span></code>.
See <span class="section-reference error">section:ArrayUpgrading.</span><br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="parameter">object</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="parameter">type-specifier</span>)</span></span>)</span>
</span></code>
returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> for all <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a> numbers that can result from 
giving <a class="glossary-reference" href="chapter-26.xhtml#glossary-number">numbers</a> of type <span class="parameter">type-specifier</span>
to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a>, plus all other <a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a> numbers 
of the same specialized representation.      
Both the real and the imaginary parts of any such 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-complex">complex</a> number must satisfy:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <a class="function-reference" href="chapter-12.xhtml#function-realpart">realpart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">type-specifier</span></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <a class="function-reference" href="chapter-12.xhtml#function-imagpart">imagpart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">type-specifier</span></span>)</span>
</span></code></pre><br/>See the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="chapter-12.xhtml#function-upgraded-complex-part-type">upgraded-complex-part-type</a>.<br/></div>
</dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-number">12</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-1+">1+</a> <a class="constant-reference" href="chapter-12.xhtml#constant-most-positive-fixnum">most-positive-fixnum</a>)</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-number">1</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-mod">mod</a> <span class="syntax-number">2</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-number">#c<span class="syntax-symbol">(<span class="syntax-number">1</span> <span class="syntax-number">1</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a> <span class="syntax-number">1</span>)</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
;; To understand this next example, you might need to refer to
;; \secref\RuleOfCanonRepForComplexRationals.
 <span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-number">#c<span class="syntax-symbol">(<span class="syntax-number">0</span> <span class="syntax-number">0</span>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-complex">complex</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a> <span class="syntax-number">0</span>)</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
</span></code></pre><br/><div class="issue-annotation"><a class="issue-reference" href="issues/array-type-element-type-semantics.xhtml#issue-array-type-element-type-semantics:unify-upgrading">Issue ARRAY-TYPE-ELEMENT-TYPE-SEMANTICS:UNIFY-UPGRADING</a>Let <code><span class="syntax-root"><span class="syntax-interned-symbol">A\sssx</span>
</span></code> and <code><span class="syntax-root"><span class="syntax-interned-symbol">A\sssy</span>
</span></code> be two <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifiers</a> that 
denote different <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>, but for which<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssx</span></span>)</span>
</span></code></pre>
and<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssy</span></span>)</span>
</span></code></pre>
denote the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  Notice that<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssx</span></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">A\sssx</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssy</span></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">A\sssy</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssx</span></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">A\sssy</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-number">0</span> <span class="syntax-keyword-symbol">:element-type</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">A\sssy</span></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <span class="syntax-interned-symbol">A\sssx</span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre><br/></div> 
</dd></dl></div><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>An error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-error">error</a> is signaled if <span class="parameter">type-specifier</span> is <code><span class="syntax-root"><a class="function-reference" href="chapter-5.xhtml#function-values">values</a>
</span></code>, 
or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> list whose first element is either
<a class="symbol-reference" href="chapter-2.xhtml#symbol-function">function</a> or <span class="symbol-reference error">symbol:values</span>.<br/>The consequences are undefined if
the <span class="parameter">type-specifier</span> is not a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-type-of">type-of</a>,
<a class="function-reference" href="chapter-15.xhtml#function-upgraded-array-element-type">upgraded-array-element-type</a>,
<a class="function-reference" href="chapter-12.xhtml#function-upgraded-complex-part-type">upgraded-complex-part-type</a>,
<a class="section-reference" href="#section-TypeSpecifiers">Type Specifiers</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">Implementations</a> are encouraged to recognize and optimize the case of 
<code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-typep">typep</a> <span class="parameter">x</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-3.xhtml#special-operator-the">the</a> <a class="type-reference" href="#type-class">class</a> <span class="parameter">y</span>)</span>)</span>
</span></code>,
since it does not involve any need for expansion 
of <a class="macro-reference" href="#macro-deftype">deftype</a> information at runtime.<br/><pre><code><span class="syntax-root">
</span></code></pre><br/></dd></dl></div></div>
</div><br/><br/>
<br/><div class="component" id="type-type-error"><div class="header"><span class="left"><span class="name" id="type-type-error">type-error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-type-error">type-error</a>,
<a class="type-reference" href="chapter-9.xhtml#type-error">error</a>,
<a class="type-reference" href="chapter-9.xhtml#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>,
<a class="type-reference" href="#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a> represents a situation in which an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> is not
of the expected type.  The ``offending datum'' and ``expected type'' are initialized 
by the initialization arguments named <span class="keyword">:datum</span> and <span class="keyword">:expected-type</span> to <a class="function-reference" href="chapter-9.xhtml#function-make-condition">make-condition</a>,
and are <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a> by the functions 
<a class="function-reference" href="#function-type-error-datum">type-error-datum</a> and <a class="function-reference" href="#function-type-error-expected-type">type-error-expected-type</a>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-type-error-datum">type-error-datum</a>, <a class="function-reference" href="#function-type-error-expected-type">type-error-expected-type</a><br/></dd></dl></div></div><br/>
<br/><div class="component" id="function-type-error-datum"><div class="header"><span class="left"><span class="name" id="function-type-error-datum">type-error-datum</span>, <span class="name" id="function-type-error-expected-type">type-error-expected-type</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">type-error-datum</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;<span class="return-values">datum</span></span><br/>
<span class="function-definition"><span class="name">type-error-expected-type</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;<span class="return-values">expected-type</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a>.<br/><span class="parameter">datum</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">expected-type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-type-error-datum">type-error-datum</a> returns the offending datum in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a>
represented by the <span class="parameter">condition</span>.<br/><a class="function-reference" href="#function-type-error-expected-type">type-error-expected-type</a> returns the expected type of the
offending datum in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a> represented by the <span class="parameter">condition</span>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">fix-digits</span> <span class="syntax-cons">(<a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-9.xhtml#macro-check-type">check-type</a> <a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a> <a class="type-reference" href="#type-type-error">type-error</a>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let*">let*</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">digits</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">zero</span> <span class="syntax-interned-symbol">one</span> <span class="syntax-interned-symbol">two</span> <span class="syntax-interned-symbol">three</span> <span class="syntax-interned-symbol">four</span>
                   <span class="syntax-interned-symbol">five</span> <span class="syntax-interned-symbol">six</span> <span class="syntax-interned-symbol">seven</span> <span class="syntax-interned-symbol">eight</span> <span class="syntax-interned-symbol">nine</span>)</span></span>)</span>
         <span class="syntax-cons">(<span class="syntax-interned-symbol">val</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-position">position</a> <span class="syntax-cons">(<a class="function-reference" href="#function-type-error-datum">type-error-datum</a> <a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>)</span> <span class="syntax-interned-symbol">digits</span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">val</span> <span class="syntax-cons">(<a class="function-reference" href="#function-subtypep">subtypep</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a></span> <span class="syntax-cons">(<a class="function-reference" href="#function-type-error-expected-type">type-error-expected-type</a> <a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>)</span>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-9.xhtml#function-store-value">store-value</a> <span class="syntax-number">7</span>)</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">foo</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-9.xhtml#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="#type-type-error">type-error</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">fix-digits</span></span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-9.xhtml#macro-check-type">check-type</a> <span class="syntax-interned-symbol">x</span> <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">seven</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">10</span>
</span></code></pre><br/></dd></dl></div><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-type-error">type-error</a>,
<a class="section-reference" href="chapter-9.xhtml#section-ChapNine">Conditions</a><br/></dd></dl></div><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/>
</dd></dl></div></div><br/><br/>
<br/><div class="component" id="type-simple-type-error"><div class="header"><span class="left"><span class="name" id="type-simple-type-error">simple-type-error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><span class="issue-annotation"><a class="issue-reference" href="issues/type-of-and-predefined-classes.xhtml#issue-type-of-and-predefined-classes:unify-and-extend">Issue TYPE-OF-AND-PREDEFINED-CLASSES:UNIFY-AND-EXTEND</a><a class="type-reference" href="#type-simple-type-error">simple-type-error</a>,
<a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a>,
<a class="type-reference" href="#type-type-error">type-error</a>,
<a class="type-reference" href="chapter-9.xhtml#type-error">error</a>,
<a class="type-reference" href="chapter-9.xhtml#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="chapter-9.xhtml#type-condition">condition</a>,
<a class="type-reference" href="#type-t">t</a></span>
</dd></dl><dl><dt class="label">Description</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">Conditions</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-simple-type-error">simple-type-error</a> 
are like <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-type-error">type-error</a>, 
except that they provide an alternate mechanism for specifying
how the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is to be <a class="glossary-reference" href="chapter-26.xhtml#glossary-report">reported</a>;
see the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="chapter-9.xhtml#type-simple-condition">simple-condition</a>,
<span class="issue-annotation"><a class="issue-reference" href="issues/format-string-arguments.xhtml#issue-format-string-arguments:specify">Issue FORMAT-STRING-ARGUMENTS:SPECIFY</a><a class="function-reference" href="chapter-9.xhtml#function-simple-condition-format-control">simple-condition-format-control</a>,
</span><a class="function-reference" href="chapter-9.xhtml#function-simple-condition-format-arguments">simple-condition-format-arguments</a>, 
<a class="function-reference" href="#function-type-error-datum">type-error-datum</a>,
<a class="function-reference" href="#function-type-error-expected-type">type-error-expected-type</a><br/></dd></dl></div></div><br/><br/><div class="issue-annotation"><a class="issue-reference" href="issues/type-expand.xhtml#issue-type-expand">Issue type-expand</a><br/><div class="component" id="function-type-expand"><div class="header"><span class="left"><span class="name" id="function-type-expand">type-expand</span>, <span class="name" id="function-type-expand-1">type-expand-1</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">type-expand</span>&nbsp;<span class="lambda-list">type-specifier <span class="lambda-list-keyword">&amp;optional</span> env</span>&nbsp;â†’&nbsp;<span class="return-values">expansion, expanded-p</span></span><br/>
<span class="function-definition"><span class="name">type-expand-1</span>&nbsp;<span class="lambda-list">type-specifier <span class="lambda-list-keyword">&amp;optional</span> env</span>&nbsp;â†’&nbsp;<span class="return-values">expansion, expanded-p</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">type-specifier</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">env</span>&mdash;an environment object. The default is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/><span class="parameter">expansion</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">expanded-p</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generalized boolean">generalized boolean</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><span class="function-reference error">function:typexpand</span> and <span class="function-reference error">function:typexpand-1</span> expand type macros.<br/>If <span class="parameter">type-specifier</span> is a <span class="glossary-reference error">glossary:macro type specifier</span>, then
<a class="function-reference" href="chapter-3.xhtml#function-macroexpand-1">macroexpand-1</a> expands the <span class="glossary-reference error">glossary:macro type specifier</span> once.<br/><span class="function-reference error">function:typexpand</span> repeatedly expands <span class="parameter">type-specifier</span> until it
is no longer a <span class="glossary-reference error">glossary:macro type specifier</span>. In effect,
<span class="function-reference error">function:typexpand</span> calls <span class="function-reference error">function:typexpand-1</span> repeatedly until the
secondary value it returns is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>If <span class="parameter">type-specifier</span> is a <span class="glossary-reference error">glossary:macro type specifier</span>, then the
expansion is a macro expansion and <span class="parameter">expanded-p</span> is
<a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>. Otherwise, the expansion is <span class="parameter">type-specifier</span> and
<span class="parameter">expanded-p</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>.<br/>Macro expansion is carried out as follows. Once <span class="function-reference error">function:typexpand-1</span>
has determined that the <span class="parameter">type-specifier</span> is a <span class="glossary-reference error">glossary:macro type
specifier</span>, it obtains an appropriate expansion function as by
<a class="function-reference" href="#function-type-macro-function">type-macro-function</a>. This function is called with two
arguments: the <span class="parameter">type-specifier</span>, and the <span class="parameter">env</span>. The value
returned from this call is taken to be the expansion of
the <span class="parameter">type-specifier</span>. [paragraph only included if proposal
"THREE-NEW-OPERATORS" is adopted]<br/>In addition to macro definitions in the global environment, any local
macro definitions established within <span class="parameter">env</span> by <span class="special-operator-reference error">special-operator:typelet</span>
are considered. If only <span class="parameter">type-specifier</span> is supplied as an
argument, then the environment is effectively null, and only global
macro definitions as established by <a class="macro-reference" href="#macro-deftype">deftype</a> are
considered. [paragraph only included if "TYPELET" is adopted]<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root">;; Note: We use PAIR instead of CONS because an implementation is permitted
;; to define CONS as a macro type specifier itself.
<span class="syntax-cons">(<a class="macro-reference" href="#macro-deftype">deftype</a> <span class="syntax-interned-symbol">list-of</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">elements</span>)</span>
  <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-null">null</a> <span class="syntax-interned-symbol">elements</span>)</span>
      <span class="syntax-quote">'<a class="function-reference" href="chapter-14.xhtml#function-null">null</a></span>
      <span class="syntax-quasiquote">`<span class="syntax-cons">(<span class="syntax-interned-symbol">pair</span> <span class="syntax-unquote">,<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-first">first</a> <span class="syntax-interned-symbol">elements</span>)</span></span> <span class="syntax-cons">(<span class="syntax-interned-symbol">list-of</span> <span class="syntax-unquote">,@<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-rest">rest</a> <span class="syntax-interned-symbol">elements</span>)</span></span>)</span>)</span></span>)</span>)</span>

<span class="syntax-cons">(<a class="macro-reference" href="#macro-deftype">deftype</a> <span class="syntax-interned-symbol">list-n</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span> <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-interned-symbol">element-type</span>)</span>
  <span class="syntax-quasiquote">`<span class="syntax-cons">(<span class="syntax-interned-symbol">list-of</span> <span class="syntax-unquote">,@<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-make-list">make-list</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-keyword-symbol">:initial-element</span> <span class="syntax-interned-symbol">element-type</span>)</span></span>)</span></span>)</span>

<span class="syntax-cons">(<span class="syntax-interned-symbol">typexpand-1</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">list-n</span> <span class="syntax-number">2</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">LIST-OF</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<span class="syntax-interned-symbol">typexpand</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">list-n</span> <span class="syntax-number">2</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">PAIR</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">LIST-OF</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span>)</span><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
<span class="syntax-cons">(<span class="syntax-interned-symbol">typexpand</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">not-a-macro</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">NOT-A-MACRO</span><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
<span class="syntax-cons">(<span class="syntax-interned-symbol">typexpand-1</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">not-a-macro</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">NOT-A-MACRO</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span><span class="syntax-verbatim">,</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>
</span></code></pre><br/></dd></dl></div><dl><dt class="label">Affected By</dt><dd><a class="macro-reference" href="#macro-deftype">deftype</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> of <a class="function-reference" href="#function-type-macro-function">type-macro-function</a> [if proposal is adopted],
<span class="special-operator-reference error">special-operator:typelet</span> [if proposal is adopted]<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-type-macro-function">type-macro-function</a>,
<a class="macro-reference" href="#macro-deftype">deftype</a>
</dd></dl></div></div><br/><br/><br/><div class="component" id="function-type-macro-function"><div class="header"><span class="left"><span class="name" id="function-type-macro-function">type-macro-function</span></span><span class="right"><span class="ftype">Accessor</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">type-macro-function</span>&nbsp;<span class="lambda-list">name <span class="lambda-list-keyword">&amp;optional</span> environment</span>&nbsp;â†’&nbsp;<span class="return-values">function</span></span><br/>
<span class="setf-definition">(setf (<span class="name">type-macro-function</span>&nbsp;<span class="lambda-list">name <span class="lambda-list-keyword">&amp;optional</span> environment</span>) <span class="new-value">new-function</span>)</span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/><span class="parameter">environment</span>&mdash;an <span class="glossary-reference error">glossary:enviornment object</span>.<br/><span class="parameter">function</span>, <span class="parameter">new-function</span>&mdash;a <span class="glossary-reference error">glossary:type macro function</span>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Accesses the <span class="glossary-reference error">glossary:type macro function</span> named <span class="parameter">name</span>, if any, in the <span class="parameter">environment</span>.<br/>A value of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> denotes the absence of a <span class="glossary-reference error">glossary:type macro function</span> named <span class="parameter">name</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>The consequences are undefined if <span class="parameter">environment</span> is
non-<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> in a use of <a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> of
<a class="function-reference" href="#function-type-macro-function">type-macro-function</a>.<br/></dd></dl><div class="removable-text"><span class="removable-text-tooltip">This passage is <a href="chapter-1.xhtml#section-RemovableText">removable text</a> which is not formally part of the standard.</span><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-deftype">deftype</a>, <a class="function-reference" href="#function-type-expand">type-expand</a>
</dd></dl></div></div><br/></div></section></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>