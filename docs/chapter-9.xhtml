<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="style.css"/><script src="permalink.js"/><script src="navigation.js"/><title>Well-specified Common Lisp â€” Conditions</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">Conditions</span><br/><ol class="local-toc"><li><a href="#section-ConditionSystemConcepts">Condition System Concepts</a><ol> <li><a href="#section-ConditionTypes">Condition Types</a><ol> <li><a href="#section-SeriousConditions">Serious Conditions</a><ol> </ol></li></ol></li><li><a href="#section-CreatingConditions">Creating Conditions</a><ol> <li><a href="#section-ConditionDesignators">Condition Designators</a><ol> </ol></li></ol></li><li><a href="#section-PrintingConditions">Printing Conditions</a><ol> <li><a href="#section-RecommendedStyleinConditionReporting">Recommended Style in Condition Reporting</a><ol> <li><a href="#section-CapitalizationandPunctuationinConditionReports">Capitalization and Punctuation in Condition Reports</a><ol> </ol></li><li><a href="#section-LeadingandTrailingNewlinesinConditionReports">Leading and Trailing Newlines in Condition Reports</a><ol> </ol></li><li><a href="#section-EmbeddedNewlinesinConditionReports">Embedded Newlines in Condition Reports</a><ol> </ol></li><li><a href="#section-NoteaboutTabsinConditionReports">Note about Tabs in Condition Reports</a><ol> </ol></li><li><a href="#section-MentioningContainingFunctioninConditionReports">Mentioning Containing Function in Condition Reports</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-CondSignalHandle">Signaling and Handling Conditions</a><ol> <li><a href="#section-Signaling">Signaling</a><ol> <li><a href="#section-ResignalingaCondition">Resignaling a Condition</a><ol> </ol></li></ol></li><li><a href="#section-Restarts">Restarts</a><ol> <li><a href="#section-InteractiveUseofRestarts">Interactive Use of Restarts</a><ol> </ol></li><li><a href="#section-InterfacesToRestarts">Interfaces to Restarts</a><ol> </ol></li><li><a href="#section-RestartTests">Restart Tests</a><ol> </ol></li><li><a href="#section-AssocRestartWithCond">Associating a Restart with a Condition</a><ol> </ol></li></ol></li></ol></li><li><a href="#section-Assertions">Assertions</a><ol> </ol></li><li><a href="#section-NotesabouttheConditionSystem'sBackground">Notes about the Condition System's Background</a><ol> </ol></li></ol></li><li><a href="#section-Dictionary">Dictionary</a><ol> <li><a href="#type-condition">condition</a></li><li><a href="#type-warning">warning</a></li><li><a href="#type-style-warning">style-warning</a></li><li><a href="#type-serious-condition">serious-condition</a></li><li><a href="#type-error">error</a></li><li><a href="#type-cell-error">cell-error</a></li><li><a href="#function-cell-error-name">cell-error-name</a></li><li><a href="#type-parse-error">parse-error</a></li><li><a href="#type-storage-condition">storage-condition</a></li><li><a href="#macro-assert">assert</a></li><li><a href="#function-error">error</a></li><li><a href="#function-cerror">cerror</a></li><li><a href="#macro-check-type">check-type</a></li><li><a href="#type-simple-error">simple-error</a></li><li><a href="#function-invalid-method-error">invalid-method-error</a></li><li><a href="#function-method-combination-error">method-combination-error</a></li><li><a href="#function-signal">signal</a></li><li><a href="#type-simple-condition">simple-condition</a></li><li><a href="#function-simple-condition-format-control">simple-condition-format-control, simple-condition-format-arguments</a></li><li><a href="#function-warn">warn</a></li><li><a href="#type-simple-warning">simple-warning</a></li><li><a href="#function-invoke-debugger">invoke-debugger</a></li><li><a href="#function-break">break</a></li><li><a href="#variable-*debugger-hook*">*debugger-hook*</a></li><li><a href="#variable-*break-on-signals*">*break-on-signals*</a></li><li><a href="#macro-handler-bind">handler-bind</a></li><li><a href="#macro-handler-case">handler-case</a></li><li><a href="#macro-ignore-errors">ignore-errors</a></li><li><a href="#macro-define-condition">define-condition</a></li><li><a href="#function-make-condition">make-condition</a></li><li><a href="#type-restart">restart</a></li><li><a href="#function-compute-restarts">compute-restarts</a></li><li><a href="#function-find-restart">find-restart</a></li><li><a href="#function-invoke-restart">invoke-restart</a></li><li><a href="#function-invoke-restart-interactively">invoke-restart-interactively</a></li><li><a href="#macro-restart-bind">restart-bind</a></li><li><a href="#macro-restart-case">restart-case</a></li><li><a href="#function-restart-name">restart-name</a></li><li><a href="#macro-with-condition-restarts">with-condition-restarts</a></li><li><a href="#macro-with-simple-restart">with-simple-restart</a></li><li><a href="#restart-abort">abort</a></li><li><a href="#restart-continue">continue</a></li><li><a href="#restart-muffle-warning">muffle-warning</a></li><li><a href="#restart-store-value">store-value</a></li><li><a href="#restart-use-value">use-value</a></li><li><a href="#function-abort">abort, continue, muffle-warning, store-value, use-value</a></li></ol></li></ol></nav><div class="content"><section id="section-ChapNine"><h1 class="section-title">9. Conditions</h1><section id="section-ConditionSystemConcepts"><h2 class="section-title">Condition System Concepts</h2>


Common Lisp constructs are described not only in terms of their
behavior in situations during which they are intended to be used (see
the ``Description'' part of each <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operator</a> specification),
but in all other situations (see the ``Exceptional Situations''
part of each <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operator</a> specification).<br/>A situation is the evaluation of an expression in a specific context.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> that
represents a specific situation that has been detected.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">Conditions</a> are <span class="glossary-reference error">glossary:generalized instances</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-condition">condition</a>.
A hierarchy of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> classes is defined in <span class="explicit-roman">Common Lisp</span>.  
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> has <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> that contain data 
relevant to the situation that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> represents.<br/>An error is a situation in which normal program execution cannot
continue correctly without some form of intervention (either
interactively by the user or under program control).  Not all errors
are detected.  When an error goes undetected, the effects can be
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>, <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>, unspecified, or
undefined. See <span class="section-reference error">section:Definitions.</span>  All detected errors can
be represented by <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>, but not all 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> represent errors.<br/>Signaling is the process by which a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> can alter
the flow of control in a program by raising the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> which can then be <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handled</a>.  The functions
<a class="function-reference" href="#function-error">error</a>, <a class="function-reference" href="#function-cerror">cerror</a>, <a class="function-reference" href="#function-signal">signal</a>, and
<a class="function-reference" href="#function-warn">warn</a> are used to signal <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/>The process of signaling involves the selection and invocation of a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> from a set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a>.  
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one argument (the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>) that is invoked to handle a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.
Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is associated with a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>,
and a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> will be invoked only on a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a>'s associated <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-active">Active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a> dynamically
(see <a class="macro-reference" href="#macro-handler-bind">handler-bind</a> or <a class="macro-reference" href="#macro-handler-case">handler-case</a>).
<a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">Handlers</a> are invoked in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> 
equivalent to that of the signaler,
except that the set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> 
is bound in such a way as to include only those that were <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> 
at the time the <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> being invoked was <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a>.
Signaling a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> has no side-effect on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, 
and there is no dynamic state contained in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is invoked, it can address the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a> 
in one of three ways:<br/><dl><dt><span class="explicit-bold"> Decline</span></dt><dd>It can decline to <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handle</a> the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.  It does this by
simply returning rather than transferring control.
When this happens, any values returned by the handler are
ignored and the next most recently established handler is invoked.
If there is no such handler and the signaling function is <a class="function-reference" href="#function-error">error</a>
or <a class="function-reference" href="#function-cerror">cerror</a>, the debugger is entered in the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> of the signaler. If there is no such
handler and the signaling function is either <a class="function-reference" href="#function-signal">signal</a> or
<a class="function-reference" href="#function-warn">warn</a>, the signaling function simply returns<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd><dt><span class="explicit-bold"> Handle</span></dt><dd>It can <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handle</a> the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> by performing a non-local
transfer of control.  This can be done either primitively by using
<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-go">go</a>, <a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a>, <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-throw">throw</a> or more
abstractly by using a function such as <a class="function-reference" href="#function-abort">abort</a> or
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>.<br/></dd><dt><span class="explicit-bold"> Defer</span></dt><dd>It can put off a decision about whether to <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handle</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-decline">decline</a>,
by any of a number of actions, but most commonly by 
    signaling another condition,
    resignaling the same condition,
 or forcing entry into the debugger.<br/></dd></dl>
 
<section id="section-ConditionTypes"><h3 class="section-title">Condition Types</h3>Figure <span class="explicit-mono">()</span>&ndash; lists the <a class="glossary-reference" href="chapter-26.xhtml#glossary-standardized">standardized</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.
Additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> can be defined by using <a class="macro-reference" href="#macro-define-condition">define-condition</a>.<br/>
<span class="float" id="figure-StandardizedConditionTypes"><table><tbody><tr><td><a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-overflow">floating-point-overflow</a></td><td><a class="type-reference" href="chapter-4.xhtml#type-simple-type-error">simple-type-error</a></td></tr><tr><td><a class="type-reference" href="#type-cell-error">cell-error</a></td><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a></td><td><a class="type-reference" href="#type-simple-warning">simple-warning</a></td></tr><tr><td><a class="type-reference" href="#type-condition">condition</a></td><td><a class="type-reference" href="chapter-11.xhtml#type-package-error">package-error</a></td><td><a class="type-reference" href="#type-storage-condition">storage-condition</a></td></tr><tr><td><a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a></td><td><a class="type-reference" href="#type-parse-error">parse-error</a></td><td><a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-division-by-zero">division-by-zero</a></td><td><a class="type-reference" href="chapter-22.xhtml#type-print-not-readable">print-not-readable</a></td><td><a class="type-reference" href="#type-style-warning">style-warning</a></td></tr><tr><td><a class="type-reference" href="chapter-21.xhtml#type-end-of-file">end-of-file</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-program-error">program-error</a></td><td><a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a></td></tr><tr><td><a class="type-reference" href="#type-error">error</a></td><td><a class="type-reference" href="chapter-23.xhtml#type-reader-error">reader-error</a></td><td><a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a></td></tr><tr><td><a class="type-reference" href="chapter-20.xhtml#type-file-error">file-error</a></td><td><a class="type-reference" href="#type-serious-condition">serious-condition</a></td><td><a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-inexact">floating-point-inexact</a></td><td><a class="type-reference" href="#type-simple-condition">simple-condition</a></td><td><a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a></td></tr><tr><td><a class="type-reference" href="chapter-12.xhtml#type-floating-point-invalid-operation">floating-point-invalid-operation</a></td><td><a class="type-reference" href="#type-simple-error">simple-error</a></td><td><a class="type-reference" href="#type-warning">warning</a></td></tr></tbody></table><div class="caption">Standardized Condition Types</div></span>
All <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> types are <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtypes</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-condition">condition</a>.  That is,<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="parameter">c</span> <span class="syntax-quote">'<a class="type-reference" href="#type-condition">condition</a></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>
</span></code></pre>
if and only if <span class="parameter">c</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">Implementations</a> must define all specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> relationships.
Except where noted, all <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> relationships indicated in 
this document are not mutually exclusive.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> inherits the structure of its <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertypes</a>.
 
The metaclass of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-class">class</a> <a class="type-reference" href="#type-condition">condition</a> is not specified.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-name">Names</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> may be used to specify
<a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertype</a> relationships in <a class="macro-reference" href="#macro-define-condition">define-condition</a>, 
but the consequences are not specified if an attempt is made to use
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> in a <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/>
Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a> that
define <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> and creating <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/><span class="float" id="figure-Operators that define and create conditions."><table><tbody><tr><td><a class="macro-reference" href="#macro-define-condition">define-condition</a></td><td><a class="function-reference" href="#function-make-condition">make-condition</a></td><td/></tr></tbody></table><div class="caption">Operators that define and create conditions.</div></span><br/>Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a> that <a class="glossary-reference" href="chapter-26.xhtml#glossary-read">read</a> 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>.<br/><span class="float" id="figure-Operators that read condition slots."><table><tbody><tr><td><a class="function-reference" href="chapter-12.xhtml#function-arithmetic-error-operands">arithmetic-error-operands</a></td><td><a class="function-reference" href="#function-simple-condition-format-arguments">simple-condition-format-arguments</a></td></tr><tr><td><a class="function-reference" href="chapter-12.xhtml#function-arithmetic-error-operation">arithmetic-error-operation</a></td><td><a class="function-reference" href="#function-simple-condition-format-control">simple-condition-format-control</a></td></tr><tr><td><a class="function-reference" href="#function-cell-error-name">cell-error-name</a></td><td><a class="function-reference" href="chapter-21.xhtml#function-stream-error-stream">stream-error-stream</a></td></tr><tr><td><a class="function-reference" href="chapter-20.xhtml#function-file-error-pathname">file-error-pathname</a></td><td><a class="function-reference" href="chapter-4.xhtml#function-type-error-datum">type-error-datum</a></td></tr><tr><td><a class="function-reference" href="chapter-11.xhtml#function-package-error-package">package-error-package</a></td><td><a class="function-reference" href="chapter-4.xhtml#function-type-error-expected-type">type-error-expected-type</a></td></tr><tr><td><a class="function-reference" href="chapter-22.xhtml#function-print-not-readable-object">print-not-readable-object</a></td><td><a class="function-reference" href="chapter-7.xhtml#function-unbound-slot-instance">unbound-slot-instance</a></td></tr></tbody></table><div class="caption">Operators that read condition slots.</div></span>
<section id="section-SeriousConditions"><h4 class="section-title">Serious Conditions</h4>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-serious condition">serious condition</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> serious
enough to require interactive intervention if not handled.  
<a class="glossary-reference" href="chapter-26.xhtml#glossary-serious condition">Serious conditions</a> are typically signaled with <a class="function-reference" href="#function-error">error</a> or <a class="function-reference" href="#function-cerror">cerror</a>;
non-serious <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> are typically signaled with <a class="function-reference" href="#function-signal">signal</a> or <a class="function-reference" href="#function-warn">warn</a>.

</section></section><section id="section-CreatingConditions"><h3 class="section-title">Creating Conditions</h3>The function <a class="function-reference" href="#function-make-condition">make-condition</a> can be used to construct
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> explicitly.  Functions such as <a class="function-reference" href="#function-error">error</a>,
<a class="function-reference" href="#function-cerror">cerror</a>, <a class="function-reference" href="#function-signal">signal</a>, and <a class="function-reference" href="#function-warn">warn</a> operate on
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> and might create <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>
implicitly.  Macros such as <a class="macro-reference" href="chapter-5.xhtml#macro-ccase">ccase</a>, <a class="macro-reference" href="chapter-5.xhtml#macro-ctypecase">ctypecase</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-ecase">ecase</a>, <a class="macro-reference" href="chapter-5.xhtml#macro-etypecase">etypecase</a>, <a class="macro-reference" href="#macro-check-type">check-type</a>, and
<a class="macro-reference" href="#macro-assert">assert</a> might also implicitly create (and <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signal</a>)
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/><section id="section-ConditionDesignators"><h4 class="section-title">Condition Designators</h4><br/>A number of the functions in the condition system take arguments which
are identified as <span class="newterm">condition designators</span>.
By convention, those arguments are notated as<br/> <span class="parameter">datum</span> <span class="lambda-list-keyword">&amp;rest</span> <span class="parameter">arguments</span><br/>Taken together, the <span class="parameter">datum</span> and the <span class="parameter">arguments</span> are 
``<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of default type <span class="parameter">default-type</span>.''
How the denoted <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is computed depends on the type of the <span class="parameter">datum</span>:<br/><dl><dt>If the <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> 
              naming a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â€¦</mi></math></dt><dd>The denoted <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is the result of<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a> <span class="syntax-function">#'<a class="function-reference" href="#function-make-condition">make-condition</a></span> <span class="parameter">datum</span> <span class="parameter">arguments</span>)</span>
</span></code></pre><br/></dd><dt>If the <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â€¦</mi></math></dt><dd>The denoted <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is the result of <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="parameter">defaulted-type</span> 
                <span class="syntax-keyword-symbol">:format-control</span> <span class="parameter">datum</span>
                <span class="syntax-keyword-symbol">:format-arguments</span> <span class="parameter">arguments</span>)</span>
</span></code></pre>
where the <span class="parameter">defaulted-type</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <span class="parameter">default-type</span>.<br/></dd><dt>If the <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â€¦</mi></math></dt><dd>The denoted <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is the <span class="parameter">datum</span> itself.
In this case, unless otherwise specified by the description of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operator</a> in question, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a> must be <a class="glossary-reference" href="chapter-26.xhtml#glossary-null">null</a>;
that is, the consequences are undefined if any <span class="parameter">arguments</span> were supplied. <br/></dd></dl><br/>Note that the <span class="parameter">default-type</span> gets used only in the case where
the <span class="parameter">datum</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> is supplied.  In the other situations,
the resulting condition is not necessarily of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <span class="parameter">default-type</span>.<br/>Here are some illustrations of how different <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition designator">condition designators</a>
can denote equivalent <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">c</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></span> <span class="syntax-keyword-symbol">:operator</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-/">/</a></span> <span class="syntax-keyword-symbol">:operands</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">7</span> <span class="syntax-number">0</span>)</span></span>)</span>)</span>)</span>
  <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-interned-symbol">c</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></span> <span class="syntax-keyword-symbol">:operator</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-/">/</a></span> <span class="syntax-keyword-symbol">:operands</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">7</span> <span class="syntax-number">0</span>)</span></span>)</span>

<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"Bad luck."</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-error">simple-error</a></span> <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"Bad luck."</span> <span class="syntax-keyword-symbol">:format-arguments</span> <span class="syntax-quote">'<span class="syntax-symbol">()</span></span>)</span>
</span></code></pre>
</section></section><section id="section-PrintingConditions"><h3 class="section-title">Printing Conditions</h3><br/>If the <span class="keyword">:report</span> argument to <a class="macro-reference" href="#macro-define-condition">define-condition</a> is used,
a print function is defined that is called whenever 
the defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is printed while the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>. 
This function is called the <span class="newterm">condition reporter</span>;
the text which it outputs is called a <span class="newterm">report message</span>.<br/>When a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is printed and <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a>
is <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporter</a> for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is invoked.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">Conditions</a> are printed automatically by functions such as
<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a>, <a class="function-reference" href="#function-break">break</a>, and <a class="function-reference" href="#function-warn">warn</a>.<br/>When <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> should print in an
abbreviated fashion according to the style of the implementation
(<span class="explicit-italic"> e.g.</span>,  by <a class="macro-reference" href="chapter-22.xhtml#macro-print-unreadable-object">print-unreadable-object</a>).  It is not required that a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> can be recreated by reading its printed representation.<br/>No <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is provided for directly <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessing</a> 
or invoking <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporters</a>.<br/><section id="section-RecommendedStyleinConditionReporting"><h4 class="section-title">Recommended Style in Condition Reporting</h4>In order to ensure a properly aesthetic result when presenting
<a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report messages</a> to the user, certain stylistic conventions are
recommended.<br/>There are stylistic recommendations for the content of the messages
output by <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporters</a>, but there are no formal requirements 
on those <a class="glossary-reference" href="chapter-26.xhtml#glossary-program">programs</a>.
If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-program">program</a> violates the recommendations for some message, the
display of that message might be less aesthetic than if the guideline
had been observed, but the <a class="glossary-reference" href="chapter-26.xhtml#glossary-program">program</a> is still considered a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming program</a>.<br/>The requirements on a <a class="glossary-reference" href="chapter-26.xhtml#glossary-program">program</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> which
invokes a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporter</a> are somewhat stronger.  A <span class="glossary-reference error">glossary:conforming
program</span> must be permitted to assume that if these style guidelines are
followed, proper aesthetics will be maintained.  Where appropriate, any
specific requirements on such routines are explicitly mentioned below.<br/><section id="section-CapitalizationandPunctuationinConditionReports"><h5 class="section-title">Capitalization and Punctuation in Condition Reports</h5>It is recommended that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report message</a> be a complete sentences, in the
proper case and correctly punctuated.  In English, for example, this
means the first letter should be uppercase, and there should be a
trailing period.<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"This is a message"</span>)</span>  ; Not recommended
 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"this is a message."</span>)</span> ; Not recommended

 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"This is a message."</span>)</span> ; Recommended instead
</span></code></pre><br/></section><section id="section-LeadingandTrailingNewlinesinConditionReports"><h5 class="section-title">Leading and Trailing Newlines in Condition Reports</h5>It is recommended that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report message</a> not begin with any 
introductory text, such as ``<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">Error:</span> 
</span></code></pre>'' or ``<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">Warning:</span> 
</span></code></pre>''
or even just <a class="glossary-reference" href="chapter-26.xhtml#glossary-freshline">freshline</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-newline">newline</a>. 
Such text is added, if appropriate to the context,
by the routine invoking the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporter</a>.<br/>It is recommended that a <a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report message</a> not be followed 
by a trailing <a class="glossary-reference" href="chapter-26.xhtml#glossary-freshline">freshline</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-newline">newline</a>.
Such text is added, if appropriate to the context, 
by the routine invoking the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporter</a>.<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"This is a message.~%"</span>)</span>   ; Not recommended
 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"~&amp;This is a message."</span>)</span>   ; Not recommended
 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"~&amp;This is a message.~%"</span>)</span> ; Not recommended

 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"This is a message."</span>)</span>     ; Recommended instead
</span></code></pre><br/></section><section id="section-EmbeddedNewlinesinConditionReports"><h5 class="section-title">Embedded Newlines in Condition Reports</h5>Especially if it is long, it is permissible and appropriate for 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report message</a> to contain one or more embedded <span class="glossary-reference error">glossary:newlines</span>.<br/>If the calling routine conventionally inserts some additional prefix
(such as ``<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">Error:</span> 
</span></code></pre>'' or ``<pre><code><span class="syntax-root">;; Error: 
</span></code></pre>'') on the first line of
the message, it must also assure that an appropriate prefix will be
added to each subsequent line of the output, so that the left edge of
the message output by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition reporter">condition reporter</a> will still be properly
aligned.<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">test</span> <span class="syntax-symbol">()</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"This is an error message.~%It has two lines."</span>)</span>)</span>

 ;; Implementation A
 <span class="syntax-cons">(<span class="syntax-interned-symbol">test</span>)</span>
 <span class="syntax-interned-symbol">This</span> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">an</span> <a class="function-reference" href="#function-error">error</a> <span class="syntax-interned-symbol">message.</span>
 <span class="syntax-interned-symbol">It</span> <span class="syntax-interned-symbol">has</span> <span class="syntax-interned-symbol">two</span> <span class="syntax-interned-symbol">lines.</span>

 ;; Implementation B
 <span class="syntax-cons">(<span class="syntax-interned-symbol">test</span>)</span>
 ;; Error: This is an error message.
 ;;        It has two lines.

 ;; Implementation C
 <span class="syntax-cons">(<span class="syntax-interned-symbol">test</span>)</span>
 <span class="syntax-interned-symbol">&gt;&gt;</span> <span class="syntax-interned-symbol">Error:</span> <span class="syntax-interned-symbol">This</span> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">an</span> <a class="function-reference" href="#function-error">error</a> <span class="syntax-interned-symbol">message.</span> 
           <span class="syntax-interned-symbol">It</span> <span class="syntax-interned-symbol">has</span> <span class="syntax-interned-symbol">two</span> <span class="syntax-interned-symbol">lines.</span>
</span></code></pre><br/></section><section id="section-NoteaboutTabsinConditionReports"><h5 class="section-title">Note about Tabs in Condition Reports</h5>Because the indentation of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report message</a> might be shifted to the right or
left by an arbitrary amount, special care should be taken with the
semi-standard <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">character</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>âŸ¨</mi></math><span class="explicit-italic"> Tab</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>âŸ©</mi></math> 
(in those <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementations</a> that support such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-character">character</a>).  
Unless the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> specifically defines its behavior 
in this context, its use should be avoided.<br/></section><section id="section-MentioningContainingFunctioninConditionReports"><h5 class="section-title">Mentioning Containing Function in Condition Reports</h5>The name of the containing function should generally not be mentioned in
<a class="glossary-reference" href="chapter-26.xhtml#glossary-report message">report messages</a>.  It is assumed that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-debugger">debugger</a> will make this
information accessible in situations where it is necessary and appropriate.<br/></section></section></section>
<section id="section-CondSignalHandle"><h3 class="section-title">Signaling and Handling Conditions</h3><br/>The operation of the condition system depends on the ordering of
active <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable handler">applicable handlers</a> from most recent to least recent.<br/>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is associated with a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>
that must designate a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-condition">condition</a>.  A <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a>
is said to be <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable">applicable</a> to a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> if that
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> designated by the associated
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-active">Active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a> by using 
<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> (or an abstraction based on <a class="macro-reference" href="#macro-handler-bind">handler-bind</a>, 
such as <a class="macro-reference" href="#macro-handler-case">handler-case</a> or <a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a>).<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-active">Active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> can be <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a> within the
dynamic scope of other <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a>.
At any point during program execution, there is a set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a>.
When a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is signaled, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-most recent">most recent</a> active <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable handler">applicable handler</a>
for that <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is selected from this set.
Given a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, the order of recentness of 
active <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable handler">applicable handlers</a> is defined by the following two rules:<br/><ol><li>Each handler in a set of active handlers <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>H</mrow><mo>1</mo></msub></math> is
more recent than every handler in a set <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>H</mrow><mo>2</mo></msub></math> if the
handlers in <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>H</mrow><mo>2</mo></msub></math> were active when the handlers in <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>H</mrow><mo>1</mo></msub></math> were
established.<br/> </li><li>Let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>1</mo></msub></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>2</mo></msub></math> be two applicable active
handlers established by the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>. Then <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>1</mo></msub></math> is
more recent than <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>2</mo></msub></math> if <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>1</mo></msub></math> was defined to the left of
<math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>h</mrow><mo>2</mo></msub></math> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that established them.<br/></li></ol><br/>Once a handler in a handler binding <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> (such as 
<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> or <a class="macro-reference" href="#macro-handler-case">handler-case</a>) has been selected, all
handlers in that <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> become inactive for 
the remainder of the signaling process.
While the selected <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> runs, no other <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> established
by that <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> is active. That is, if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> declines, 
no other handler established by that <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> will be considered for possible invocation.

Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a> relating to 
the <span class="glossary-reference error">glossary:handling</span> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/><span class="float" id="figure-Operators relating to handling conditions."><table><tbody><tr><td><a class="macro-reference" href="#macro-handler-bind">handler-bind</a></td><td><a class="macro-reference" href="#macro-handler-case">handler-case</a></td><td><a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a></td></tr></tbody></table><div class="caption">Operators relating to handling conditions.</div></span><br/><section id="section-Signaling"><h4 class="section-title">Signaling</h4><br/>When a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is signaled, the most recent
applicable <a class="glossary-reference" href="chapter-26.xhtml#glossary-active">active</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is invoked.  
Sometimes a handler will decline by simply returning
without a transfer of control.
In such cases, the next most recent applicable active handler is
invoked. <br/>If there are no applicable handlers for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> that
has been signaled, or if all applicable handlers decline, the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is unhandled.<br/>The functions <a class="function-reference" href="#function-cerror">cerror</a> and <a class="function-reference" href="#function-error">error</a> invoke the
interactive <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> handler (the debugger) rather than
return if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> being signaled, regardless of
its <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, is unhandled.  In contrast, <a class="function-reference" href="#function-signal">signal</a>
returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> being signaled,
regardless of its <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, is unhandled.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variable</a> <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> can be used to cause the
debugger to be entered before the signaling process begins.<br/>Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> relating to
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signaling</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/><span class="float" id="figure-Defined names relating to signaling conditions."><table><tbody><tr><td><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a></td><td><a class="function-reference" href="#function-error">error</a></td><td><a class="function-reference" href="#function-warn">warn</a></td></tr><tr><td><a class="function-reference" href="#function-cerror">cerror</a></td><td><a class="function-reference" href="#function-signal">signal</a></td><td/></tr></tbody></table><div class="caption">Defined names relating to signaling conditions.</div></span><br/><section id="section-ResignalingaCondition"><h5 class="section-title">Resignaling a Condition</h5>During the <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic extent">dynamic extent</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signaling</a> process for
a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, 
<a class="function-reference" href="#function-signal">signaling</a> the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> again
is permitted if and only if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a> represented in both
cases are the same.<br/>For example, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> might legitimately <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signal</a> 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> that is its <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>
in order to allow outer <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> first opportunity to <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handle</a> 
the condition.  (Such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> is sometimes called a ``default handler.'')
This action is permitted because the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a> which the second
<a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signaling</a> process is addressing is really the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a>.<br/>On the other hand, in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> that implemented asynchronous 
keyboard events by interrupting the user process with a call to <a class="function-reference" href="#function-signal">signal</a>,
it would not be permissible for two distinct asynchronous keyboard events
to <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signal</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-identical">identical</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>
at the same time for different 
situations.
 
</section></section><section id="section-Restarts"><h4 class="section-title">Restarts</h4><br/>The interactive condition handler returns only through
non-local transfer of control to specially defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>
that can be set up either by the system or by user code.  Transferring
control to a restart is called ``invoking'' the restart.  Like
handlers, active <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a>
dynamically, and 
only active <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>
can be invoked.  An active 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> can be invoked by the user from
the debugger or by a program by using <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>.<br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> contains a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> to be <a class="glossary-reference" href="chapter-26.xhtml#glossary-call">called</a> when the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is
invoked, an optional name that can be used to find or invoke the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>, and
an optional set of interaction information for the debugger to use to
enable the user to manually invoke a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>. 

The name of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is
used by <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>. <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">Restarts</a> that can be invoked
only within the debugger do not need names.
 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">Restarts</a> can be established by using <a class="macro-reference" href="#macro-restart-bind">restart-bind</a>, 
<a class="macro-reference" href="#macro-restart-case">restart-case</a>, and <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a>.
A <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> function can itself invoke any other <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>
that was active at the time of establishment of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> 
of which the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is part.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a> by 
    a <a class="macro-reference" href="#macro-restart-bind">restart-bind</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>, 
    a <a class="macro-reference" href="#macro-restart-case">restart-case</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>,
 or a <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>
have <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic extent">dynamic extent</a>
which extends for the duration of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>'s execution.

<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">Restarts</a> of the same name can be ordered from least recent to
most recent according to the following two rules:<br/><ol><li>Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> in a set of active restarts
<math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>1</mo></msub></math> is more recent than every <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> in a
set <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>2</mo></msub></math> if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> 
in <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>2</mo></msub></math> were active when the  <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> in <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>R</mrow><mo>1</mo></msub></math> were
established.<br/> </li><li>Let <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>1</mo></msub></math> and <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>2</mo></msub></math> be two active <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> with
the same name established by the same <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>. Then <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>1</mo></msub></math> is
more recent than <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>2</mo></msub></math> if <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>1</mo></msub></math> was defined to the
left of <math xmlns="http://www.w3.org/1998/Math/MathML"><msub><mrow>r</mrow><mo>2</mo></msub></math> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that established them.<br/></li></ol><br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is invoked but does not transfer control,
the values resulting from the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> function are
returned by the function that invoked the restart, either
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> or <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a>.

<section id="section-InteractiveUseofRestarts"><h5 class="section-title">Interactive Use of Restarts</h5>For interactive handling, two pieces of information are needed
from a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>: a report function and an interactive function.<br/>The report function
is used by a program such as the debugger to
present a description of the action the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> will take.  
The report function is specified and established by the 
<span class="keyword">:report-function</span> keyword to
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a> or the 
<span class="keyword">:report</span> keyword to <a class="macro-reference" href="#macro-restart-case">restart-case</a>. 
 
The interactive function, which can be specified using the 
<span class="keyword">:interactive-function</span> keyword to 
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a> or <span class="keyword">:interactive</span> keyword
to <a class="macro-reference" href="#macro-restart-case">restart-case</a>, is used when the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>
is invoked
interactively, such as from the debugger, to produce a suitable
list of arguments. 
 
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> invokes the most recently <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">established</a>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> whose
name is the same as the first argument to <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>.
If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is invoked interactively by the debugger and  does
not transfer control but rather returns values, the precise
action of the debugger on those values is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a>.<br/> 
</section><section id="section-InterfacesToRestarts"><h5 class="section-title">Interfaces to Restarts</h5><br/>Some <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> have functional interfaces, 
such as <a class="function-reference" href="#function-abort">abort</a>, <a class="function-reference" href="#function-continue">continue</a>, 
<a class="function-reference" href="#function-muffle-warning">muffle-warning</a>, <a class="function-reference" href="#function-store-value">store-value</a>, and 
<a class="function-reference" href="#function-use-value">use-value</a>.
They are ordinary functions that use 
 <a class="function-reference" href="#function-find-restart">find-restart</a> and <a class="function-reference" href="#function-invoke-restart">invoke-restart</a> internally,
that have the same name as the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> they manipulate,
and that are provided simply for notational convenience.<br/>Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-defined name">defined names</a> relating to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>.<br/><span class="float" id="figure-Defined names relating to restarts."><table><tbody><tr><td><a class="function-reference" href="#function-abort">abort</a></td><td><a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a></td><td><a class="function-reference" href="#function-store-value">store-value</a></td></tr><tr><td><a class="function-reference" href="#function-compute-restarts">compute-restarts</a></td><td><a class="function-reference" href="#function-muffle-warning">muffle-warning</a></td><td><a class="function-reference" href="#function-use-value">use-value</a></td></tr><tr><td><a class="function-reference" href="#function-continue">continue</a></td><td><a class="macro-reference" href="#macro-restart-bind">restart-bind</a></td><td><a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a></td></tr><tr><td><a class="function-reference" href="#function-find-restart">find-restart</a></td><td><a class="macro-reference" href="#macro-restart-case">restart-case</a></td><td/></tr><tr><td><a class="function-reference" href="#function-invoke-restart">invoke-restart</a></td><td><a class="function-reference" href="#function-restart-name">restart-name</a></td><td/></tr></tbody></table><div class="caption">Defined names relating to restarts.</div></span><br/></section><section id="section-RestartTests"><h5 class="section-title">Restart Tests</h5>
Each <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> has an associated test, which is a function of one
argument (a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>) which returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>
should be visible in the current <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a>.  This test is created by 
the <span class="keyword">:test-function</span> option to <a class="macro-reference" href="#macro-restart-bind">restart-bind</a> or 
the <span class="keyword">:test</span> option to <a class="macro-reference" href="#macro-restart-case">restart-case</a>.

</section><section id="section-AssocRestartWithCond"><h5 class="section-title">Associating a Restart with a Condition</h5><br/>A <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> can be ``associated with'' a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> explicitly
by <a class="macro-reference" href="#macro-with-condition-restarts">with-condition-restarts</a>, or implicitly by <a class="macro-reference" href="#macro-restart-case">restart-case</a>.
Such an assocation has <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic extent">dynamic extent</a>.<br/>A single <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> may be associated with several <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> 
at the same time.
A single <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> may have several associated <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>
at the same time.<br/>Active restarts associated with a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> can be detected
by <a class="glossary-reference" href="chapter-26.xhtml#glossary-call">calling</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> such as <a class="function-reference" href="#function-find-restart">find-restart</a>, supplying
that <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> as the <span class="parameter">condition</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>.
Active restarts can also be detected without regard to any associated
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> by calling such a function without a <span class="parameter">condition</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>,
or by supplying a value of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> for such an <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>.

</section></section></section>
<section id="section-Assertions"><h3 class="section-title">Assertions</h3>Conditional signaling of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>
based on such things as key match, form evaluation,
and <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> are handled by assertion <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a>.
Figure <span class="explicit-mono">()</span>&ndash; shows <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a> relating to assertions.<br/><span class="float" id="figure-Operators relating to assertions."><table><tbody><tr><td><a class="macro-reference" href="#macro-assert">assert</a></td><td><a class="macro-reference" href="#macro-check-type">check-type</a></td><td><a class="macro-reference" href="chapter-5.xhtml#macro-ecase">ecase</a></td></tr><tr><td><a class="macro-reference" href="chapter-5.xhtml#macro-ccase">ccase</a></td><td><a class="macro-reference" href="chapter-5.xhtml#macro-ctypecase">ctypecase</a></td><td><a class="macro-reference" href="chapter-5.xhtml#macro-etypecase">etypecase</a></td></tr></tbody></table><div class="caption">Operators relating to assertions.</div></span><br/></section><section id="section-NotesabouttheConditionSystem'sBackground"><h3 class="section-title">Notes about the Condition System's Background</h3>For a background reference to the abstract concepts detailed in this
section, see <span class="explicit-italic"> Exceptional Situations in Lisp</span>.  The details of that paper are not binding on
this document, but may be helpful in establishing a conceptual basis for
understanding this material.<br/></section>
</section><br/><section id="section-Dictionary"><h2 class="section-title">Dictionary</h2>
<br/><br/><div class="component" id="type-condition"><div class="header"><span class="left"><span class="name" id="type-condition">condition</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/>

<dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>All types of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>, whether error or
non-error, must inherit from this <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.


No additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> relationships among the specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtypes</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-condition">condition</a>
are allowed, except when explicitly mentioned in the text; however
implementations are permitted to introduce additional <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>
and one of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> can be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of any
number of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtypes</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-condition">condition</a>.<br/>Whether a user-defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> has <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> 
that are accessible by <a class="macro-reference" href="chapter-7.xhtml#macro-with-slots">with-slots</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.
Furthermore, even in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> 
in which user-defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> would have <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a>, 
it is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> whether any <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> defined in this document have such <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> or, 
if they do, what their <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">names</a> might be;
only the reader functions documented by this specification may be relied
upon by portable code.

<a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming code">Conforming code</a> must observe the following restrictions related to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>:<br/><ul><li><a class="macro-reference" href="#macro-define-condition">define-condition</a>, not <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>, must be used
 to define new <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.<br/></li><li><a class="function-reference" href="#function-make-condition">make-condition</a>, not <a class="function-reference" href="chapter-7.xhtml#function-make-instance">make-instance</a>, must be used to
 create <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> explicitly.<br/></li><li>The <span class="keyword">:report</span> option of <a class="macro-reference" href="#macro-define-condition">define-condition</a>, not <a class="macro-reference" href="chapter-7.xhtml#macro-defmethod">defmethod</a>
 for <a class="function-reference" href="chapter-22.xhtml#function-print-object">print-object</a>, must be used to define a condition reporter.<br/></li><li><a class="function-reference" href="chapter-7.xhtml#function-slot-value">slot-value</a>, <a class="function-reference" href="chapter-7.xhtml#function-slot-boundp">slot-boundp</a>, <a class="function-reference" href="chapter-7.xhtml#function-slot-makunbound">slot-makunbound</a>,
 and <a class="macro-reference" href="chapter-7.xhtml#macro-with-slots">with-slots</a> must not be used on <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>.
 Instead, the appropriate accessor functions (defined by <a class="macro-reference" href="#macro-define-condition">define-condition</a>)
 should be used.
</li></ul>
</dd></dl></div><br/>
<br/><div class="component" id="type-warning"><div class="header"><span class="left"><span class="name" id="type-warning">warning</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-warning">warning</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-warning">warning</a> consists of all types of warnings.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-style-warning">style-warning</a><br/></dd></dl></div><br/>
<br/><div class="component" id="type-style-warning"><div class="header"><span class="left"><span class="name" id="type-style-warning">style-warning</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-style-warning">style-warning</a>,
<a class="type-reference" href="#type-warning">warning</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-style-warning">style-warning</a> includes those <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> 
that represent <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situations</a> involving <a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a> 
that is <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming code">conforming code</a> but that is nevertheless 
considered to be faulty or substandard.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-muffle-warning">muffle-warning</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>An <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> might signal such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
if it encounters <a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a>
     that uses deprecated features 
  or that appears unaesthetic or inefficient.<br/>An `unused variable' warning must be of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-style-warning">style-warning</a>.<br/>In general, the question of whether <a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a> is faulty or substandard
is a subjective decision to be made by the facility processing that <a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a>.
The intent is that whenever such a facility wishes to complain about
<a class="glossary-reference" href="chapter-26.xhtml#glossary-code">code</a> on such subjective grounds, it should use this 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> so that any clients who wish to redirect or
muffle superfluous warnings can do so without risking that they will be
redirecting or muffling other, more serious warnings.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-serious-condition"><div class="header"><span class="left"><span class="name" id="type-serious-condition">serious-condition</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>All <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> serious enough to require interactive intervention 
if not handled should inherit from the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-serious-condition">serious-condition</a>.
This condition type is provided
primarily so that it may be included as
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-superclass">superclass</a> of other <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>;
it is not intended to be signaled directly.<br/></dd></dl><dl><dt class="label">Notes</dt><dd>Signaling a <a class="glossary-reference" href="chapter-26.xhtml#glossary-serious condition">serious condition</a> does not itself force entry into
the debugger.   However, except in the unusual situation where the
programmer can assure that no harm will come from failing to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handle</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-serious condition">serious condition</a>, such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is
usually signaled with <a class="function-reference" href="#function-error">error</a> rather than <a class="function-reference" href="#function-signal">signal</a> in
order to assure that the program does not continue without
<span class="glossary-reference error">glossary:handling</span> the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.  (And conversely, it is
conventional to use <a class="function-reference" href="#function-signal">signal</a> rather than <a class="function-reference" href="#function-error">error</a> to signal
conditions which are not <a class="glossary-reference" href="chapter-26.xhtml#glossary-serious condition">serious conditions</a>, since normally the
failure to handle a non-serious condition is not reason enough for the
debugger to be entered.)<br/></dd></dl></div><br/>
<br/><div class="component" id="type-error"><div class="header"><span class="left"><span class="name" id="type-error">error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-error">error</a>,
<a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a> consists of all <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> that represent <a class="glossary-reference" href="chapter-26.xhtml#glossary-error">errors</a>.<br/></dd></dl></div><br/>
<br/><div class="component" id="type-cell-error"><div class="header"><span class="left"><span class="name" id="type-cell-error">cell-error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-cell-error">cell-error</a>,
<a class="type-reference" href="#type-error">error</a>,
<a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-cell-error">cell-error</a> consists of error conditions that occur during 
a location <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">access</a>.   The name of the offending cell is initialized by 
the <span class="keyword">:name</span> initialization argument to <a class="function-reference" href="#function-make-condition">make-condition</a>,
and is <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a> by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-cell-error-name">cell-error-name</a>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-cell-error-name">cell-error-name</a><br/></dd></dl></div><br/>
<br/><div class="component" id="function-cell-error-name"><div class="header"><span class="left"><span class="name" id="function-cell-error-name">cell-error-name</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">cell-error-name</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;<span class="return-values">name</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-cell-error">cell-error</a>.<br/><span class="parameter">name</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the offending cell involved in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-situation">situation</a>
represented by <span class="parameter">condition</span>.<br/>The nature of the result depends on the specific <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> of <span class="parameter">condition</span>.
For example,
    if the <span class="parameter">condition</span> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a>, the result is
     the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-unbound variable">unbound variable</a> which was being <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a>,
    if the <span class="parameter">condition</span> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a>, this is
     the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-undefined function">undefined function</a> which was being <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a>,
and if the <span class="parameter">condition</span> is of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a>, this is
     the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> which was being <a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-cell-error">cell-error</a>,
<a class="type-reference" href="chapter-7.xhtml#type-unbound-slot">unbound-slot</a>,
<a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a>,
<a class="type-reference" href="chapter-5.xhtml#type-undefined-function">undefined-function</a>,
<a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/>
</dd></dl>
</div><br/><br/><br/><div class="component" id="type-parse-error"><div class="header"><span class="left"><span class="name" id="type-parse-error">parse-error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/>
<dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-parse-error">parse-error</a>,
<a class="type-reference" href="#type-error">error</a>,
<a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-parse-error">parse-error</a> consists of 
error conditions that are related to parsing.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="chapter-19.xhtml#function-parse-namestring">parse-namestring</a>,
<a class="type-reference" href="chapter-23.xhtml#type-reader-error">reader-error</a><br/></dd></dl>
</div><br/>
<br/><div class="component" id="type-storage-condition"><div class="header"><span class="left"><span class="name" id="type-storage-condition">storage-condition</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-storage-condition">storage-condition</a>,
<a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-storage-condition">storage-condition</a> consists of serious conditions that 
relate to problems with memory management that are potentially due to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> limits rather than semantic errors
in <a class="glossary-reference" href="chapter-26.xhtml#glossary-conforming program">conforming programs</a>, and that typically warrant entry to the 
debugger if not handled.  Depending on the details of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a>, 
these might include such problems as 
  stack overflow,
  memory region overflow, 
and
  storage exhausted.<br/></dd></dl><dl><dt class="label">Notes</dt><dd>While some <span class="explicit-roman">Common Lisp</span> operations might signal <span class="glossary-reference error">glossary:storage-condition</span>
because they are defined to create <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>,
it is unspecified whether operations that are not defined to create
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> create them anyway 
and so might also signal <a class="type-reference" href="#type-storage-condition">storage-condition</a>.
Likewise, the evaluator itself might create <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a>
and so might signal <a class="type-reference" href="#type-storage-condition">storage-condition</a>.
(The natural assumption might be that such 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> creation is naturally inefficient, 
but even that is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.)
In general, the entire question of how storage allocation is done is
<a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>, 
and so any operation might signal <a class="type-reference" href="#type-storage-condition">storage-condition</a> at any time.
Because such a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is indicative of a limitation 
   of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> 
or of the <span class="glossary-reference error">glossary:image</span>
rather than an error in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-program">program</a>,
<a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-storage-condition">storage-condition</a> are not of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a>.<br/></dd></dl></div><br/>

<br/><div class="component" id="macro-assert"><div class="header"><span class="left"><span class="name" id="macro-assert">assert</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">assert</span>&nbsp;<span class="lambda-list">test-form <span class="explicit-roman">[</span><span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">place</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span>
                                          <span class="explicit-roman">[</span>datum-form
                                                <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">argument-form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">]</span><span class="explicit-roman">]</span></span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">test-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; always evaluated.<br/><span class="parameter">place</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-place">place</a>; evaluated if an error is signaled.<br/><span class="parameter">datum-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that evaluates to a <span class="parameter">datum</span>.
  Evaluated each time an error is to be signaled, 
  or not at all if no error is to be signaled.<br/><span class="parameter">argument-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that evaluates to an <span class="parameter">argument</span>.
  Evaluated each time an error is to be signaled, 
  or not at all if no error is to be signaled.<br/><span class="parameter">datum</span>, <span class="parameter">arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> 
 of default type <a class="type-reference" href="#type-error">error</a>.  (These <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> are the
 result of evaluating <span class="parameter">datum-form</span> and each of the <span class="parameter">argument-forms</span>.)
<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-assert">assert</a> assures that <span class="parameter">test-form</span> evaluates to <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>.
If <span class="parameter">test-form</span> evaluates to <a class="glossary-reference" href="chapter-26.xhtml#glossary-false">false</a>, <a class="macro-reference" href="#macro-assert">assert</a> signals a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-correctable">correctable</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-error">error</a> (denoted by <span class="parameter">datum</span> and <span class="parameter">arguments</span>).
Continuing from this error using the <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> makes it possible
for the user to alter the values of the <span class="parameter">places</span> before
<a class="macro-reference" href="#macro-assert">assert</a> evaluates <span class="parameter">test-form</span> again.
If the value of <span class="parameter">test-form</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>,
<a class="macro-reference" href="#macro-assert">assert</a> returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>The <span class="parameter">places</span> are <span class="glossary-reference error">glossary:generalized references</span> to data
upon which <span class="parameter">test-form</span> depends, 
whose values can be changed by the user in attempting to correct the error.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-subform">Subforms</a> of each <span class="parameter">place</span> are only evaluated if an error is signaled, 
and might be re-evaluated if the error is re-signaled (after continuing without
actually fixing the problem).
The order of evaluation of the <span class="parameter">places</span> is not specified;
see <span class="section-reference error">section:GenRefSubFormEval.</span><a id="index/text-order of evaluation"></a><a id="index/text-evaluation order"></a>If a <span class="parameter">place</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> is supplied that produces more values than there
are store variables, the extra values are ignored. If the supplied 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> produces fewer values than there are store variables, 
the missing values are set to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.
                                                        
</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-number">5</span>)</span></span> <span class="syntax-keyword-symbol">:initial-element</span> <span class="syntax-number">3</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-array">#2A<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span> <span class="syntax-number">3</span>)</span>)</span></span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-make-array">make-array</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-number">5</span>)</span></span> <span class="syntax-keyword-symbol">:initial-element</span> <span class="syntax-number">7</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-array">#2A<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span>)</span> <span class="syntax-cons">(<span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span>)</span> <span class="syntax-cons">(<span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span>)</span>)</span></span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">matrix-multiply</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="chapter-22.xhtml#variable-*print-array*">*print-array*</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="#macro-assert">assert</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-=">=</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-rank">array-rank</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-rank">array-rank</a> <span class="syntax-interned-symbol">b</span>)</span> <span class="syntax-number">2</span>)</span>
                  <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-=">=</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-dimension">array-dimension</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-number">1</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-15.xhtml#function-array-dimension">array-dimension</a> <span class="syntax-interned-symbol">b</span> <span class="syntax-number">0</span>)</span>)</span>)</span>
             <span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span>)</span>
             <span class="syntax-string">"Cannot multiply ~S by ~S."</span> <span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span>)</span>
            <span class="syntax-cons">(<span class="syntax-interned-symbol">really-matrix-multiply</span> <span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">b</span>)</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">MATRIX-MULTIPLY</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">matrix-multiply</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in MATRIX-MULTIPLY: 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Cannot multiply #&lt;ARRAY ...&gt; by #&lt;ARRAY ...&gt;.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: You will be prompted for one or more new values.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Value for A: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hboxx</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Value for B: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(make-array '(5 3) :initial-element 6)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-array">#2A<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span>)</span>
       <span class="syntax-cons">(<span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span>)</span>
       <span class="syntax-cons">(<span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span>)</span>
       <span class="syntax-cons">(<span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span>)</span>
       <span class="syntax-cons">(<span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span> <span class="syntax-number">54</span>)</span>)</span></span>
</span></code></pre><br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">double-safely</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="#macro-assert">assert</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">double-safely</span> <span class="syntax-number">4</span>)</span> 
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">8</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">double-safely</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in DOUBLE-SAFELY: The value of (NUMBERP X) must be non-NIL.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: You will be prompted for one or more new values.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Value for X: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox7</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">14</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>

The set of active <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition handler">condition handlers</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/>
</dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-check-type">check-type</a>, <a class="function-reference" href="#function-error">error</a>, <a class="section-reference" href="chapter-5.xhtml#section-GeneralizedReference">Generalized Reference</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>The debugger need not include the <span class="parameter">test-form</span> in the error message,
and the <span class="parameter">places</span> should not be included in the message, but they
should be made available for the user's perusal.  If the user gives the
``continue'' command, the values of any of the references can be altered.
The details of this depend on the implementation's style of user interface.
</dd></dl></div><br/><br/><br/><div class="component" id="function-error"><div class="header"><span class="left"><span class="name" id="function-error">error</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">error</span>&nbsp;<span class="lambda-list">datum <span class="lambda-list-keyword">&amp;rest</span> arguments</span>&nbsp;â†’&nbsp;|</span><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">datum</span>, <span class="parameter">arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> 
 of default type <a class="type-reference" href="#type-simple-error">simple-error</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-error">error</a> effectively invokes <a class="function-reference" href="#function-signal">signal</a> on the denoted <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/>If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is not handled, <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> <span class="explicit-italic"> condition</span>)</span>
</span></code></pre> is done.  
As a consequence of calling <a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a>, <a class="function-reference" href="#function-error">error</a> 
cannot directly return; the only exit from <a class="function-reference" href="#function-error">error</a>
can come by non-local transfer of control in a handler or by use of
an interactive debugging command.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">factorial</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-cond">cond</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></span>)</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-minusp">minusp</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
          <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"~S is not a valid argument to FACTORIAL."</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>
         <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-zerop">zerop</a> <span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-number">1</span>)</span>
         <span class="syntax-cons">(<a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">factorial</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function--">-</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">1</span>)</span>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">FACTORIAL</span>
<span class="syntax-cons">(<span class="syntax-interned-symbol">factorial</span> <span class="syntax-number">20</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">2432902008176640000</span>
<span class="syntax-cons">(<span class="syntax-interned-symbol">factorial</span> <span class="syntax-number">-1</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: -1 is not a valid argument to FACTORIAL.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; 
</span></code></pre><br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">fred</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">FRED</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-1+">1+</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"~S is not a number."</span> <span class="syntax-interned-symbol">A</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: FRED is not a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:Continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Return to Lisp Toplevel.
 
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">not-a-number</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span> 
                   <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">argument</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">not-a-number-argument</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:argument</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"~S is not a number."</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">not-a-number-argument</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">NOT-A-NUMBER</span>
 
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-1+">1+</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">not-a-number</span></span> <span class="syntax-keyword-symbol">:argument</span> <span class="syntax-interned-symbol">a</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: FRED is not a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:Continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Return to Lisp Toplevel.
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">Handlers</a> for the specified condition, if any, are invoked 
and might have side effects.
Program execution might stop, and the debugger might be entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing handler bindings.<br/><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>

</dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/>
Signals an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> if <span class="parameter">datum</span> and <span class="parameter">arguments</span> are not <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-cerror">cerror</a>, <a class="function-reference" href="#function-signal">signal</a>, <a class="function-reference" href="chapter-22.xhtml#function-format">format</a>, 
<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a>, <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>, 
<a class="macro-reference" href="#macro-handler-bind">handler-bind</a>, <a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>Some implementations may provide debugger
commands for interactively returning from individual stack frames.
However, it should be possible for the programmer to feel confident
about writing code like:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">wargames:no-win-scenario</span> <span class="syntax-symbol">()</span>
  <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"pushing the button would be stupid."</span>)</span>
  <span class="syntax-cons">(<span class="syntax-interned-symbol">push-the-button</span>)</span>)</span>
</span></code></pre>
In this scenario, there should be no chance that
<a class="function-reference" href="#function-error">error</a> will return
and the button will get pushed.<br/>While the meaning of this program is clear and it might be proven `safe'
by a formal theorem prover, such a proof is no guarantee that the
program is safe to execute.  Compilers have been known to have bugs,
computers to have signal glitches, and human beings to manually
intervene in ways that are not always possible to predict.  Those kinds
of errors, while beyond the scope of the condition system to formally
model, are not beyond the scope of things that should seriously be
considered when writing code that could have the kinds of sweeping
effects hinted at by this example.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-cerror"><div class="header"><span class="left"><span class="name" id="function-cerror">cerror</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">cerror</span>&nbsp;<span class="lambda-list">continue-format-control datum <span class="lambda-list-keyword">&amp;rest</span> arguments</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">Continue-format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.

<br/><span class="parameter">datum</span>, <span class="parameter">arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> 
 of default type <a class="type-reference" href="#type-simple-error">simple-error</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-cerror">cerror</a> effectively invokes <a class="function-reference" href="#function-error">error</a> on the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> named by <span class="parameter">datum</span>.  As with any function that
implicitly calls <a class="function-reference" href="#function-error">error</a>, if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is not handled,
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> <span class="explicit-italic"> condition</span>)</span>
</span></code></pre> is executed.  While signaling is going on,
and while in the debugger if it is reached, it is possible to continue
code execution (<span class="explicit-italic"> i.e.</span>,  to return from <a class="function-reference" href="#function-cerror">cerror</a>) using the <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>.

If <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, <span class="parameter">arguments</span> can be supplied,
but are used only in conjunction with the <span class="parameter">continue-format-control</span>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-minusp">minusp</a> <span class="syntax-interned-symbol">n</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function--">-</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Return sqrt(~D) instead."</span> <span class="syntax-string">"Tried to take sqrt(-~D)."</span> <span class="syntax-interned-symbol">n</span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-number">4</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">2.0</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-number">-9</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in REAL-SQRT: Tried to take sqrt(-9).
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return sqrt(9) instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3.0</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">not-a-number</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span>
   <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">argument</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">not-a-number-argument</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:argument</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"~S is not a number."</span> 
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">not-a-number-argument</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">assure-number</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">n</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Enter a number."</span>
                 <span class="syntax-quote">'<span class="syntax-interned-symbol">not-a-number</span></span> <span class="syntax-keyword-symbol">:argument</span> <span class="syntax-interned-symbol">n</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Type a number: "</span>)</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>)</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-number</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in ASSURE-NUMBER: A is not a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Enter a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a number: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox1/2</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">1/2</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">n</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-&gt;">&gt;</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-number">73</span>)</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Enter a number~:[~; a bit larger than ~D~]."</span>
                 <span class="syntax-string">"~*~A is not a large number."</span> 
                 <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">n</span>)</span> <span class="syntax-interned-symbol">n</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Type a large number: "</span>)</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-number">10000</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">10000</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Enter a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a large number: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox88</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">88</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-number">37</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in ASSURE-LARGE-NUMBER: 37 is not a large number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Enter a number a bit larger than 37.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a large number: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox259</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">259</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">not-a-large-number</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span>
   <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">argument</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">not-a-large-number-argument</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:argument</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"~S is not a large number."</span> 
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">not-a-large-number-argument</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">n</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-&gt;">&gt;</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-number">73</span>)</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Enter a number~3*~:[~; a bit larger than ~*~D~]."</span>
                 <span class="syntax-quote">'<span class="syntax-interned-symbol">not-a-large-number</span></span>
                 <span class="syntax-keyword-symbol">:argument</span> <span class="syntax-interned-symbol">n</span> 
                 <span class="syntax-keyword-symbol">:ignore</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-numberp">numberp</a> <span class="syntax-interned-symbol">n</span>)</span>
                 <span class="syntax-keyword-symbol">:ignore</span> <span class="syntax-interned-symbol">n</span>
                 <span class="syntax-keyword-symbol">:allow-other-keys</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Type a large number: "</span>)</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>)</span>
 

 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Enter a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a large number: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox88</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">88</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">assure-large-number</span> <span class="syntax-number">37</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Correctable error in ASSURE-LARGE-NUMBER: A is not a large number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Restart options:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Enter a number a bit larger than 37.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a large number: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox259</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">259</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>.

Existing handler bindings.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/>

</dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-error">error</a>, <a class="function-reference" href="chapter-22.xhtml#function-format">format</a>, <a class="macro-reference" href="#macro-handler-bind">handler-bind</a>,
<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>, <a class="type-reference" href="chapter-4.xhtml#type-simple-type-error">simple-type-error</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>If <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> rather than a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, the <a class="function-reference" href="chapter-22.xhtml#function-format">format</a> directive <span class="explicit-mono">*</span> may be especially
useful in the <span class="parameter">continue-format-control</span> in order to ignore the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-keyword">keywords</a> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-initialization argument list">initialization argument list</a>.  For example:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"enter a new value to replace ~*~s"</span> 
        <span class="syntax-quote">'<span class="syntax-interned-symbol">not-a-number</span></span>
        <span class="syntax-keyword-symbol">:argument</span> <span class="syntax-interned-symbol">a</span>)</span>
</span></code></pre><br/></dd></dl></div><br/><br/><br/><div class="component" id="macro-check-type"><div class="header"><span class="left"><span class="name" id="macro-check-type">check-type</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">check-type</span>&nbsp;<span class="lambda-list">place typespec <span class="explicit-roman">[</span><span class="parameter">string</span><span class="explicit-roman">]</span></span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">place</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-place">place</a>.<br/><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">string</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>; evaluated. 
</dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-check-type">check-type</a> signals a <a class="glossary-reference" href="chapter-26.xhtml#glossary-correctable">correctable</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-error">error</a>
of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> if the contents of <span class="parameter">place</span> are not 
of the type <span class="parameter">typespec</span>.<br/><a class="macro-reference" href="#macro-check-type">check-type</a> can return only if the <a class="symbol-reference" href="#symbol-store-value">store-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is invoked,
either explicitly from a handler 
    or implicitly as one of the options offered by the debugger.
If the <a class="symbol-reference" href="#symbol-store-value">store-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is invoked,
<a class="macro-reference" href="#macro-check-type">check-type</a> stores the new value 
that is the argument to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> invocation 
(or that is prompted for interactively by the debugger)
in <span class="parameter">place</span> and starts over, 
checking the type of the new value
and signaling another error if it is still not of the desired <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.<br/>
The first time <span class="parameter">place</span> is <span class="glossary-reference error">glossary:evaluated</span>, 
it is <span class="glossary-reference error">glossary:evaluated</span> by normal evaluation rules.
It is later <span class="glossary-reference error">glossary:evaluated</span> as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-place">place</a> 
if the type check fails and the <a class="symbol-reference" href="#symbol-store-value">store-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is used;
see <span class="section-reference error">section:GenRefSubFormEval.</span><br/>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> should be an English description of the type, 
starting with an indefinite article (``a'' or ``an'').
If <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> is not supplied,
it is computed automatically from <span class="parameter">typespec</span>.
The automatically generated message mentions
      <span class="parameter">place</span>,
      its contents,
  and the desired type.
An implementation may choose to generate 
a somewhat differently worded error message 
if it recognizes that <span class="parameter">place</span> is of a particular form, 
such as one of the arguments to the function that called <a class="macro-reference" href="#macro-check-type">check-type</a>.
<a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> is allowed because some applications of <a class="macro-reference" href="#macro-check-type">check-type</a> 
may require a more specific description of what is wanted
than can be generated automatically from <span class="parameter">typespec</span>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">aardvarks</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">sam</span> <span class="syntax-interned-symbol">harry</span> <span class="syntax-interned-symbol">fred</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">SAM</span> <span class="syntax-interned-symbol">HARRY</span> <span class="syntax-interned-symbol">FRED</span>)</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">aardvarks</span> <span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-array">array</a> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-cons">(<span class="syntax-number">3</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value of AARDVARKS, (SAM HARRY FRED),
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>        is not a 3-long array.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:CONTINUE 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Use Value: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox#(SAM FRED HARRY)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-interned-symbol">aardvarks</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-verbatim">#&lt;ARRAY-T-3 13571&gt;</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-map">map</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-14.xhtml#function-list">list</a></span> <span class="syntax-function">#'<a class="function-reference" href="chapter-5.xhtml#function-identity">identity</a></span> <span class="syntax-interned-symbol">aardvarks</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">SAM</span> <span class="syntax-interned-symbol">FRED</span> <span class="syntax-interned-symbol">HARRY</span>)</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">aardvark-count</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">foo</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">FOO</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">aardvark-count</span> <span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">0</span> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a>)</span> <span class="syntax-string">"A positive integer"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value of AARDVARK-COUNT, FOO, is not a positive integer.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:CONTINUE 2</span></math>
</span></code></pre><br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">define-adder</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">name</span> <span class="syntax-interned-symbol">amount</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">name</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-not">not</a> <a class="function-reference" href="chapter-14.xhtml#function-null">null</a>)</span>)</span> <span class="syntax-string">"a name for an adder function"</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">amount</span> <a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a>)</span>
   <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-unquote">,<span class="syntax-interned-symbol">name</span></span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-unquote">,<span class="syntax-interned-symbol">amount</span></span>)</span>)</span></span>)</span>
  
 <span class="syntax-cons">(<a class="function-reference" href="chapter-3.xhtml#function-macroexpand">macroexpand</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">define-adder</span> <span class="syntax-interned-symbol">add3</span> <span class="syntax-number">3</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add3</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="function-reference" href="chapter-3.xhtml#function-macroexpand">macroexpand</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">define-adder</span> <span class="syntax-number">7</span> <span class="syntax-number">7</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value of NAME, 7, is not a name for an adder function.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:Continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Specify a value to use instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a form to be evaluated and used instead: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox'ADD7</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add7</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">7</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="function-reference" href="chapter-3.xhtml#function-macroexpand">macroexpand</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">define-adder</span> <span class="syntax-interned-symbol">add5</span> <span class="syntax-interned-symbol">something</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value of AMOUNT, SOMETHING, is not an integer.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:Continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a form to be evaluated and used instead: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox5</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add5</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">5</span>)</span>)</span>
 
</span></code></pre><br/>Control is transferred to a handler.<br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>The debugger might be entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>

The implementation.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/>
</dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="parameter">place</span> <span class="parameter">typespec</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="macro-reference" href="#macro-assert">assert</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="parameter">place</span> <span class="syntax-quote">'<span class="parameter">typespec</span></span>)</span> <span class="syntax-cons">(<span class="parameter">place</span>)</span>
           <span class="syntax-quote">'<a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a></span> <span class="syntax-keyword-symbol">:datum</span> <span class="parameter">place</span> <span class="syntax-keyword-symbol">:expected-type</span> <span class="syntax-quote">'<span class="parameter">typespec</span></span>)</span>
</span></code></pre><br/></dd></dl></div><br/><br/><br/><div class="component" id="type-simple-error"><div class="header"><span class="left"><span class="name" id="type-simple-error">simple-error</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-simple-error">simple-error</a>,
<a class="type-reference" href="#type-simple-condition">simple-condition</a>,
<a class="type-reference" href="#type-error">error</a>,
<a class="type-reference" href="#type-serious-condition">serious-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a>
</dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-simple-error">simple-error</a> consists of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> that
are signaled by <a class="function-reference" href="#function-error">error</a> or <a class="function-reference" href="#function-cerror">cerror</a> when a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>is supplied as the function's first argument.

</dd></dl></div><br/><br/><br/><div class="component" id="function-invalid-method-error"><div class="header"><span class="left"><span class="name" id="function-invalid-method-error">invalid-method-error</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">invalid-method-error</span>&nbsp;<span class="lambda-list">method format-control <span class="lambda-list-keyword">&amp;rest</span> args</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">method</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a>.<br/><span class="parameter">format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.
 
<span class="parameter">args</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a> for the <span class="parameter">format-control</span>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-invalid-method-error">invalid-method-error</a> is used to signal an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a>
when there is an applicable <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-qualifier">qualifiers</a> are not valid for
the method combination type.  The error message is constructed by
using the <span class="parameter">format-control</span> suitable for <a class="function-reference" href="chapter-22.xhtml#function-format">format</a>
and any <span class="parameter">args</span> to it.  Because an
implementation may need to add additional contextual information to
the error message, <a class="function-reference" href="#function-invalid-method-error">invalid-method-error</a> should be called only
within the dynamic extent of a method combination function.<br/>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-invalid-method-error">invalid-method-error</a> is called automatically when a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> fails to satisfy every <a class="glossary-reference" href="chapter-26.xhtml#glossary-qualifier">qualifier</a> pattern and predicate in a
<a class="macro-reference" href="chapter-7.xhtml#macro-define-method-combination">define-method-combination</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.  A method combination function
that imposes additional restrictions should call 
<a class="function-reference" href="#function-invalid-method-error">invalid-method-error</a> explicitly if it encounters a <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">method</a> 
it cannot accept.<br/>Whether <a class="function-reference" href="#function-invalid-method-error">invalid-method-error</a> returns to its caller or exits via
<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-throw">throw</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>The debugger might be entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a><br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="chapter-7.xhtml#macro-define-method-combination">define-method-combination</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-method-combination-error"><div class="header"><span class="left"><span class="name" id="function-method-combination-error">method-combination-error</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">method-combination-error</span>&nbsp;<span class="lambda-list">format-control <span class="lambda-list-keyword">&amp;rest</span> args</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.
 
<span class="parameter">args</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a> for <span class="parameter">format-control</span>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-method-combination-error">method-combination-error</a> is used to signal an error
in method combination.  <br/>The error message is constructed by using a <span class="parameter">format-control</span> suitable
for <a class="function-reference" href="chapter-22.xhtml#function-format">format</a> and any <span class="parameter">args</span> to it.  Because an implementation may
need to add additional contextual information to the error message,
<a class="function-reference" href="#function-method-combination-error">method-combination-error</a> should be called only within the
dynamic extent of a method combination function.<br/>Whether <a class="function-reference" href="#function-method-combination-error">method-combination-error</a> returns to its caller or exits
via <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-throw">throw</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>The debugger might be entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a><br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="chapter-7.xhtml#macro-define-method-combination">define-method-combination</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-signal"><div class="header"><span class="left"><span class="name" id="function-signal">signal</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">signal</span>&nbsp;<span class="lambda-list">datum <span class="lambda-list-keyword">&amp;rest</span> arguments</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">datum</span>, <span class="parameter">arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> 
 of default type <a class="type-reference" href="#type-simple-condition">simple-condition</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">Signals</a> the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> denoted by the given <span class="parameter">datum</span> and <span class="parameter">arguments</span>.
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is not handled, <a class="function-reference" href="#function-signal">signal</a> returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">handle-division-conditions</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"Considering condition for division condition handling~%"</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <a class="type-reference" href="#type-condition">condition</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></span>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eq">eq</a> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-/">/</a></span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-arithmetic-error-operation">arithmetic-error-operation</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">HANDLE-DIVISION-CONDITIONS</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">handle-other-arithmetic-errors</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"Considering condition for arithmetic condition handling~%"</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <a class="type-reference" href="#type-condition">condition</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-abort">abort</a>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">HANDLE-OTHER-ARITHMETIC-ERRORS</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">a-condition-with-no-handler</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span> <span class="syntax-symbol">()</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">A-CONDITION-WITH-NO-HANDLER</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a-condition-with-no-handler</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">handle-division-conditions</span></span>)</span>
                  <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">handle-other-arithmetic-errors</span></span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a-condition-with-no-handler</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Considering condition for division condition handling
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Considering condition for arithmetic condition handling
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">handle-division-conditions</span></span>)</span>
                  <span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">handle-other-arithmetic-errors</span></span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a></span> <span class="syntax-keyword-symbol">:operation</span> <span class="syntax-quote">'<a class="function-reference" href="chapter-12.xhtml#function-*">*</a></span> <span class="syntax-keyword-symbol">:operands</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">1.2</span> <span class="syntax-interned-symbol">b</span>)</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Considering condition for division condition handling
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Considering condition for arithmetic condition handling
<span class="syntax-interned-symbol">Back</span> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">Lisp</span> <span class="syntax-interned-symbol">Toplevel</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>The debugger might be entered due to <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>.<br/>Handlers for the condition being signaled might transfer control.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing handler bindings.<br/><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>

</dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>,
<a class="function-reference" href="#function-error">error</a>,
<a class="type-reference" href="#type-simple-condition">simple-condition</a>,
<a class="section-reference" href="#section-CondSignalHandle">Signaling and Handling Conditions</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>If <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="parameter">datum</span> <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>)</span>
</span></code></pre> <a class="glossary-reference" href="chapter-26.xhtml#glossary-yield">yields</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>,
the debugger is entered prior to beginning the signaling process.  
The <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> can be used to continue with the signaling process.
This is also true for all other <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro">macros</a> that
should, might, or must <a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signal</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="type-simple-condition"><div class="header"><span class="left"><span class="name" id="type-simple-condition">simple-condition</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-simple-condition">simple-condition</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-simple-condition">simple-condition</a> represents <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> that are
signaled by <a class="function-reference" href="#function-signal">signal</a> whenever a <span class="parameter">format-control</span> is
supplied as the function's first argument.
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a> are initialized with 
the initialization arguments named <span class="keyword">:format-control</span> 
and <span class="keyword">:format-arguments</span> to <a class="function-reference" href="#function-make-condition">make-condition</a>, and are
<a class="glossary-reference" href="chapter-26.xhtml#glossary-access">accessed</a> by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a>
<a class="function-reference" href="#function-simple-condition-format-control">simple-condition-format-control</a>and <a class="function-reference" href="#function-simple-condition-format-arguments">simple-condition-format-arguments</a>.
If format arguments are not supplied to <a class="function-reference" href="#function-make-condition">make-condition</a>,
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is used as a default.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-simple-condition-format-control">simple-condition-format-control</a>,
<a class="function-reference" href="#function-simple-condition-format-arguments">simple-condition-format-arguments</a><br/></dd></dl></div><br/>
<br/><div class="component" id="function-simple-condition-format-control"><div class="header"><span class="left"><span class="name" id="function-simple-condition-format-control">simple-condition-format-control</span>, <span class="name" id="function-simple-condition-format-arguments">simple-condition-format-arguments</span></span><span class="right"><span class="ftype">Function</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">simple-condition-format-control</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;<span class="return-values">format-control</span></span><br/>
<span class="function-definition"><span class="name">simple-condition-format-arguments</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;<span class="return-values">format-arguments</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-simple-condition">simple-condition</a>.

<span class="parameter">format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.<br/><span class="parameter">format-arguments</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-simple-condition-format-control">simple-condition-format-control</a> returns the <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a> needed to 
process the <span class="parameter">condition</span>'s <a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a>.<br/><a class="function-reference" href="#function-simple-condition-format-arguments">simple-condition-format-arguments</a> returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a> 
needed to process the <span class="parameter">condition</span>'s <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">foo</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-condition">simple-condition</a></span>
                          <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"Hi ~S"</span>
                          <span class="syntax-keyword-symbol">:format-arguments</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">ho</span>)</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-verbatim">#&lt;SIMPLE-CONDITION 26223553&gt;</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a> <span class="syntax-function">#'<a class="function-reference" href="chapter-22.xhtml#function-format">format</a></span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-cons">(<a class="function-reference" href="#function-simple-condition-format-control">simple-condition-format-control</a> <span class="syntax-interned-symbol">foo</span>)</span>
                     <span class="syntax-cons">(<a class="function-reference" href="#function-simple-condition-format-arguments">simple-condition-format-arguments</a> <span class="syntax-interned-symbol">foo</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"Hi HO"</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="type-reference" href="#type-simple-condition">simple-condition</a>,
<a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/>
</dd></dl>
</div><br/><br/><br/><div class="component" id="function-warn"><div class="header"><span class="left"><span class="name" id="function-warn">warn</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">warn</span>&nbsp;<span class="lambda-list">datum <span class="lambda-list-keyword">&amp;rest</span> arguments</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">datum</span>, <span class="parameter">arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designators</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> 
 of default type <a class="type-reference" href="#type-simple-warning">simple-warning</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">Signals</a> a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-warning">warning</a>.
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is not <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handled</a>,
reports the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> to <a class="glossary-reference" href="chapter-26.xhtml#glossary-error output">error output</a>.<br/>The precise mechanism for warning is as follows:<br/>
<dl><dt><span class="explicit-bold"> The warning condition is signaled</span></dt><dd>While the <a class="type-reference" href="#type-warning">warning</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is being signaled,
the <a class="symbol-reference" href="#symbol-muffle-warning">muffle-warning</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is established for use by a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a>.
If invoked, this <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> bypasses further action by <a class="function-reference" href="#function-warn">warn</a>,
which in turn causes <a class="function-reference" href="#function-warn">warn</a> to immediately return <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd><dt><span class="explicit-bold"> If no handler for the warning condition is found</span></dt><dd>If no handlers for the warning condition are found,
or if all such handlers decline,
then the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is reported to <a class="glossary-reference" href="chapter-26.xhtml#glossary-error output">error output</a>
by <a class="function-reference" href="#function-warn">warn</a> in an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> format.

</dd><dt><span class="explicit-bold"> <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is returned</span></dt><dd>The value returned by <a class="function-reference" href="#function-warn">warn</a> if it returns is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.
</dd></dl><br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root">  <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">foo</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">result</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">2</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="syntax-interned-symbol">result</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-fixnum">fixnum</a></span>)</span>)</span>
          <span class="syntax-cons">(<a class="function-reference" href="#function-warn">warn</a> <span class="syntax-string">"You're using very big numbers."</span>)</span>)</span>
      <span class="syntax-interned-symbol">result</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">FOO</span>
 
  <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <span class="syntax-number">3</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">6</span>
 
  <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <a class="constant-reference" href="chapter-12.xhtml#constant-most-positive-fixnum">most-positive-fixnum</a>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Warning: You're using very big numbers.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">4294967294</span>
 
  <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>
 
  <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <a class="constant-reference" href="chapter-12.xhtml#constant-most-positive-fixnum">most-positive-fixnum</a>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Break: Caveat emptor.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return from Break.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Abort to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; :continue 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Warning: You're using very big numbers.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">4294967294</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>A warning is issued.  The debugger might be entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing handler bindings.<br/><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>,
<a class="variable-reference" href="chapter-21.xhtml#variable-*error-output*">*error-output*</a>.         <br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">datum</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
and if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is not of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-warning">warning</a>,
or <span class="parameter">arguments</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/>If <span class="parameter">datum</span> is a condition type, 
the result of <span class="explicit-mono">(apply #'make-condition datum arguments)</span> 
must be of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-warning">warning</a> or an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>,
<a class="function-reference" href="#function-muffle-warning">muffle-warning</a>,
<a class="function-reference" href="#function-signal">signal</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/><br/><div class="component" id="type-simple-warning"><div class="header"><span class="left"><span class="name" id="type-simple-warning">simple-warning</span></span><span class="right"><span class="ftype">Condition Type</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-simple-warning">simple-warning</a>,
<a class="type-reference" href="#type-simple-condition">simple-condition</a>,
<a class="type-reference" href="#type-warning">warning</a>,
<a class="type-reference" href="#type-condition">condition</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a>
</dd></dl><dl><dt class="label">Description</dt><dd>The <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-simple-warning">simple-warning</a> represents <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> that 
are signaled by <a class="function-reference" href="#function-warn">warn</a> whenever a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a> 
is supplied as the function's first argument.<br/></dd></dl></div><br/>

<br/><div class="component" id="function-invoke-debugger"><div class="header"><span class="left"><span class="name" id="function-invoke-debugger">invoke-debugger</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">invoke-debugger</span>&nbsp;<span class="lambda-list">condition</span>&nbsp;â†’&nbsp;|</span><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> attempts to enter the debugger with <span class="parameter">condition</span>.<br/>If <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> is not <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, it should be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> 
(or the name of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>) to be called prior to entry to 
the standard debugger.  The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is called with
<a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> bound to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> 
must accept two arguments: the <span class="parameter">condition</span> 
and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> prior to binding it to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>. 
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> returns normally,
the standard debugger is entered.<br/>The standard debugger never directly returns.  Return can occur only by a
non-local transfer of control, such as the use of a restart function.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <span class="syntax-line-comment syntax-comment">;Normally, this would suppress debugger entry
</span>   <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a></span>)</span>)</span> <span class="syntax-line-comment syntax-comment">;But this forces debugger entry
</span>     <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"Foo."</span>)</span>)</span>)</span>
<span class="syntax-interned-symbol">Debug:</span> <span class="syntax-interned-symbol">Foo.</span>
<span class="syntax-interned-symbol">To</span> <a class="function-reference" href="#function-continue">continue</a><span class="syntax-verbatim">,</span> <a class="symbol-reference" href="chapter-25.xhtml#symbol-type">type</a> <span class="syntax-keyword-symbol">:CONTINUE</span> <span class="syntax-interned-symbol">followed</span> <span class="syntax-interned-symbol">by</span> <span class="syntax-interned-symbol">an</span> <span class="syntax-interned-symbol">option</span> <span class="syntax-interned-symbol">number:</span>
 <span class="syntax-interned-symbol">1:</span> <a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">Lisp</span> <span class="syntax-interned-symbol">Toplevel.</span>
<span class="syntax-interned-symbol">Debug&gt;</span>
</span></code></pre><br/>
</dd></dl><dl><dt class="label">Side Effects</dt><dd><a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> is bound to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>,
program execution is discontinued,
and the debugger is entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="chapter-21.xhtml#variable-*debug-io*">*debug-io*</a> and <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-error">error</a>, <a class="function-reference" href="#function-break">break</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-break"><div class="header"><span class="left"><span class="name" id="function-break">break</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">break</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;optional</span> format-control <span class="lambda-list-keyword">&amp;rest</span> format-arguments</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.
 The default is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/><span class="parameter">format-arguments</span>&mdash;<a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format arguments</a> for the <span class="parameter">format-control</span>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-break">break</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-format">formats</a> <span class="parameter">format-control</span> and <span class="parameter">format-arguments</span>
and then goes directly into the debugger without allowing any possibility of
interception by programmed error-handling facilities.<br/>If the <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is used while in the debugger,
<a class="function-reference" href="#function-break">break</a> immediately returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> without taking any unusual recovery action.<br/><a class="function-reference" href="#function-break">break</a> binds <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> 
before attempting to enter the debugger.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="function-reference" href="#function-break">break</a> <span class="syntax-string">"You got here with arguments: ~:S."</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-interned-symbol">FOO</span> <span class="syntax-number">37</span> <span class="syntax-interned-symbol">A</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> BREAK: You got here with these arguments: FOO, 37, A.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return from BREAK.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; :CONTINUE 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Return from BREAK.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>The debugger is entered.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="chapter-21.xhtml#variable-*debug-io*">*debug-io*</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-error">error</a>, <a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a>.<br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="function-reference" href="#function-break">break</a> is used as a way of inserting temporary debugging
``breakpoints'' in a program, not as a way of signaling errors.  
For this reason, <a class="function-reference" href="#function-break">break</a> does not take the <span class="parameter">continue-format-control</span>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a> that <a class="function-reference" href="#function-cerror">cerror</a> takes.
This and the lack of any possibility of interception by
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <span class="glossary-reference error">glossary:handling</span> are the only program-visible 
differences between <a class="function-reference" href="#function-break">break</a> and <a class="function-reference" href="#function-cerror">cerror</a>.<br/>The user interface aspects of <a class="function-reference" href="#function-break">break</a> and <a class="function-reference" href="#function-cerror">cerror</a> are
permitted to vary more widely, in order to accomodate the interface
needs of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a>. For example, it is permissible for a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-lisp read-eval-print loop">Lisp read-eval-print loop</a> to be entered by <a class="function-reference" href="#function-break">break</a> rather
than the conventional debugger.<br/><a class="function-reference" href="#function-break">break</a> could be defined by:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <a class="function-reference" href="#function-break">break</a> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">format-control</span> <span class="syntax-string">"Break"</span>)</span> <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">format-arguments</span>)</span>
  <span class="syntax-cons">(<a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <span class="syntax-cons">(<a class="function-reference" href="#function-continue">continue</a> <span class="syntax-string">"Return from BREAK."</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a>
          <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-condition">simple-condition</a></span>
                          <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-interned-symbol">format-control</span>
                          <span class="syntax-keyword-symbol">:format-arguments</span> <span class="syntax-interned-symbol">format-arguments</span>)</span>)</span>)</span>)</span>
  <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>
</span></code></pre>
</dd></dl></div><br/><br/><br/><div class="component" id="variable-*debugger-hook*"><div class="header"><span class="left"><span class="name" id="variable-*debugger-hook*">*debugger-hook*</span></span><span class="right"><span class="ftype">Variable</span></span></div><br/><dl><dt class="label">Value Type</dt><dd>a <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of two <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a>
  (a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> at the time 
   the debugger was entered),
or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Initial Value</dt><dd><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>When the <a class="glossary-reference" href="chapter-26.xhtml#glossary-value">value</a> of <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>, it is called prior to
normal entry into the debugger, either due to a call to <a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> 
or due to automatic entry into the debugger from a call to <a class="function-reference" href="#function-error">error</a> 
or <a class="function-reference" href="#function-cerror">cerror</a> with a condition that is not handled.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> may either handle the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
(transfer control) or return normally (allowing the standard debugger to run).
To minimize recursive errors while debugging,
<a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> is bound to <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> by <a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a> 
prior to calling the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">one-of</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">choices</span> <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">prompt</span> <span class="syntax-string">"Choice"</span>)</span>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-length">length</a> <span class="syntax-interned-symbol">choices</span>)</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">i</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-do">do</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">c</span> <span class="syntax-interned-symbol">choices</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-cdr">cdr</a> <span class="syntax-interned-symbol">c</span>)</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span>)</span>)</span>)</span>
         <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-null">null</a> <span class="syntax-interned-symbol">c</span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;[~D] ~A~%"</span> <span class="syntax-interned-symbol">i</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-car">car</a> <span class="syntax-interned-symbol">c</span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-do">do</a> <span class="syntax-symbol">()</span> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a> <span class="syntax-number">1</span> <span class="syntax-unquote">,<span class="syntax-interned-symbol">n</span></span>)</span></span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~A: "</span> <span class="syntax-interned-symbol">prompt</span>)</span>
       <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-nth">nth</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function--">-</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span>)</span> <span class="syntax-interned-symbol">choices</span>)</span>)</span>)</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">my-debugger</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <span class="syntax-interned-symbol">me-or-my-encapsulation</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Fooey: ~A"</span> <a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="#type-restart">restart</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">one-of</span> <span class="syntax-cons">(<a class="function-reference" href="#function-compute-restarts">compute-restarts</a>)</span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-not">not</a> <a class="type-reference" href="#type-restart">restart</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"My debugger got an error."</span>)</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> <span class="syntax-interned-symbol">me-or-my-encapsulation</span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> <a class="type-reference" href="#type-restart">restart</a>)</span>)</span>)</span>)</span>
 
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">my-debugger</span></span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-number">3</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Fooey: The argument to +, A, is not a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  [1] Supply a replacement for A.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  [2] Return to Cloe Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Choice: 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  Form to evaluate and use: (+ 5 'b)
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  Fooey: The argument to +, B, is not a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  [1] Supply a replacement for B.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  [2] Supply a replacement for A.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  [3] Return to Cloe Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Choice: 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  Form to evaluate and use: 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">9</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="function-reference" href="#function-invoke-debugger">invoke-debugger</a><br/></dd></dl><dl><dt class="label">See Also</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Notes</dt><dd>When evaluating code typed in by the user interactively, it is sometimes
useful to have the hook function bind <a class="variable-reference" href="#variable-*debugger-hook*">*debugger-hook*</a> to the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> that was its second argument so that recursive errors
can be handled using the same interactive facility.<br/></dd></dl></div><br/><br/><br/><div class="component" id="variable-*break-on-signals*"><div class="header"><span class="left"><span class="name" id="variable-*break-on-signals*">*break-on-signals*</span></span><span class="right"><span class="ftype">Variable</span></span></div><br/><dl><dt class="label">Value Type</dt><dd>a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/></dd></dl><dl><dt class="label">Initial Value</dt><dd><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>When <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="explicit-italic"> condition</span> <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>)</span>
</span></code></pre> returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>,
calls to <a class="function-reference" href="#function-signal">signal</a>, and to other <a class="glossary-reference" href="chapter-26.xhtml#glossary-operator">operators</a> such as <a class="function-reference" href="#function-error">error</a>
that implicitly call <a class="function-reference" href="#function-signal">signal</a>, enter the debugger prior to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signaling</a> the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/>The <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> can be used to continue with the normal
<a class="glossary-reference" href="chapter-26.xhtml#glossary-signal">signaling</a> process when a break occurs process due to
<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-error">simple-error</a></span> <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"Fooey!"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a><span class="syntax-verbatim">,</span> <span class="syntax-verbatim">#&lt;SIMPLE-ERROR 32207172&gt;</span>

 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> <span class="syntax-quote">'<a class="function-reference" href="#function-error">error</a></span>)</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-error">simple-error</a></span> <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"Fooey!"</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Break: Fooey!
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> BREAK entered because of *BREAK-ON-SIGNALS*.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Continue to signal.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:CONTINUE 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Continue to signal.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a><span class="syntax-verbatim">,</span> <span class="syntax-verbatim">#&lt;SIMPLE-ERROR 32212257&gt;</span>

 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> <span class="syntax-quote">'<a class="function-reference" href="#function-error">error</a></span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-error">simple-error</a></span> <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"Fooey!"</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Break: Fooey!
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> BREAK entered because of *BREAK-ON-SIGNALS*.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Continue to signal.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:CONTINUE 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Continue to signal.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: Fooey!
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Top level.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:CONTINUE 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Top level.
</span></code></pre>
</dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-break">break</a>,
<a class="function-reference" href="#function-signal">signal</a>, <a class="function-reference" href="#function-warn">warn</a>, <a class="function-reference" href="#function-error">error</a>, 
<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a>, 
<a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> is intended primarily for use in debugging code that
does signaling.   When setting <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a>, the user is
encouraged to choose the most restrictive specification that suffices.
Setting <a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> effectively violates the modular handling of 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> signaling.  In practice, the complete effect of setting
<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> might be unpredictable in some cases since the user
might not be aware of the variety or number of calls to <a class="function-reference" href="#function-signal">signal</a> 
that are used in code called only incidentally.<br/>
<a class="variable-reference" href="#variable-*break-on-signals*">*break-on-signals*</a> enables an early entry to the debugger but such an
entry does not preclude an additional entry to the debugger in the case of
operations such as <a class="function-reference" href="#function-error">error</a> and <a class="function-reference" href="#function-cerror">cerror</a>.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="macro-handler-bind"><div class="header"><span class="left"><span class="name" id="macro-handler-bind">handler-bind</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">handler-bind</span>&nbsp;<span class="lambda-list"><span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">binding</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span> 
		   <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/><tr><td>binding</td><td>::=</td><td><span class="explicit-roman">(</span>type handler<span class="explicit-roman">)</span></td></tr><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">handler</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; evaluated to produce a <span class="parameter">handler-function</span>.<br/><span class="parameter">handler-function</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-designator">designator</a> for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>.<br/><span class="parameter">forms</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> returned by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Executes <span class="parameter">forms</span> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> where the indicated
<span class="parameter">handler</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-binding">bindings</a> are in effect.<br/>Each <span class="parameter">handler</span> should evaluate to a <span class="glossary-reference error">glossary:handler-function</span>,
which is used to handle <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of the given <span class="parameter">type</span>
during execution of the <span class="parameter">forms</span>.  This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> should
take a single argument, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> being signaled.<br/>If more than one <span class="parameter">handler</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-binding">binding</a> is supplied, 
the <span class="parameter">handler</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-binding">bindings</a> are searched sequentially from 
top to bottom in search of a match (by visual analogy with <a class="macro-reference" href="chapter-5.xhtml#macro-typecase">typecase</a>).  
If an appropriate <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> is found, 
the associated handler is run in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> where none of these
<span class="parameter">handler</span> bindings are visible (to avoid recursive errors).  
If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> <span class="glossary-reference error">glossary:declines</span>, the search continues for another <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a>.<br/>If no appropriate <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is found, other <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> are sought
from dynamically enclosing contours.  If no <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> is found outside, 
then <a class="function-reference" href="#function-signal">signal</a> returns or <a class="function-reference" href="#function-error">error</a> enters the debugger. <br/></dd></dl><dl><dt class="label">Examples</dt><dd>In the following code, if an unbound variable error is
signaled in the body (and not handled by an intervening handler), 
the first function is called.  <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-interned-symbol">...</span>)</span></span>)</span>
               <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-interned-symbol">...</span>)</span></span>)</span>)</span>
  <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre><br/>If any other kind of error is signaled, the second function is called.
In either case, neither handler is active while executing the code
in the associated function.<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">trap-error-handler</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="variable-reference" href="chapter-21.xhtml#variable-*error-output*">*error-output*</a> <span class="syntax-string">"~&amp;~A~&amp;"</span> <a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-throw">throw</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">trap-errors</span></span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">trap-errors</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">forms</span>)</span>
   <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-catch">catch</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">trap-errors</span></span>
      <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">trap-error-handler</span></span>)</span>)</span>
        <span class="syntax-unquote">,@<span class="syntax-interned-symbol">forms</span></span>)</span>)</span></span>)</span>
 
 <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">trap-errors</span> <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-string">"Foo."</span>)</span> <span class="syntax-number">1</span>)</span>
       <span class="syntax-cons">(<span class="syntax-interned-symbol">trap-errors</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>  <span class="syntax-string">"Bar."</span>)</span> <span class="syntax-number">2</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-number">1</span> <span class="syntax-number">2</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Bar.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-number">1</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-number">3</span>)</span>
</span></code></pre><br/>Note that ``Foo.'' is not printed because the condition made
by <a class="function-reference" href="#function-signal">signal</a> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-simple condition">simple condition</a>, which is not of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a>, 
so it doesn't trigger the handler for <a class="type-reference" href="#type-error">error</a> set up by <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">trap-errors</span>
</span></code></pre>.<br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-handler-case">handler-case</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="macro-handler-case"><div class="header"><span class="left"><span class="name" id="macro-handler-case">handler-case</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">handler-case</span>&nbsp;<span class="lambda-list"><span class="parameter">expression</span>
		   <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>[</mi><mi>[</mi></math> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">error-clause</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">no-error-clause</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>]</mi><mi>]</mi></math></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/><tr><td>clause</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">error-clause</span> | <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">no-error-clause</span></td></tr>
<tr><td>error-clause</td><td>::=</td><td><span class="explicit-roman">(</span>typespec <span class="explicit-roman">(</span><span class="explicit-mono">[</span>var<span class="explicit-mono">]</span><span class="explicit-roman">)</span> 
		      <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">declaration</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span></td></tr>
<tr><td>no-error-clause</td><td>::=</td><td><span class="explicit-roman">(</span><span class="keyword">:no-error</span> <span class="parameter">lambda-list</span> 
			 <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">declaration</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span></td></tr><br/>
</dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">expression</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/><span class="parameter">typespec</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a>.<br/><span class="parameter">var</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-variable">variable</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a>. <br/><span class="parameter">lambda-list</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-ordinary lambda list">ordinary lambda list</a>.<br/><span class="parameter">declaration</span>&mdash;a <a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-expression">expression</a>; not evaluated.<br/><span class="parameter">form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/><span class="parameter">results</span>&mdash;In the normal situation, the values returned are those that result from
   the evaluation of <span class="parameter">expression</span>;
   in the exceptional situation when control is transferred to a <span class="parameter">clause</span>,
   the value of the last <span class="parameter">form</span> in that <span class="parameter">clause</span> is returned.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-handler-case">handler-case</a> executes <span class="parameter">expression</span> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> where
various handlers are active.  Each <span class="explicit-italic"> error-clause</span> specifies how to 
handle a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> matching the indicated <span class="parameter">typespec</span>. 
A <span class="explicit-italic"> no-error-clause</span> allows the specification of a particular action
if control returns normally.<br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is signaled for which there is an appropriate
<span class="explicit-italic"> error-clause</span> during the execution of <span class="parameter">expression</span>
(<span class="explicit-italic"> i.e.</span>,  one for which <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <span class="syntax-quote">'<span class="parameter">typespec</span></span>)</span>
</span></code></pre>
returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a>) and if there is no intervening handler for a 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of that <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>, then control is transferred to
the body of the relevant <span class="explicit-italic"> error-clause</span>.  In this case, the 
dynamic state is unwound appropriately (so that the handlers established
around the <span class="parameter">expression</span> are no longer active), and <span class="parameter">var</span> is bound to
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> that had been signaled.
If more than one case is provided, those cases are made accessible
in parallel.  That is, in<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="explicit-italic"> form</span>
  <span class="syntax-cons">(<span class="explicit-italic"> typespec1</span> <span class="syntax-cons">(<span class="explicit-italic"> var1</span>)</span> <span class="explicit-italic"> form1</span>)</span>
  <span class="syntax-cons">(<span class="explicit-italic"> typespec2</span> <span class="syntax-cons">(<span class="explicit-italic"> var2</span>)</span> <span class="explicit-italic"> form2</span>)</span>)</span>
</span></code></pre><br/>if the first <span class="explicit-italic"> clause</span> (containing <span class="explicit-italic"> form1</span>) has been selected, 
the handler for the second is no longer visible (or vice versa).<br/>   The <span class="explicit-italic"> clauses</span>
are searched sequentially from top to bottom. If there is <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>
   overlap between <span class="parameter">typespecs</span>, 
the earlier of the <span class="explicit-italic"> clauses</span> is selected.<br/>   If <span class="parameter">var</span> 
is not needed, it can be omitted. That is, a <span class="explicit-italic"> clause</span> such as:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="parameter">typespec</span> <span class="syntax-cons">(<span class="parameter">var</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <span class="parameter">var</span>)</span>)</span> <span class="parameter">form</span>)</span>
</span></code></pre><br/>can be written
 <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="parameter">typespec</span> <span class="syntax-symbol">()</span> <span class="parameter">form</span>)</span>
</span></code></pre>.<br/>   If there are no <span class="parameter">forms</span> in a selected <span class="explicit-italic"> clause</span>, the case, and therefore
   <a class="macro-reference" href="#macro-handler-case">handler-case</a>, returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.
    If execution of <span class="parameter">expression</span> 
returns normally and no <span class="explicit-italic"> no-error-clause</span>
   exists, the values returned by 
<span class="parameter">expression</span> are returned by <a class="macro-reference" href="#macro-handler-case">handler-case</a>.
   If execution of 
<span class="parameter">expression</span> returns normally and a <span class="explicit-italic"> no-error-clause</span>
   does exist, the values returned are used as arguments to the function
   described by constructing
 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="parameter">lambda-list</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>)</span>
</span></code></pre>
   from the <span class="explicit-italic"> no-error-clause</span>, and the <span class="glossary-reference error">glossary:values</span> of that function call are
   returned by <a class="macro-reference" href="#macro-handler-case">handler-case</a>.
The handlers which were established around the <span class="parameter">expression</span> are no longer active at the time of this call.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">assess-condition</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <a class="type-reference" href="#type-condition">condition</a>)</span>
     <span class="syntax-cons">(<a class="type-reference" href="#type-warning">warning</a> <span class="syntax-symbol">()</span> <span class="syntax-string">"Lots of smoke, but no fire."</span>)</span>
     <span class="syntax-cons">(<span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <a class="type-reference" href="chapter-12.xhtml#type-arithmetic-error">arithmetic-error</a> <a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a> <a class="type-reference" href="#type-cell-error">cell-error</a> <a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a>)</span>
        <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~S looks especially bad."</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
     <span class="syntax-cons">(<a class="type-reference" href="#type-serious-condition">serious-condition</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~S looks serious."</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
     <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <span class="syntax-symbol">()</span> <span class="syntax-string">"Hardly worth mentioning."</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ASSESS-CONDITION</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">assess-condition</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-21.xhtml#type-stream-error">stream-error</a></span> <span class="syntax-keyword-symbol">:stream</span> <a class="variable-reference" href="chapter-21.xhtml#variable-*terminal-io*">*terminal-io*</a>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"#&lt;STREAM-ERROR 12352256&gt; looks especially bad."</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">random-condition</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span> <span class="syntax-symbol">()</span> 
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-princ">princ</a> <span class="syntax-string">"Yow"</span> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">RANDOM-CONDITION</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">assess-condition</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">random-condition</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-string">"Hardly worth mentioning."</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-handler-bind">handler-bind</a>,
<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a>,
<a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="syntax-interned-symbol">form</span>
  <span class="syntax-cons">(<span class="explicit-italic"> type1</span> <span class="syntax-cons">(<span class="explicit-italic"> var1</span>)</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> body1</span>)</span>
  <span class="syntax-cons">(<span class="explicit-italic"> type2</span> <span class="syntax-cons">(<span class="explicit-italic"> var2</span>)</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> body2</span>)</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>
is approximately equivalent to:<br/><pre><code/></pre><br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="syntax-interned-symbol">form</span>
  <span class="syntax-cons">(<span class="explicit-italic"> type1</span> <span class="explicit-italic"> (var1)</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> body1</span>)</span>
  <span class="syntax-interned-symbol">...</span>
  <span class="syntax-cons">(<span class="syntax-keyword-symbol">:no-error</span> <span class="syntax-cons">(<span class="explicit-italic"> varN-1</span> <span class="explicit-italic"> varN-2</span> <span class="syntax-interned-symbol">...</span>)</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> bodyN</span>)</span>)</span>
</span></code></pre>
is approximately equivalent to:<br/><pre><code/></pre><br/></dd></dl>
</div><br/><br/><br/><div class="component" id="macro-ignore-errors"><div class="header"><span class="left"><span class="name" id="macro-ignore-errors">ignore-errors</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">ignore-errors</span>&nbsp;<span class="lambda-list"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">forms</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>.<br/><span class="parameter">results</span>&mdash;In the normal situation,
		  the <span class="glossary-reference error">glossary:values</span> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a> are returned;
		  in the exceptional situation,
		  two values are returned: <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> is used to prevent <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a>
from causing entry into the debugger.<br/>Specifically, <a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-execute">executes</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a>
in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> where a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a> for 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-error">error</a> has been established;
if invoked, it <a class="glossary-reference" href="chapter-26.xhtml#glossary-handle">handles</a> such <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> by
returning two <span class="glossary-reference error">glossary:values</span>, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> that was <span class="glossary-reference error">glossary:signaled</span>,
from the <a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/>If a <a class="glossary-reference" href="chapter-26.xhtml#glossary-normal return">normal return</a> from the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a> occurs, 
any <span class="glossary-reference error">glossary:values</span> returned are returned by <a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">load-init-file</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">program</span>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">win</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <span class="syntax-line-comment syntax-comment">;if this fails, don't enter debugger
</span>       <span class="syntax-cons">(<a class="function-reference" href="chapter-24.xhtml#function-load">load</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-19.xhtml#function-merge-pathnames">merge-pathnames</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-19.xhtml#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-interned-symbol">program</span> <span class="syntax-keyword-symbol">:type</span> <span class="syntax-keyword-symbol">:lisp</span>)</span>
                              <span class="syntax-cons">(<a class="function-reference" href="chapter-25.xhtml#function-user-homedir-pathname">user-homedir-pathname</a>)</span>)</span>)</span>
       <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">win</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-unless">unless</a> <span class="syntax-interned-symbol">win</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Init file failed to load.~%"</span>)</span>)</span>
     <span class="syntax-interned-symbol">win</span>)</span>)</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">load-init-file</span> <span class="syntax-string">"no-such-program"</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Init file failed to load.
<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-handler-case">handler-case</a>, <a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-ignore-errors">ignore-errors</a> <span class="syntax-symbol">.</span> <span class="explicit-italic"> forms</span>)</span>
</span></code></pre><br/>   is equivalent to:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-progn">progn</a> <span class="syntax-symbol">.</span> <span class="explicit-italic"> forms</span>)</span>
  <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-values">values</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>
</span></code></pre><br/>Because the second return value is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
in the exceptional case, it is common (but not required) to arrange
for the second return value in the normal case to be missing or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> so
that the two situations can be distinguished.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="macro-define-condition"><div class="header"><span class="left"><span class="name" id="macro-define-condition">define-condition</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/>
<br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">define-condition</span>&nbsp;<span class="lambda-list">name <span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">parent-type</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span>
	                <span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">slot-spec</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span>
                        <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">option</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values">name</span></span><br/><br/><tr><td>slot-spec</td><td>::=</td><td>slot-name | <span class="explicit-roman">(</span>slot-name <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">slot-option</span><span class="explicit-roman">)</span></td></tr>
<tr><td>slot-option</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>[</mi><mi>[</mi></math>
		     <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:reader</span>        <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>         | <br/>
		     <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:writer</span>        <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">function-name</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>  | <br/>
		     <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:accessor</span>      <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>         | <br/>
		           <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:allocation</span>    <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">allocation-type</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math> | <br/>
		     <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:initarg</span>       <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span>         | <br/>
                           <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:initform</span>      <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>            | <br/>
		           <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:type</span>          <span class="parameter">type-specifier</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math> | <br/>
                           <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="keyword">:documentation</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math>
		     <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>]</mi><mi>]</mi></math></td></tr>
<tr><td>option</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>[</mi><mi>[</mi></math>
		<span class="explicit-roman">(</span><span class="keyword">:default-initargs</span> <pre><code><span class="syntax-root">.
</span></code></pre> <span class="parameter">initarg-list</span><span class="explicit-roman">)</span> | <br/>
		<span class="explicit-roman">(</span><span class="keyword">:documentation</span> <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a><span class="explicit-roman">)</span> | <br/>
		<span class="explicit-roman">(</span><span class="keyword">:report</span>        <span class="explicit-italic"> report-name</span><span class="explicit-roman">)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>]</mi><mi>]</mi></math></td></tr>
<tr><td>function-name</td><td>::=</td><td><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> | <span class="explicit-mono">(setf <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math></td></tr>
<tr><td>allocation-type</td><td>::=</td><td><span class="keyword">:instance</span> | <span class="keyword">:class</span></td></tr>
<tr><td>report-name</td><td>::=</td><td><a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a> | <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> | <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a></td></tr><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/><span class="parameter">parent-type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> naming a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.
  If no <span class="parameter">parent-types</span> are supplied,
  the <span class="parameter">parent-types</span> default to <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
</span></code></pre>.<br/><span class="parameter">default-initargs</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-keyword/value pair">keyword/value pairs</a>.<br/>

<span class="parameter">Slot-spec</span>&mdash;the <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>
consisting of the <span class="parameter">slot-name</span> followed by zero or more <span class="parameter">slot-options</span>.<br/><span class="parameter">Slot-name</span>&mdash;a slot name (a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>),
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of a slot name, or the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of slot name/slot form pairs.<br/><span class="parameter">Option</span>&mdash;Any of the following:<br/><dl><dt><span class="keyword">:reader</span></dt><dd><span class="keyword">:reader</span> can be supplied more than once for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> 
and cannot be <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd><dt><span class="keyword">:writer</span></dt><dd><span class="keyword">:writer</span> can be supplied more than once for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>
and must name a <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a>.<br/></dd><dt><span class="keyword">:accessor</span></dt><dd><span class="keyword">:accessor</span> can be supplied more than once for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>
and cannot be <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd><dt><span class="keyword">:allocation</span></dt><dd><span class="keyword">:allocation</span> can be supplied once at most for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.
The default if <span class="keyword">:allocation</span> is not supplied is <span class="keyword">:instance</span>.<br/></dd><dt><span class="keyword">:initarg</span></dt><dd><span class="keyword">:initarg</span> can be supplied more than once for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  <br/></dd><dt><span class="keyword">:initform</span></dt><dd><span class="keyword">:initform</span> can be supplied once at most for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  <br/></dd><dt><span class="keyword">:type</span></dt><dd><span class="keyword">:type</span> can be supplied once at most for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>. <br/></dd><dt><span class="keyword">:documentation</span></dt><dd><span class="keyword">:documentation</span> can be supplied once at most for a given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>. <br/></dd><dt><span class="keyword">:report</span></dt><dd><span class="keyword">:report</span> can be supplied once at most.<br/></dd></dl>
</dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-define-condition">define-condition</a> defines a new condition type called <span class="parameter">name</span>, 
which is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of 
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> or <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> named by
  <span class="parameter">parent-type</span>.  
Each <span class="parameter">parent-type</span> argument specifies a direct <a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertype</a>
of the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>. The new <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>
inherits <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slots</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-method">methods</a> from each of its direct
<a class="glossary-reference" href="chapter-26.xhtml#glossary-supertype">supertypes</a>, and so on.

  If a slot name/slot form pair is supplied,
the slot form is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> that 
can be evaluated by <a class="function-reference" href="#function-make-condition">make-condition</a> to
  produce a default value when an explicit value is not provided.  If no 
slot form
is supplied, the contents of the <span class="parameter">slot</span> 
is initialized in an 
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> way.  <br/>  If the <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> being defined and some other 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> from which it inherits
  have a slot by the same name, only one slot is allocated in the
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, 
but the supplied slot form overrides any slot form
  that might otherwise have been inherited from a <span class="parameter">parent-type</span>.  If no 
slot form is supplied, the inherited slot form (if any) is still visible.<br/>
Accessors are created according to the same rules as used by 
<a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>.<br/>A description of <span class="parameter">slot-options</span> follows:<br/>
<dl>   
<dt><span class="keyword">:reader</span></dt><dd>The <span class="keyword">:reader</span> slot option specifies that an <a class="glossary-reference" href="chapter-26.xhtml#glossary-unqualified method">unqualified method</a> is
to be defined on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-generic function">generic function</a> named by the argument
to <span class="keyword">:reader</span> to read the value of the given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.<br/>
</dd><dt><span class="keyword">:initform</span></dt><dd>The <span class="keyword">:initform</span> slot option is used to provide a default
initial value form to be used in the initialization of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  This
<a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> is evaluated every time it is used to initialize the 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  The
<a class="glossary-reference" href="chapter-26.xhtml#glossary-lexical environment">lexical environment</a> 
in which this <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> is evaluated is the lexical
<a class="glossary-reference" href="chapter-26.xhtml#glossary-environment">environment</a> in which the <a class="macro-reference" href="#macro-define-condition">define-condition</a> 
form was evaluated.
Note that the <a class="glossary-reference" href="chapter-26.xhtml#glossary-lexical environment">lexical environment</a> refers both to variables and to
<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">functions</a>.  
For <a class="glossary-reference" href="chapter-26.xhtml#glossary-local slot">local slots</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> is the dynamic
<a class="glossary-reference" href="chapter-26.xhtml#glossary-environment">environment</a> 
in which <a class="function-reference" href="#function-make-condition">make-condition</a> was called; for 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-shared slot">shared slots</a>, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> 
is the <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> in which the
<a class="macro-reference" href="#macro-define-condition">define-condition</a> form was evaluated.  
 

No implementation is permitted to extend the syntax of <a class="macro-reference" href="#macro-define-condition">define-condition</a>
to allow <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="parameter">slot-name</span> <span class="parameter">form</span>)</span>
</span></code></pre> as an abbreviation for
<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="parameter">slot-name</span> <span class="syntax-keyword-symbol">:initform</span> <span class="parameter">form</span>)</span>
</span></code></pre>.<br/></dd><dt><span class="keyword">:initarg</span></dt><dd>The <span class="keyword">:initarg</span> slot option declares an initialization
argument named by its <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> argument
and specifies that this
initialization argument initializes the given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.  If the
initialization argument has a value in the call to 
<a class="function-reference" href="chapter-7.xhtml#function-initialize-instance">initialize-instance</a>, the value is stored into the given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>,
and the slot's <span class="keyword">:initform</span> slot option, if any, is not
evaluated.  If none of the initialization arguments specified for a
given <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> has a value, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> is initialized according to the
<span class="keyword">:initform</span> slot option, if specified.  <br/></dd><dt><span class="keyword">:type</span></dt><dd>The <span class="keyword">:type</span> slot option specifies that the contents of the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> is always of the specified <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a>.  It effectively
declares the result type of the reader generic function when applied
to an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of this <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> type.  
The consequences of attempting to store in a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> a value that 
does not satisfy the type of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a> is undefined.
 
</dd><dt><span class="keyword">:default-initargs</span></dt><dd>
This option is treated the same as it would be <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>.<br/></dd><dt><span class="keyword">:documentation</span></dt><dd>
The <span class="keyword">:documentation</span> slot option provides a <a class="glossary-reference" href="chapter-26.xhtml#glossary-documentation string">documentation string</a>
for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-slot">slot</a>.<br/></dd><dt><span class="keyword">:report</span></dt><dd>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">Condition</a> reporting is mediated through the <a class="function-reference" href="chapter-22.xhtml#function-print-object">print-object</a>
method for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> type in question, with <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a>
always being <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>. Specifying <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="parameter">report-name</span>)</span>
</span></code></pre> 
in the definition of a condition type <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">C</span>
</span></code></pre> is equivalent to:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-7.xhtml#macro-defmethod">defmethod</a> <a class="function-reference" href="chapter-22.xhtml#function-print-object">print-object</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">c</span>)</span> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
  <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span> <span class="syntax-cons">(<span class="parameter">report-name</span> <span class="syntax-interned-symbol">x</span> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>)</span>)</span>
</span></code></pre><br/>     If the value supplied by the argument to <span class="keyword">:report</span> (<span class="parameter">report-name</span>)
is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a>, 
it must be acceptable to 
     <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a>. <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="parameter">report-name</span>)</span>
</span></code></pre> 
is evaluated
     in the current <a class="glossary-reference" href="chapter-26.xhtml#glossary-lexical environment">lexical environment</a>.  
It should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> 
of two
     arguments, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> and a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, 
that prints on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> a
     description of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>. 
 This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is called whenever the
     <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is printed while <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>If <span class="parameter">report-name</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, it is a shorthand for <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
  <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
  <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-write-string">write-string</a> <span class="parameter">report-name</span> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>)</span>
</span></code></pre><br/>This option is processed after the new <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> type has been defined,
so use of the <span class="parameter">slot</span> accessors within the <span class="keyword">:report</span> function is permitted.
If this option is not supplied, information about how to report this
type of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is inherited from the <span class="parameter">parent-type</span>.<br/></dd></dl><br/>The consequences are unspecifed if an attempt is made to <a class="glossary-reference" href="chapter-26.xhtml#glossary-read">read</a> a 
<span class="parameter">slot</span> that has not been explicitly initialized and that has not 
been given a default value.<br/>The consequences are unspecified if an attempt is made to assign the
<span class="parameter">slots</span> by using <a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a>.<br/>If a <a class="macro-reference" href="#macro-define-condition">define-condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> appears as a <a class="glossary-reference" href="chapter-26.xhtml#glossary-top level form">top level form</a>,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-compiler">compiler</a> must make <span class="parameter">name</span> recognizable as a valid <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> name,
and it must be possible to reference the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> as the
<span class="parameter">parent-type</span> of another <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> in a subsequent
<a class="macro-reference" href="#macro-define-condition">define-condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-file">file</a> being compiled.

</dd></dl><dl><dt class="label">Examples</dt><dd>The following form defines a condition of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> 
<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">peg/hole-mismatch</span>
</span></code></pre> which inherits from a condition type
called <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">blocks-world-error</span>
</span></code></pre>:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">peg/hole-mismatch</span> 
                  <span class="syntax-cons">(<span class="syntax-interned-symbol">blocks-world-error</span>)</span>
                  <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">peg-shape</span>  <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:peg-shape</span>
                               <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">peg/hole-mismatch-peg-shape</span>)</span>
                   <span class="syntax-cons">(<span class="syntax-interned-symbol">hole-shape</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:hole-shape</span>
                               <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">peg/hole-mismatch-hole-shape</span>)</span>)</span>
  <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
             <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"A ~A peg cannot go in a ~A hole."</span>
                     <span class="syntax-cons">(<span class="syntax-interned-symbol">peg/hole-mismatch-peg-shape</span>  <a class="type-reference" href="#type-condition">condition</a>)</span>
                     <span class="syntax-cons">(<span class="syntax-interned-symbol">peg/hole-mismatch-hole-shape</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/>The new type has slots <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">peg-shape</span>
</span></code></pre> and <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">hole-shape</span>
</span></code></pre>, 
so <a class="function-reference" href="#function-make-condition">make-condition</a> accepts <pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:peg-shape</span>
</span></code></pre> and <pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:hole-shape</span>
</span></code></pre> keywords.  
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-reader">readers</a> <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">peg/hole-mismatch-peg-shape</span>
</span></code></pre> and <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">peg/hole-mismatch-hole-shape</span>
</span></code></pre> 
apply to objects of this type, as illustrated in the <span class="keyword">:report</span> information.<br/>The following form defines a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> named <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-error</span>
</span></code></pre>
which inherits from <a class="type-reference" href="#type-error">error</a>: <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">machine-error</span> 
                  <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span>
                  <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">machine-name</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:machine-name</span>
                                 <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">machine-error-machine-name</span>)</span>)</span>
  <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
             <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"There is a problem with ~A."</span>
                     <span class="syntax-cons">(<span class="syntax-interned-symbol">machine-error-machine-name</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/>Building on this definition, a new error condition can be defined which
is a subtype of <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-error</span>
</span></code></pre> for use when machines are not available: <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">machine-not-available-error</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">machine-error</span>)</span> <span class="syntax-symbol">()</span>
  <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
             <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"The machine ~A is not available."</span>
                     <span class="syntax-cons">(<span class="syntax-interned-symbol">machine-error-machine-name</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/>This defines a still more specific condition, built upon 
<pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-not-available-error</span>
</span></code></pre>, which provides a slot initialization form
for <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-name</span>
</span></code></pre> but which does not provide any new slots or report
information.  It just gives the <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-name</span>
</span></code></pre> slot a default initialization:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">my-favorite-machine-not-available-error</span>
                  <span class="syntax-cons">(<span class="syntax-interned-symbol">machine-not-available-error</span>)</span>
  <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">machine-name</span> <span class="syntax-keyword-symbol">:initform</span> <span class="syntax-string">"mc.lcs.mit.edu"</span>)</span>)</span>)</span>
</span></code></pre><br/>Note that since no <span class="keyword">:report</span> clause was given, the information 
inherited from <pre><code><span class="syntax-root"><span class="syntax-interned-symbol">machine-not-available-error</span>
</span></code></pre> is used to
report this type of condition.<br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">ate-too-much</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span> 
     <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">person</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:person</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">ate-too-much-person</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">weight</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:weight</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">ate-too-much-weight</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">kind-of-food</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:kind-of-food</span>
                    <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-keyword-symbol">:ate-too-much-kind-of-food</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ATE-TOO-MUCH</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">ate-too-much-ice-cream</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">ate-too-much</span>)</span>
   <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">kind-of-food</span> <span class="syntax-keyword-symbol">:initform</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">ice-cream</span></span>)</span>
    <span class="syntax-cons">(<span class="syntax-interned-symbol">flavor</span>       <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:flavor</span>
                  <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">ate-too-much-ice-cream-flavor</span>
                  <span class="syntax-keyword-symbol">:initform</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">vanilla</span></span> )</span>)</span>
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"~A ate too much ~A ice-cream"</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">ate-too-much-person</span> <a class="type-reference" href="#type-condition">condition</a>)</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">ate-too-much-ice-cream-flavor</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ATE-TOO-MUCH-ICE-CREAM</span>
 <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ate-too-much-ice-cream</span></span>
                 <span class="syntax-keyword-symbol">:person</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">fred</span></span>
                 <span class="syntax-keyword-symbol">:weight</span> <span class="syntax-number">300</span>
                 <span class="syntax-keyword-symbol">:flavor</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">chocolate</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-verbatim">#&lt;ATE-TOO-MUCH-ICE-CREAM 32236101&gt;</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~A"</span> <a class="function-reference" href="chapter-12.xhtml#function-*">*</a>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> FRED ate too much CHOCOLATE ice-cream
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-make-condition">make-condition</a>, <a class="macro-reference" href="chapter-7.xhtml#macro-defclass">defclass</a>, <a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl>
</div><br/><br/>
<br/><div class="component" id="function-make-condition"><div class="header"><span class="left"><span class="name" id="function-make-condition">make-condition</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">make-condition</span>&nbsp;<span class="lambda-list">type <span class="lambda-list-keyword">&amp;rest</span> slot-initializations</span>&nbsp;â†’&nbsp;<span class="return-values">condition</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">type</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-type specifier">type specifier</a> (for a <a class="glossary-reference" href="chapter-26.xhtml#glossary-subtype">subtype</a> of <a class="type-reference" href="#type-condition">condition</a>).<br/><span class="parameter">slot-initializations</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-initialization argument list">initialization argument list</a>.<br/><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Constructs and returns a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> of type <span class="parameter">type</span> 
using <span class="parameter">slot-initializations</span> for the initial values of the slots.  
The newly created <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> is returned.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*oops-count*</span> <span class="syntax-number">0</span>)</span>

 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="#type-simple-error">simple-error</a></span>
                         <span class="syntax-keyword-symbol">:format-control</span> <span class="syntax-string">"This is your ~:R error."</span>
                         <span class="syntax-keyword-symbol">:format-arguments</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-12.xhtml#macro-incf">incf</a> <span class="syntax-interned-symbol">*oops-count*</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-verbatim">#&lt;SIMPLE-ERROR 32245104&gt;</span>
 
 <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~A~%"</span> <span class="syntax-interned-symbol">a</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> This is your first error.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 
 <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-interned-symbol">a</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: This is your first error.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; 
</span></code></pre>
</dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/>
</dd></dl><dl><dt class="label">Affected By</dt><dd>The set of defined <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-define-condition">define-condition</a>, <a class="section-reference" href="#section-ConditionSystemConcepts">Condition System Concepts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="type-restart"><div class="header"><span class="left"><span class="name" id="type-restart">restart</span></span><span class="right"><span class="ftype">System Class</span></span></div><br/><dl><dt class="label">Class Precedence List</dt><dd><a class="type-reference" href="#type-restart">restart</a>,
<a class="type-reference" href="chapter-4.xhtml#type-t">t</a><br/></dd></dl><dl><dt class="label">Description</dt><dd>An <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="#type-restart">restart</a> represents a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> that can be
called to perform some form of recovery action, usually a transfer of control 
to an outer point in the running program.<br/>An <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation">implementation</a> is free to implement a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> in whatever 
manner is most convenient; a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> has only <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic extent">dynamic extent</a>
relative to the scope of the binding <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a> which <a class="glossary-reference" href="chapter-26.xhtml#glossary-establish">establishes</a> it.<br/></dd></dl></div><br/>
<br/><div class="component" id="function-compute-restarts"><div class="header"><span class="left"><span class="name" id="function-compute-restarts">compute-restarts</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">compute-restarts</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;<span class="return-values">restarts</span></span><br/>
</dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.

<span class="parameter">restarts</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-compute-restarts">compute-restarts</a> uses the dynamic state of the program to compute 
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> which are currently active.<br/>The resulting <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> is ordered so that the innermost
(more-recently established) restarts are nearer the head of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>.<br/>When <span class="parameter">condition</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>, only those <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>
are considered that are either explicitly associated with that <span class="parameter">condition</span>,
or not associated with any <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>; that is, the excluded <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> 
are those that are associated with a non-empty set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of 
which the given <span class="parameter">condition</span> is not an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a>.
If <span class="parameter">condition</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, all <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are considered.

<a class="function-reference" href="#function-compute-restarts">compute-restarts</a> returns all 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable restart">applicable restarts</a>, 
including anonymous ones, even if some of them have the same name as 
others and would therefore not be found by <a class="function-reference" href="#function-find-restart">find-restart</a> 
when given a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> argument.<br/>Implementations are permitted, but not required, to return <a class="glossary-reference" href="chapter-26.xhtml#glossary-distinct">distinct</a>
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">lists</a> from repeated calls to <a class="function-reference" href="#function-compute-restarts">compute-restarts</a> while in
the same dynamic environment.  
The consequences are undefined if the <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> returned by
<a class="function-reference" href="#function-compute-restarts">compute-restarts</a> is every modified.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> ;; One possible way in which an interactive debugger might present
 ;; restarts to the user.
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">invoke-a-restart</span> <span class="syntax-symbol">()</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">restarts</span> <span class="syntax-cons">(<a class="function-reference" href="#function-compute-restarts">compute-restarts</a>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-do">do</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">i</span> <span class="syntax-number">0</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span>)</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-interned-symbol">restarts</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-cdr">cdr</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-null">null</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~D: ~A~%"</span> <span class="syntax-interned-symbol">i</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-car">car</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">n</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">k</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-length">length</a> <span class="syntax-interned-symbol">restarts</span>)</span>)</span>)</span>
       <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-12.xhtml#type-integer">integer</a></span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-&gt;=">&gt;=</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-number">0</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-&lt;">&lt;</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-interned-symbol">k</span>)</span>)</span>
               <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>)</span>
             <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;Option: "</span>)</span>
             <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>
             <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-nth">nth</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-interned-symbol">restarts</span>)</span>)</span>)</span>)</span>)</span>

 <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">invoke-a-restart</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">one</span> <span class="syntax-symbol">()</span> <span class="syntax-number">1</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">two</span> <span class="syntax-symbol">()</span> <span class="syntax-number">2</span>)</span>
   <span class="syntax-cons">(<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Who knows?"</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">anonymous</span></span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">one</span> <span class="syntax-symbol">()</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">I</span></span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">two</span> <span class="syntax-symbol">()</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">II</span></span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 0: ONE
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 1: TWO
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 2: Who knows?
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 3: ONE
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 4: TWO
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 5: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Option: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox4</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">II</span>
 
 ;; Note that in addition to user-defined restart points, COMPUTE-RESTARTS
 ;; also returns information about any system-supplied restarts, such as
 ;; the "Return to Lisp Toplevel" restart offered above.
 
</span></code></pre><br/>
</dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing restarts.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-find-restart">find-restart</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-find-restart"><div class="header"><span class="left"><span class="name" id="function-find-restart">find-restart</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">find-restart</span>&nbsp;<span class="lambda-list">identifier <span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;<span class="return-values">restart</span></span><br/>
</dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">identifier</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>.<br/><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.

<span class="parameter">restart</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-find-restart">find-restart</a> searches for a particular <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> in the 
current <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a>.<br/>When <span class="parameter">condition</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>, only those <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a>
are considered that are either explicitly associated with that <span class="parameter">condition</span>,
or not associated with any <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>; that is, the excluded <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> 
are those that are associated with a non-empty set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> of 
which the given <span class="parameter">condition</span> is not an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a>.
If <span class="parameter">condition</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, all <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are considered.

If <span class="parameter">identifier</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, then the innermost 
(most recently established) <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable restart">applicable restart</a> with that <a class="glossary-reference" href="chapter-26.xhtml#glossary-name">name</a> is returned.
<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is returned if no such restart is found.<br/>If <span class="parameter">identifier</span> is a currently active restart, then it is returned.
Otherwise, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is returned.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">my-restart</span></span>)</span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~S is named ~S"</span> <span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-restart-name">restart-name</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">my-restart</span> <span class="syntax-symbol">()</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> #&lt;RESTART 32307325&gt; is named MY-RESTART
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
 <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">my-restart</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing restarts.<br/><a class="macro-reference" href="#macro-restart-case">restart-case</a>, <a class="macro-reference" href="#macro-restart-bind">restart-bind</a>, <a class="macro-reference" href="#macro-with-condition-restarts">with-condition-restarts</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-compute-restarts">compute-restarts</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="parameter">identifier</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="chapter-17.xhtml#function-find">find</a> <span class="parameter">identifier</span> <span class="syntax-cons">(<a class="function-reference" href="#function-compute-restarts">compute-restarts</a>)</span> <span class="syntax-keyword-symbol">:key</span> <span class="syntax-keyword-symbol">:restart-name</span>)</span>
</span></code></pre><br/>Although anonymous restarts have a name of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>,
the consequences are unspecified if <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is given as an <span class="parameter">identifier</span>.  
Occasionally, programmers lament that <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is not permissible as an
<span class="parameter">identifier</span> argument.  In most such cases, <a class="function-reference" href="#function-compute-restarts">compute-restarts</a>
can probably be used to simulate the desired effect.<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-invoke-restart"><div class="header"><span class="left"><span class="name" id="function-invoke-restart">invoke-restart</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">invoke-restart</span>&nbsp;<span class="lambda-list">restart <span class="lambda-list-keyword">&amp;rest</span> arguments</span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">restart</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart designator">restart designator</a>.<br/><span class="parameter">argument</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> returned by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>
		   associated with <span class="parameter">restart</span>, if that <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> returns.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Calls the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> associated with <span class="parameter">restart</span>,
passing <span class="parameter">arguments</span> to it.  
<span class="parameter">Restart</span> must be valid in the current <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a>.  <br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add3</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">x</span> <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">seven</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value SEVEN was not of type NUMBER.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a different value to use.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(invoke-restart 'store-value 7)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">10</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>A non-local transfer of control might be done by the restart.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Existing restarts.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">restart</span> is not valid, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-find-restart">find-restart</a>,
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a>,
<a class="macro-reference" href="#macro-restart-case">restart-case</a>,
<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>The most common use for <a class="function-reference" href="#function-invoke-restart">invoke-restart</a> is in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handler</a>.
It might be used explicitly, or implicitly through <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a>
or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart function">restart function</a>.<br/><a class="glossary-reference" href="chapter-26.xhtml#glossary-restart function">Restart functions</a> call <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>, not vice versa.  That is,
<span class="glossary-reference error">glossary:invoke-restart</span> provides primitive functionality, and <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart function">restart functions</a>
are non-essential ``syntactic sugar.''<br/></dd></dl></div><br/><br/><br/><div class="component" id="function-invoke-restart-interactively"><div class="header"><span class="left"><span class="name" id="function-invoke-restart-interactively">invoke-restart-interactively</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">invoke-restart-interactively</span>&nbsp;<span class="lambda-list">restart</span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">restart</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart designator">restart designator</a>.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> returned by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> 
		   associated with <span class="parameter">restart</span>, if that <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> returns.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> calls the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> associated
with <span class="parameter">restart</span>, prompting for any necessary arguments. 
If <span class="parameter">restart</span> is a name, it must be valid in the current <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a>.  <br/>  <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> 
prompts for arguments by executing
  the code provided in the <span class="keyword">:interactive</span> keyword to 
<a class="macro-reference" href="#macro-restart-case">restart-case</a> or 
  <span class="keyword">:interactive-function</span> keyword to <a class="macro-reference" href="#macro-restart-bind">restart-bind</a>.<br/>If no such options have been supplied in the corresponding
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a> or <a class="macro-reference" href="#macro-restart-case">restart-case</a>, 
then the consequences are undefined if the <span class="parameter">restart</span> takes
  required arguments.  If the arguments are optional, an argument list of
  <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is used.<br/>  Once the arguments have been determined, 
<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a>
  executes the following:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a> <span class="syntax-function">#'<a class="function-reference" href="#function-invoke-restart">invoke-restart</a></span> <span class="explicit-italic"> restart</span> <span class="explicit-italic"> arguments</span>)</span>
</span></code></pre><br/>
</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add3</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">x</span> <a class="type-reference" href="chapter-12.xhtml#type-number">number</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
 
 <span class="syntax-cons">(<span class="syntax-interned-symbol">add3</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">seven</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The value SEVEN was not of type NUMBER.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a different value to use.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(invoke-restart-interactively 'store-value)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Type a form to evaluate and use: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox7</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">10</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>If prompting for arguments is necesary,
some typeout may occur (on <a class="glossary-reference" href="chapter-26.xhtml#glossary-query i/o">query I/O</a>).<br/>A non-local transfer of control might be done by the restart.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="chapter-21.xhtml#variable-*query-io*">*query-io*</a>, active <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a><br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If <span class="parameter">restart</span> is not valid, an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a>
is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-find-restart">find-restart</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="macro-reference" href="#macro-restart-case">restart-case</a>,
<a class="macro-reference" href="#macro-restart-bind">restart-bind</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> is used internally by the debugger
and may also be useful in implementing other portable, interactive debugging 
tools.<br/></dd></dl></div><br/><br/><br/><div class="component" id="macro-restart-bind"><div class="header"><span class="left"><span class="name" id="macro-restart-bind">restart-bind</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">restart-bind</span>&nbsp;<span class="lambda-list"><span class="explicit-roman">(</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="explicit-roman">(</span>name function
				        <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">key-val-pair</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">)</span>
		   <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/><tr><td>key-val-pair</td><td>::=</td><td><span class="keyword">:interactive-function</span> interactive-function | <br/>
		      <span class="keyword">:report-function</span> report-function           | <br/>
		      <span class="keyword">:test-function</span> test-function</td></tr><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>; not evaluated.<br/><span class="parameter">function</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; evaluated.<br/><span class="parameter">forms</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>.<br/><span class="parameter">interactive-function</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; evaluated.<br/><span class="parameter">report-function</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; evaluated.<br/><span class="parameter">test-function</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; evaluated.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> returned by the <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-restart-bind">restart-bind</a> executes the body of <span class="parameter">forms</span> 
in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> where <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> with the given <span class="parameter">names</span> are in effect.<br/>If a <span class="parameter">name</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, it indicates an anonymous restart;
if a <span class="parameter">name</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, it indicates a named restart.<br/>The <span class="parameter">function</span>, <span class="parameter">interactive-function</span>, and <span class="parameter">report-function</span>
are unconditionally evaluated in the current lexical and dynamic environment
prior to evaluation of the body. Each of these <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">forms</a> must evaluate to
a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>.<br/>If <a class="function-reference" href="#function-invoke-restart">invoke-restart</a> is done on that restart,
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> which resulted from evaluating <span class="parameter">function</span> 
is called, in the <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a> of the <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
with the <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">arguments</a> given to <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>. 
The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> may either perform a non-local transfer of control or may return normally.<br/>If the restart is invoked interactively from the debugger 
(using <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a>), 
the arguments are defaulted by calling the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> 
which resulted from evaluating <span class="parameter">interactive-function</span>.
That <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> may optionally prompt interactively on <a class="glossary-reference" href="chapter-26.xhtml#glossary-query i/o">query I/O</a>, 
and should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of arguments to be used by
<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> when invoking the restart. <br/>If a restart is invoked interactively but no <span class="parameter">interactive-function</span> is used,
then an argument list of <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> is used. In that case, the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>
must be compatible with an empty argument list.<br/>If the restart is presented interactively (<span class="explicit-italic"> e.g.</span>,  by the debugger),
the presentation is done by calling the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> which resulted
from evaluating <span class="parameter">report-function</span>.
This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> must be a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one argument, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>. 
It is expected to print a description of the action that the restart takes
to that <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>. 
This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is called any time the restart is printed 
while <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>In the case of interactive invocation, 
the result is dependent on the value of <span class="keyword">:interactive-function</span>
as follows.<br/><dl><dt><span class="keyword">:interactive-function</span></dt><dd><span class="parameter">Value</span> is evaluated in the current lexical environment and
  should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of no arguments which constructs a 
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of arguments to be used by <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> 
  when invoking this restart.  The <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> may prompt interactively
  using <a class="glossary-reference" href="chapter-26.xhtml#glossary-query i/o">query I/O</a> if necessary.<br/></dd><dt><span class="keyword">:report-function</span></dt><dd><span class="parameter">Value</span> is evaluated in the current lexical environment and
  should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one argument, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, which
  prints on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> a summary of the action that this restart
  takes.  This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is called whenever the restart is
  reported (printed while <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>).
  If no <span class="keyword">:report-function</span> option is provided, the manner in which the
  <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is reported is <a class="glossary-reference" href="chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>.<br/></dd><dt><span class="keyword">:test-function</span></dt><dd><span class="parameter">Value</span> is evaluated in the current lexical environment and
  should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one argument, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, which
  returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if the restart is to be considered visible.
</dd></dl><br/>
</dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><a class="variable-reference" href="chapter-21.xhtml#variable-*query-io*">*query-io*</a>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-restart-case">restart-case</a>, <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="macro-reference" href="#macro-restart-bind">restart-bind</a> is primarily intended to be used to implement
<a class="macro-reference" href="#macro-restart-case">restart-case</a> and  might be useful in implementing other
macros. Programmers who are uncertain about whether to use <a class="macro-reference" href="#macro-restart-case">restart-case</a>
or <a class="macro-reference" href="#macro-restart-bind">restart-bind</a> should prefer <a class="macro-reference" href="#macro-restart-case">restart-case</a> for the cases where
it is powerful enough, using <a class="macro-reference" href="#macro-restart-bind">restart-bind</a> only in cases where its full
generality is really needed.<br/></dd></dl></div><br/><br/><br/><div class="component" id="macro-restart-case"><div class="header"><span class="left"><span class="name" id="macro-restart-case">restart-case</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">restart-case</span>&nbsp;<span class="lambda-list">restartable-form <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†“</mi></math><span class="parameter">clause</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/><tr><td>clause</td><td>::=</td><td><span class="explicit-roman">(</span> case-name lambda-list			       <br/>
	         <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>[</mi><mi>[</mi></math> <span class="keyword">:interactive</span> interactive-expression |
		      	      <span class="keyword">:report</span> report-expression           |
			      <span class="keyword">:test</span> test-expression<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>]</mi><mi>]</mi></math>              <br/>
		 <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">declaration</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span></td></tr>
</dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">restartable-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/><span class="parameter">case-name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/><span class="parameter">lambda-list</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-ordinary lambda list">ordinary lambda list</a>.<br/><span class="parameter">interactive-expression</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a>.<br/><span class="parameter">report-expression</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>,
			     a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>,
			     or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a>.                                 <br/><span class="parameter">test-expression</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a>.<br/><span class="parameter">declaration</span>&mdash;a <a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-expression">expression</a>; not evaluated.<br/><span class="parameter">form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> resulting from the <a class="glossary-reference" href="chapter-26.xhtml#glossary-evaluation">evaluation</a>
		   of <span class="parameter">restartable-form</span>, 
		  or the <span class="glossary-reference error">glossary:values</span> returned by the last <span class="parameter">form</span>
		   executed in a chosen <span class="glossary-reference error">glossary:clause</span>,
		  or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-restart-case">restart-case</a> evaluates <span class="parameter">restartable-form</span> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a>
where the clauses have special meanings as points to which control may be transferred.  
If <span class="parameter">restartable-form</span> finishes executing and returns any values, 
all values returned are returned by <a class="macro-reference" href="#macro-restart-case">restart-case</a> and 
processing has completed. While <span class="parameter">restartable-form</span> is executing, any code may
  transfer control to one of the clauses (see <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>).  
If a transfer
  occurs, the forms in the body of that clause is evaluated and any values
  returned by the last such form are returned by 
<a class="macro-reference" href="#macro-restart-case">restart-case</a>.
In this case, the 
dynamic state is unwound appropriately (so that the restarts established
around the <span class="parameter">restartable-form</span> are no longer active) prior to execution of the
clause.<br/>  If there are no <span class="parameter">forms</span> 
in a selected clause, <a class="macro-reference" href="#macro-restart-case">restart-case</a> returns <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>If <span class="parameter">case-name</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, it names this restart.<br/>It is possible to have more than one clause use the same <span class="parameter">case-name</span>.
In this case, the first clause with that name is found by <a class="function-reference" href="#function-find-restart">find-restart</a>.  
The other clauses are accessible using <a class="function-reference" href="#function-compute-restarts">compute-restarts</a>.<br/>Each <span class="parameter">arglist</span> is an <a class="glossary-reference" href="chapter-26.xhtml#glossary-ordinary lambda list">ordinary lambda list</a> to be bound during the 
execution of its corresponding <span class="parameter">forms</span>.  These parameters are used 
by the <a class="macro-reference" href="#macro-restart-case">restart-case</a> clause to receive any necessary data from a call
to <a class="function-reference" href="#function-invoke-restart">invoke-restart</a>.<br/>By default, <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> passes no arguments and
all arguments must be optional in order to accomodate interactive
restarting.  However, the arguments need not be optional if the
<span class="keyword">:interactive</span> 
keyword has been used to inform <a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a>
  about how to compute a proper argument list.<br/><span class="parameter">Keyword</span> options have the following meaning.
<dl><dt><span class="keyword">:interactive</span></dt><dd>The <span class="parameter">value</span> supplied by <pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:interactive</span> <span class="parameter">value</span>
</span></code></pre>
must be a suitable argument to <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a>. 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="parameter">value</span>)</span>
</span></code></pre> is evaluated in the current lexical
    environment.  It should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of no arguments which 
    returns arguments to be used by 
<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> when it is invoked.
<a class="function-reference" href="#function-invoke-restart-interactively">invoke-restart-interactively</a> 
is called in the dynamic
    environment available prior to any restart attempt, and uses 
<a class="glossary-reference" href="chapter-26.xhtml#glossary-query i/o">query I/O</a> for user interaction.<br/>    If a restart is invoked interactively but no <span class="keyword">:interactive</span> option
    was supplied, the argument list used in the invocation is the empty
    list.<br/></dd><dt><span class="keyword">:report</span></dt><dd>If the <span class="parameter">value</span> supplied by <pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:report</span> <span class="parameter">value</span>
</span></code></pre>
is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-lambda expression">lambda expression</a> or a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>, it 
must be acceptable to <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a>.
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="parameter">value</span>)</span>
</span></code></pre> is evaluated in the current lexical
environment.  It should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one
argument, a <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a>, which prints on the <a class="glossary-reference" href="chapter-26.xhtml#glossary-stream">stream</a> a 
description of the restart.  This <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> is called 
whenever the restart is printed while <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.<br/>If <span class="parameter">value</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-string">string</a>, it is a shorthand for<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-write-string">write-string</a> <span class="syntax-interned-symbol">value</span> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>)</span>
</span></code></pre><br/>    If a named restart is asked to report but no report information has been
    supplied, the name of the restart is used in generating default report text.<br/>    When <a class="variable-reference" href="chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, the 
printer uses the report information for
    a restart.  For example, a debugger might announce the action of typing
    a ``continue'' command by:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~S &ndash; ~A~%"</span> <span class="syntax-quote">'<span class="syntax-keyword-symbol">:continue</span></span> <span class="syntax-interned-symbol">some-restart</span>)</span>
</span></code></pre>
    which might then display as something like:<br/><pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:CONTINUE</span> <span class="syntax-interned-symbol">--</span> <a class="macro-reference" href="chapter-5.xhtml#macro-return">return</a> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">command</span> <span class="syntax-interned-symbol">level</span>
</span></code></pre><br/>The consequences are unspecified if an unnamed restart is specified
but no <span class="keyword">:report</span> option is provided.<br/></dd><dt><span class="keyword">:test</span></dt><dd>The <span class="parameter">value</span> supplied by <pre><code><span class="syntax-root"><span class="syntax-keyword-symbol">:test</span> <span class="parameter">value</span>
</span></code></pre>
must be a suitable argument to <a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a>. 
<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-function">function</a> <span class="parameter">value</span>)</span>
</span></code></pre> is evaluated in the current lexical
    environment.  It should return a <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> of one <a class="glossary-reference" href="chapter-26.xhtml#glossary-argument">argument</a>, the
<a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>, that
returns <a class="glossary-reference" href="chapter-26.xhtml#glossary-true">true</a> if the restart is to be considered visible.<br/>The default for this option is equivalent to <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">c</span>)</span>)</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
</span></code></pre>.
</dd></dl><br/>If the <span class="parameter">restartable-form</span> is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> whose <a class="glossary-reference" href="chapter-26.xhtml#glossary-car">car</a> is any of
the <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbols</a> <a class="function-reference" href="#function-signal">signal</a>, <a class="function-reference" href="#function-error">error</a>, <a class="function-reference" href="#function-cerror">cerror</a>,
or <a class="function-reference" href="#function-warn">warn</a> (or is a <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro form">macro form</a> which macroexpands into such a
<a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a>), then <a class="macro-reference" href="#macro-with-condition-restarts">with-condition-restarts</a> is used implicitly
to associate the indicated <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> with the <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> to be
signaled.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a>
     <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span>
                             <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
                             <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">my-restart</span></span> <span class="syntax-number">7</span>)</span>)</span></span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"Foo."</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">my-restart</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-interned-symbol">v</span>)</span> <span class="syntax-interned-symbol">v</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">7</span>

 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">food-error</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a>)</span> <span class="syntax-symbol">()</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">FOOD-ERROR</span>
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-define-condition">define-condition</a> <span class="syntax-interned-symbol">bad-tasting-sundae</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">food-error</span>)</span> 
   <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">ice-cream</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:ice-cream</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">bad-tasting-sundae-ice-cream</span>)</span>
    <span class="syntax-cons">(<span class="syntax-interned-symbol">sauce</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:sauce</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">bad-tasting-sundae-sauce</span>)</span>
    <span class="syntax-cons">(<span class="syntax-interned-symbol">topping</span> <span class="syntax-keyword-symbol">:initarg</span> <span class="syntax-keyword-symbol">:topping</span> <span class="syntax-keyword-symbol">:reader</span> <span class="syntax-interned-symbol">bad-tasting-sundae-topping</span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-string">"Bad tasting sundae with ~S, ~S, and ~S"</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">bad-tasting-sundae-ice-cream</span> <a class="type-reference" href="#type-condition">condition</a>)</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">bad-tasting-sundae-sauce</span> <a class="type-reference" href="#type-condition">condition</a>)</span>
                      <span class="syntax-cons">(<span class="syntax-interned-symbol">bad-tasting-sundae-topping</span> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">BAD-TASTING-SUNDAE</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">all-start-with-same-letter</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">symbol1</span> <span class="syntax-interned-symbol">symbol2</span> <span class="syntax-interned-symbol">symbol3</span>)</span>
   <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">first-letter</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-char">char</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-symbol-name">symbol-name</a> <span class="syntax-interned-symbol">symbol1</span>)</span> <span class="syntax-number">0</span>)</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-and">and</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a> <span class="syntax-interned-symbol">first-letter</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-char">char</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-symbol-name">symbol-name</a> <span class="syntax-interned-symbol">symbol2</span>)</span> <span class="syntax-number">0</span>)</span>)</span>
          <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-eql">eql</a> <span class="syntax-interned-symbol">first-letter</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-16.xhtml#function-char">char</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-symbol-name">symbol-name</a> <span class="syntax-interned-symbol">symbol3</span>)</span> <span class="syntax-number">0</span>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ALL-START-WITH-SAME-LETTER</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">read-new-value</span> <span class="syntax-symbol">()</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"Enter a new value: "</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-multiple-value-list">multiple-value-list</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-3.xhtml#function-eval">eval</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">READ-NEW-VALUE\eject</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">verify-or-fix-perfect-sundae</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">ice-cream</span> <span class="syntax-interned-symbol">sauce</span> <span class="syntax-interned-symbol">topping</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-do">do</a> <span class="syntax-symbol">()</span>
      <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">all-start-with-same-letter</span> <span class="syntax-interned-symbol">ice-cream</span> <span class="syntax-interned-symbol">sauce</span> <span class="syntax-interned-symbol">topping</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a>
       <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">bad-tasting-sundae</span></span>
              <span class="syntax-keyword-symbol">:ice-cream</span> <span class="syntax-interned-symbol">ice-cream</span>
              <span class="syntax-keyword-symbol">:sauce</span> <span class="syntax-interned-symbol">sauce</span>
              <span class="syntax-keyword-symbol">:topping</span> <span class="syntax-interned-symbol">topping</span>)</span>
       <span class="syntax-cons">(<span class="syntax-interned-symbol">use-new-ice-cream</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">new-ice-cream</span>)</span>
         <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Use a new ice cream."</span>
         <span class="syntax-keyword-symbol">:interactive</span> <span class="syntax-interned-symbol">read-new-value</span>  
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">ice-cream</span> <span class="syntax-interned-symbol">new-ice-cream</span>)</span>)</span>
       <span class="syntax-cons">(<span class="syntax-interned-symbol">use-new-sauce</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">new-sauce</span>)</span>
         <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Use a new sauce."</span>
         <span class="syntax-keyword-symbol">:interactive</span> <span class="syntax-interned-symbol">read-new-value</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">sauce</span> <span class="syntax-interned-symbol">new-sauce</span>)</span>)</span>
       <span class="syntax-cons">(<span class="syntax-interned-symbol">use-new-topping</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">new-topping</span>)</span>
         <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Use a new topping."</span>
         <span class="syntax-keyword-symbol">:interactive</span> <span class="syntax-interned-symbol">read-new-value</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">topping</span> <span class="syntax-interned-symbol">new-topping</span>)</span>)</span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-values">values</a> <span class="syntax-interned-symbol">ice-cream</span> <span class="syntax-interned-symbol">sauce</span> <span class="syntax-interned-symbol">topping</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">VERIFY-OR-FIX-PERFECT-SUNDAE</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">verify-or-fix-perfect-sundae</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">vanilla</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">caramel</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">cherry</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: Bad tasting sundae with VANILLA, CARAMEL, and CHERRY.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Use a new ice cream.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Use a new sauce.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  3: Use a new topping.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  4: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Use a new ice cream.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Enter a new ice cream: <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox'chocolate</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">CHOCOLATE</span><span class="syntax-verbatim">,</span> <span class="syntax-interned-symbol">CARAMEL</span><span class="syntax-verbatim">,</span> <span class="syntax-interned-symbol">CHERRY</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-restart-bind">restart-bind</a>, <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a>.<br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> <span class="explicit-italic"> expression</span>
   <span class="syntax-cons">(<span class="explicit-italic"> name1</span> <span class="explicit-italic"> arglist1</span> <span class="syntax-interned-symbol">...\i{options1}...</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> body1</span>)</span>
   <span class="syntax-cons">(<span class="explicit-italic"> name2</span> <span class="explicit-italic"> arglist2</span> <span class="syntax-interned-symbol">...\i{options2}...</span> <span class="syntax-symbol">.</span> <span class="explicit-italic"> body2</span>)</span>)</span>
</span></code></pre>
  is essentially equivalent to<br/><pre><code/></pre><br/>Unnamed restarts are generally only useful interactively
    and an interactive option which has no description is of little value.
    Implementations are encouraged to warn if 
an unnamed restart is used and no report information
    is provided
at compilation    time.  
At runtime, this error might be noticed when entering
      the debugger.  Since signaling an error would probably cause recursive
      entry into the debugger (causing yet another recursive error, etc.) it is
      suggested that the debugger print some indication of such problems when
      they occur but not actually signal errors.<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-interned-symbol">fred</span>)</span>
  <span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">...</span>)</span>
  <span class="syntax-cons">(<span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">...</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math>
<span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a>
    <span class="syntax-cons">(<a class="macro-reference" href="#macro-with-condition-restarts">with-condition-restarts</a> <span class="syntax-interned-symbol">fred</span> 
                             <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span> 
                                   <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">b</span></span>)</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="#function-signal">signal</a> <span class="syntax-interned-symbol">fred</span>)</span>)</span>
  <span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">...</span>)</span>
  <span class="syntax-cons">(<span class="syntax-interned-symbol">b</span> <span class="syntax-interned-symbol">...</span>)</span>)</span>
</span></code></pre>
</dd></dl>
</div><br/> <br/><br/><div class="component" id="function-restart-name"><div class="header"><span class="left"><span class="name" id="function-restart-name">restart-name</span></span><span class="right"><span class="ftype">Function</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">restart-name</span>&nbsp;<span class="lambda-list">restart</span>&nbsp;â†’&nbsp;<span class="return-values">name</span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">restart</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>.<br/><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>Returns the name of the <span class="parameter">restart</span>,
or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> if the <span class="parameter">restart</span> is not named.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> 
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a> <span class="syntax-interned-symbol">for</span> <a class="type-reference" href="#type-restart">restart</a> <span class="syntax-interned-symbol">in</span> <span class="syntax-cons">(<a class="function-reference" href="#function-compute-restarts">compute-restarts</a>)</span>
               <span class="syntax-interned-symbol">collect</span> <span class="syntax-cons">(<a class="function-reference" href="#function-restart-name">restart-name</a> <a class="type-reference" href="#type-restart">restart</a>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">case1</span> <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Return 1."</span> <span class="syntax-number">1</span>)</span>
   <span class="syntax-cons">(<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>   <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Return 2."</span> <span class="syntax-number">2</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">case3</span> <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Return 3."</span> <span class="syntax-number">3</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">case1</span> <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Return 4."</span> <span class="syntax-number">4</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-interned-symbol">CASE1</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-interned-symbol">CASE3</span> <span class="syntax-interned-symbol">CASE1</span> <a class="function-reference" href="#function-abort">abort</a>)</span>
 ;; In the example above the restart named ABORT was not created
 ;; explicitly, but was implicitly supplied by the system.
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-compute-restarts">compute-restarts</a>
<a class="function-reference" href="#function-find-restart">find-restart</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><span class="none">None</span>.<br/></dd></dl></div><br/><br/>
<br/><div class="component" id="macro-with-condition-restarts"><div class="header"><span class="left"><span class="name" id="macro-with-condition-restarts">with-condition-restarts</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/>
<dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">with-condition-restarts</span>&nbsp;<span class="lambda-list">condition-form restarts-form <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">condition-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; <span class="glossary-reference error">glossary:evaluated</span> to produce a <span class="parameter">condition</span>.<br/><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> resulting from the 
		    <a class="glossary-reference" href="chapter-26.xhtml#glossary-evaluation">evaluation</a> of <span class="parameter">condition-form</span>.<br/><span class="parameter">restart-form</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-form">form</a>; <span class="glossary-reference error">glossary:evaluated</span> to produce a <span class="parameter">restart-list</span>.<br/><span class="parameter">restart-list</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-list">list</a> of <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">objects</a> resulting 
		       from the <a class="glossary-reference" href="chapter-26.xhtml#glossary-evaluation">evaluation</a> of <span class="parameter">restart-form</span>.<br/><span class="parameter">forms</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>; evaluated.<br/><span class="parameter">results</span>&mdash;the <span class="glossary-reference error">glossary:values</span> returned by <span class="parameter">forms</span>.<br/></dd></dl><dl><dt class="label">Description</dt><dd>First, the <span class="parameter">condition-form</span> and <span class="parameter">restarts-form</span> are <span class="glossary-reference error">glossary:evaluated</span>
in normal left-to-right order; the <span class="glossary-reference error">glossary:primary values</span> yielded by these
<a class="glossary-reference" href="chapter-26.xhtml#glossary-evaluation">evaluations</a> are respectively called the <span class="parameter">condition</span> 
and the <span class="parameter">restart-list</span>.<br/>Next, the <span class="parameter">forms</span> are <span class="glossary-reference error">glossary:evaluated</span> in a <a class="glossary-reference" href="chapter-26.xhtml#glossary-dynamic environment">dynamic environment</a>
in which each <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> in <span class="parameter">restart-list</span> is associated with
the <span class="parameter">condition</span>.  See <span class="section-reference error">section:AssocRestartWithCond.</span><br/></dd></dl><dl><dt class="label">Examples</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-restart-case">restart-case</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd>Usually this <a class="glossary-reference" href="chapter-26.xhtml#glossary-macro">macro</a> is not used explicitly in code, 
since <a class="macro-reference" href="#macro-restart-case">restart-case</a> handles most of the common cases
in a way that is syntactically more concise.<br/></dd></dl>
</div><br/><br/>
<br/><div class="component" id="macro-with-simple-restart"><div class="header"><span class="left"><span class="name" id="macro-with-simple-restart">with-simple-restart</span></span><span class="right"><span class="ftype">Macro</span></span></div><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">with-simple-restart</span>&nbsp;<span class="lambda-list"><span class="explicit-roman">(</span>name format-control <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">format-argument</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span><span class="explicit-roman">)</span>
		   <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">form</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span>&nbsp;â†’&nbsp;<span class="return-values"><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>{</mo></math><span class="parameter">result</span><math xmlns="http://www.w3.org/1998/Math/MathML"><mo>}</mo></math><span class="explicit-roman">*</span></span></span><br/><br/></dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">name</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-symbol">symbol</a>.<br/><span class="parameter">format-control</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format control">format control</a>.

<span class="parameter">format-argument</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a> (<span class="explicit-italic"> i.e.</span>,  a <a class="glossary-reference" href="chapter-26.xhtml#glossary-format argument">format argument</a>).<br/><span class="parameter">forms</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-implicit progn">implicit progn</a>.<br/><span class="parameter">results</span>&mdash;in the normal situation,
   the <span class="glossary-reference error">glossary:values</span> returned by the <span class="parameter">forms</span>;
   in the exceptional situation where the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> named <span class="parameter">name</span> is invoked,
   two values&mdash;<a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a>.<br/></dd></dl><dl><dt class="label">Description</dt><dd><a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> establishes a restart.  <br/>If the restart designated by <span class="parameter">name</span> is not invoked while executing <span class="parameter">forms</span>,
all values returned by the last of <span class="parameter">forms</span> are returned. 
If the restart designated by <span class="parameter">name</span> is invoked,
control is transferred to <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a>,
which returns two values, <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> and <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a>.<br/>If <span class="parameter">name</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, an anonymous restart is established.<br/>The <span class="parameter">format-control</span> and <span class="parameter">format-arguments</span> are used 
report the <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">read-eval-print-loop</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">level</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <span class="syntax-cons">(<a class="function-reference" href="#function-abort">abort</a> <span class="syntax-string">"Exit command level ~D."</span> <span class="syntax-interned-symbol">level</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-loop">loop</a>
       <span class="syntax-cons">(<a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <span class="syntax-cons">(<a class="function-reference" href="#function-abort">abort</a> <span class="syntax-string">"Return to command level ~D."</span> <span class="syntax-interned-symbol">level</span>)</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">form</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-prog2">prog2</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-23.xhtml#function-read">read</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-21.xhtml#function-fresh-line">fresh-line</a>)</span>)</span>)</span>)</span>
           <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-prin1">prin1</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-3.xhtml#function-eval">eval</a> <span class="syntax-interned-symbol">form</span>)</span>)</span>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">READ-EVAL-PRINT-LOOP</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">read-eval-print-loop</span> <span class="syntax-number">1</span>)</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span> <span class="syntax-number">3</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: The argument, A, to the function + was of the wrong type.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>        The function expected a number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use this time.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to command level 1.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  3: Exit command level 1.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  4: Return to Lisp Toplevel.
</span></code></pre><br/><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">compute-fixnum-power-of-2</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <span class="syntax-cons">(<a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"Give up on computing 2^~D."</span> <span class="syntax-interned-symbol">x</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">result</span> <span class="syntax-number">1</span>)</span>)</span>
       <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-dotimes">dotimes</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">i</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">result</span>)</span>
         <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">result</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-*">*</a> <span class="syntax-number">2</span> <span class="syntax-interned-symbol">result</span>)</span>)</span>
         <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-unless">unless</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">fixnump</span> <span class="syntax-interned-symbol">result</span>)</span>
           <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"Power of 2 is too large."</span>)</span>)</span>)</span>)</span>)</span>)</span>
<span class="syntax-interned-symbol">COMPUTE-FIXNUM-POWER-OF-2</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">compute-power-of-2</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-or">or</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">compute-fixnum-power-of-2</span> <span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">something</span></span> <span class="syntax-interned-symbol">big</span>)</span>)</span>
<span class="syntax-interned-symbol">COMPUTE-POWER-OF-2</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">compute-power-of-2</span> <span class="syntax-number">10</span>)</span>
<span class="syntax-number">1024</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">compute-power-of-2</span> <span class="syntax-number">10000</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: Power of 2 is too large.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Give up on computing 2^10000.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to Lisp Toplevel
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox:continue 1</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">SOMETHING-BIG</span>
</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd><span class="none">None</span>.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="macro-reference" href="#macro-restart-case">restart-case</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> is shorthand for one of the most
common uses of <a class="macro-reference" href="#macro-restart-case">restart-case</a>.<br/><a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> could be defined by:<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a> <a class="macro-reference" href="#macro-with-simple-restart">with-simple-restart</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-restart-name">restart-name</a> <span class="syntax-interned-symbol">format-control</span>
                                             <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">format-arguments</span>)</span>
                               <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-body">&amp;BODY</a> <span class="syntax-interned-symbol">forms</span>)</span>
  <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-progn">progn</a> <span class="syntax-unquote">,@<span class="syntax-interned-symbol">forms</span></span>)</span>
     <span class="syntax-cons">(<span class="syntax-unquote">,<a class="function-reference" href="#function-restart-name">restart-name</a></span> <span class="syntax-symbol">()</span>
         <span class="syntax-keyword-symbol">:report</span> <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a>)</span>
                   <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="type-reference" href="chapter-21.xhtml#type-stream">stream</a> <span class="syntax-unquote">,<span class="syntax-interned-symbol">format-control</span></span> <span class="syntax-unquote">,@<span class="syntax-interned-symbol">format-arguments</span></span>)</span>)</span>
        <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-values">values</a> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>)</span>)</span></span>)</span>
</span></code></pre>
Because the second return value is <a class="symbol-reference" href="chapter-5.xhtml#symbol-t">t</a> in the exceptional case,
it is common (but not required) to arrange for the second return value
in the normal case to be missing or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a> so that the two situations
can be distinguished.<br/></dd></dl></div><br/><br/><br/><br/><div class="component" id="restart-abort"><div class="header"><span class="left"><span class="name" id="restart-abort">abort</span></span><span class="right"><span class="ftype">Restart</span></span></div><br/><dl><dt class="label">Data Arguments Required</dt><dd>None.<br/></dd></dl><dl><dt class="label">Description</dt><dd>The intent of the <a class="symbol-reference" href="#symbol-abort">abort</a> restart is to allow return to the
innermost ``command level.''  Implementors are encouraged to make 
sure that there is always a restart named <a class="function-reference" href="#function-abort">abort</a> 
around any user code so that user code can call <a class="function-reference" href="#function-abort">abort</a> 
at any time and expect something reasonable to happen;
exactly what the reasonable thing is may vary somewhat.  Typically,
in an interactive listener, the invocation of <a class="function-reference" href="#function-abort">abort</a>
returns to the <a class="glossary-reference" href="chapter-26.xhtml#glossary-lisp reader">Lisp reader</a> phase of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-lisp read-eval-print loop">Lisp read-eval-print loop</a>,
though in some batch or multi-processing
situations there may be situations in which having it kill the running 
process is more appropriate.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="function-reference" href="#function-abort">abort</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>)<br/></dd></dl></div><br/>
<br/><div class="component" id="restart-continue"><div class="header"><span class="left"><span class="name" id="restart-continue">continue</span></span><span class="right"><span class="ftype">Restart</span></span></div><br/><dl><dt class="label">Data Arguments Required</dt><dd>None.<br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is generally part of protocols where there is
  a single ``obvious'' way to continue, such as in 
<a class="function-reference" href="#function-break">break</a> and <a class="function-reference" href="#function-cerror">cerror</a>.  Some
  user-defined protocols may also wish to incorporate it for similar reasons.
  In general, however, it is more reliable to design a special purpose restart
  with a name that more directly suits the particular application.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
  <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span>
                            <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-continue">continue</a></span> <span class="syntax-interned-symbol">c</span>)</span>)</span>)</span>
                              <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span>)</span></span>)</span>)</span>
    <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-cond">cond</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-floatp">floatp</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
           <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Try floating it."</span> <span class="syntax-string">"~D is not a float."</span> <span class="syntax-interned-symbol">x</span>)</span>
           <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-float">float</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>
          <span class="syntax-cons">(<a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-interned-symbol">x</span>)</span>)</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3.0</span>
</span></code></pre>   <br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="function-reference" href="#function-continue">continue</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>),
<a class="macro-reference" href="#macro-assert">assert</a>,
<a class="function-reference" href="#function-cerror">cerror</a><br/></dd></dl></div><br/>
<br/><div class="component" id="restart-muffle-warning"><div class="header"><span class="left"><span class="name" id="restart-muffle-warning">muffle-warning</span></span><span class="right"><span class="ftype">Restart</span></span></div><br/><dl><dt class="label">Data Arguments Required</dt><dd>None.<br/></dd></dl><dl><dt class="label">Description</dt><dd>This <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is established by <a class="function-reference" href="#function-warn">warn</a> so that <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a>
of <a class="type-reference" href="#type-warning">warning</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a> have a way to tell <a class="function-reference" href="#function-warn">warn</a> 
that a warning has already been dealt with and that no further action is warranted.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"> <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*all-quiet*</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">*ALL-QUIET*</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*saved-warnings*</span> <span class="syntax-quote">'<span class="syntax-symbol">()</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">*SAVED-WARNINGS*</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">quiet-warning-handler</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-interned-symbol">*all-quiet*</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-muffle-warning">muffle-warning</a></span> <span class="syntax-interned-symbol">c</span>)</span>)</span>)</span>
       <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-interned-symbol">r</span> 
         <span class="syntax-cons">(<a class="macro-reference" href="chapter-14.xhtml#macro-push">push</a> <span class="syntax-interned-symbol">c</span> <span class="syntax-interned-symbol">*saved-warnings*</span>)</span>
         <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">CUSTOM-WARNING-HANDLER</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">with-quiet-warnings</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-body">&amp;BODY</a> <span class="syntax-interned-symbol">forms</span>)</span>
   <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">*all-quiet*</span> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">*saved-warnings*</span> <span class="syntax-quote">'<span class="syntax-symbol">()</span></span>)</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="#type-warning">warning</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">quiet-warning-handler</span></span>)</span>)</span>
        <span class="syntax-unquote">,@<span class="syntax-interned-symbol">forms</span></span>
        <span class="syntax-interned-symbol">*saved-warnings*</span>)</span>)</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">WITH-QUIET-WARNINGS</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">saved</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">with-quiet-warnings</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-warn">warn</a> <span class="syntax-string">"Situation #1."</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">*all-quiet*</span> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="#function-warn">warn</a> <span class="syntax-string">"Situation #2."</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-warn">warn</a> <span class="syntax-string">"Situation #3."</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Warning: Situation #2.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-cons">(<span class="syntax-verbatim">#&lt;SIMPLE-WARNING 42744421&gt;</span> <span class="syntax-verbatim">#&lt;SIMPLE-WARNING 42744365&gt;</span>)</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">s</span> <span class="syntax-interned-symbol">saved</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~A~%"</span> <span class="syntax-interned-symbol">s</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Situation #3.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Situation #1.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <a class="section-reference" href="chapter-1.xhtml#section-NIL">NIL</a>
</span></code></pre><br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="function-reference" href="#function-muffle-warning">muffle-warning</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>),
<a class="function-reference" href="#function-warn">warn</a><br/></dd></dl></div><br/>
<br/><div class="component" id="restart-store-value"><div class="header"><span class="left"><span class="name" id="restart-store-value">store-value</span></span><span class="right"><span class="ftype">Restart</span></span></div><br/><dl><dt class="label">Data Arguments Required</dt><dd>a value to use instead (on an ongoing basis).<br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="symbol-reference" href="#symbol-store-value">store-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is generally used by <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a>
trying to recover from errors of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> such as <a class="type-reference" href="#type-cell-error">cell-error</a> 
or <a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a>, which may wish to supply a replacement datum to
be stored permanently.<br/></dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">type-error-auto-coerce</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span>
  <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-typep">typep</a> <span class="syntax-interned-symbol">c</span> <span class="syntax-quote">'<a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a></span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-store-value">store-value</a></span> <span class="syntax-interned-symbol">c</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-case">handler-case</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">v</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-coerce">coerce</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-type-error-datum">type-error-datum</a> <span class="syntax-interned-symbol">c</span>)</span>
                                     <span class="syntax-cons">(<a class="function-reference" href="chapter-4.xhtml#function-type-error-expected-type">type-error-expected-type</a> <span class="syntax-interned-symbol">c</span>)</span>)</span>)</span>)</span>
                      <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span> <span class="syntax-interned-symbol">v</span>)</span>)</span>
        <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-symbol">()</span>)</span>)</span>)</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">TYPE-ERROR-AUTO-COERCE</span>
<span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
  <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="chapter-4.xhtml#type-type-error">type-error</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">type-error-auto-coerce</span></span>)</span>)</span>
    <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <span class="syntax-interned-symbol">x</span> <a class="function-reference" href="chapter-12.xhtml#function-float">float</a>)</span>
    <span class="syntax-interned-symbol">x</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3.0</span>
</span></code></pre>   <br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="function-reference" href="#function-store-value">store-value</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>),
<a class="macro-reference" href="chapter-5.xhtml#macro-ccase">ccase</a>,
<a class="macro-reference" href="#macro-check-type">check-type</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-ctypecase">ctypecase</a>,
<a class="function-reference" href="#function-use-value">use-value</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>)<br/></dd></dl></div><br/><br/><br/><div class="component" id="restart-use-value"><div class="header"><span class="left"><span class="name" id="restart-use-value">use-value</span></span><span class="right"><span class="ftype">Restart</span></span></div><br/><dl><dt class="label">Data Arguments Required</dt><dd>a value to use instead (once).<br/></dd></dl><dl><dt class="label">Description</dt><dd>The <a class="symbol-reference" href="#symbol-use-value">use-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is generally used by <a class="glossary-reference" href="chapter-26.xhtml#glossary-handler">handlers</a> trying 
to recover from errors of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">types</a> such as <a class="type-reference" href="#type-cell-error">cell-error</a>, 
where the handler may wish to supply a replacement datum for one-time use.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="function-reference" href="#function-use-value">use-value</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a>),
<a class="function-reference" href="#function-store-value">store-value</a> (<a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> and <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>)<br/></dd></dl></div><br/>
<br/><div class="component" id="function-abort"><div class="header"><span class="left"><span class="name" id="function-abort">abort</span>, <span class="name" id="function-continue">continue</span>, <span class="name" id="function-muffle-warning">muffle-warning</span>, <span class="name" id="function-store-value">store-value</span>, <span class="name" id="function-use-value">use-value</span></span><span class="right"><span class="ftype">Function</span></span></div>
<a id="symbol-abort"></a><a id="symbol-continue"></a><a id="symbol-muffle-warning"></a><a id="symbol-store-value"></a><a id="symbol-use-value"></a><br/><dl><dt class="label">Syntax</dt><dd><span class="function-definition"><span class="name">abort</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;|</span><br/><span class="function-definition"><span class="name">continue</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/>
<span class="function-definition"><span class="name">muffle-warning</span>&nbsp;<span class="lambda-list"><span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;|</span><br/><span class="function-definition"><span class="name">store-value</span>&nbsp;<span class="lambda-list">value <span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/>
<span class="function-definition"><span class="name">use-value</span>&nbsp;<span class="lambda-list">value <span class="lambda-list-keyword">&amp;optional</span> condition</span>&nbsp;â†’&nbsp;<span class="return-values"><a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a></span></span><br/>
</dd></dl><dl><dt class="label">Arguments and Values</dt><dd><span class="parameter">value</span>&mdash;an <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>.<br/><span class="parameter">condition</span>&mdash;a <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-object">object</a>, or <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>.

</dd></dl><dl><dt class="label">Description</dt><dd>Transfers control to the most recently established <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable restart">applicable restart</a>
having the same name as the function.  That is,
  the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-abort">abort</a>    searches for an <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable">applicable</a> <a class="symbol-reference" href="#symbol-abort">abort</a>    <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>, 
  the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-continue">continue</a> searches for an <a class="glossary-reference" href="chapter-26.xhtml#glossary-applicable">applicable</a> <a class="symbol-reference" href="#symbol-continue">continue</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>,
and so on.<br/>If no such <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> exists, 
the functions
     <a class="function-reference" href="#function-continue">continue</a>,
     <a class="function-reference" href="#function-store-value">store-value</a>, 
 and <a class="function-reference" href="#function-use-value">use-value</a>
return <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, and 
the functions
     <a class="function-reference" href="#function-abort">abort</a>
 and <a class="function-reference" href="#function-muffle-warning">muffle-warning</a>
signal an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a>.<br/>When <span class="parameter">condition</span> is <a class="glossary-reference" href="chapter-26.xhtml#glossary-non-nil">non-nil</a>,
only those <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are considered that are 
  either explicitly associated with that <span class="parameter">condition</span>,
      or not associated with any <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">condition</a>;
that is, the excluded <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are 
those that are associated with a non-empty set of <a class="glossary-reference" href="chapter-26.xhtml#glossary-condition">conditions</a>
of which the given <span class="parameter">condition</span> is not an <a class="glossary-reference" href="chapter-26.xhtml#glossary-element">element</a>.
If <span class="parameter">condition</span> is <a class="symbol-reference" href="chapter-1.xhtml#symbol-nil">nil</a>, all <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restarts</a> are considered.

</dd></dl><dl><dt class="label">Examples</dt><dd><pre><code><span class="syntax-root">;;; Example of the ABORT retart

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">abort-on-error</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-body">&amp;BODY</a> <span class="syntax-interned-symbol">forms</span>)</span>
   <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<a class="function-reference" href="#function-abort">abort</a></span>)</span>)</span>
      <span class="syntax-unquote">,@<span class="syntax-interned-symbol">forms</span></span>)</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ABORT-ON-ERROR</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">abort-on-error</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-+">+</a> <span class="syntax-number">3</span> <span class="syntax-number">5</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">8</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">abort-on-error</span> <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-string">"You lose."</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Returned to Lisp Top Level.

;;; Example of the CONTINUE restart

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">n</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-minusp">minusp</a> <span class="syntax-interned-symbol">n</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">n</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function--">-</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-cerror">cerror</a> <span class="syntax-string">"Return sqrt(~D) instead."</span> <span class="syntax-string">"Tried to take sqrt(-~D)."</span> <span class="syntax-interned-symbol">n</span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-interned-symbol">n</span>)</span>)</span>

 <span class="syntax-cons">(<span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-number">4</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">2</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-number">-9</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: Tried to take sqrt(-9).
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number:
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Return sqrt(9) instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(continue)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Return sqrt(9) instead.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3</span>
 
 <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="#function-continue">continue</a>)</span>)</span></span>)</span>)</span>
   <span class="syntax-cons">(<span class="syntax-interned-symbol">real-sqrt</span> <span class="syntax-number">-9</span>)</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">3</span>

;;; Example of the MUFFLE-WARNING restart

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">count-down</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="chapter-6.xhtml#macro-do">do</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">counter</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-1-">1-</a> <span class="syntax-interned-symbol">counter</span>)</span>)</span>)</span>
       <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">counter</span> <span class="syntax-number">0</span>)</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">done</span></span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-when">when</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">counter</span> <span class="syntax-number">1</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="#function-warn">warn</a> <span class="syntax-string">"Almost done"</span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;~D~%"</span> <span class="syntax-interned-symbol">counter</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">COUNT-DOWN</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">count-down</span> <span class="syntax-number">3</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 3
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 2
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Warning: Almost done
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">DONE</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">ignore-warnings-while-counting</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">x</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="type-reference" href="#type-warning">warning</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">ignore-warning</span></span>)</span>)</span>
     <span class="syntax-cons">(<span class="syntax-interned-symbol">count-down</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">IGNORE-WARNINGS-WHILE-COUNTING</span>
 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">ignore-warning</span> <span class="syntax-cons">(<a class="type-reference" href="#type-condition">condition</a>)</span>
   <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <a class="type-reference" href="#type-condition">condition</a>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="#function-muffle-warning">muffle-warning</a>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">IGNORE-WARNING</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">ignore-warnings-while-counting</span> <span class="syntax-number">3</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 3
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 2
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> 1
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">DONE</span>

;;; Example of the STORE-VALUE and USE-VALUE restarts

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">careful-symbol-value</span> <span class="syntax-cons">(<a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-check-type">check-type</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-restart-case">restart-case</a> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-boundp">boundp</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span>
                     <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-return-from">return-from</a> <span class="syntax-interned-symbol">careful-symbol-value</span> 
                                  <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-symbol-value">symbol-value</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span>)</span>
                     <span class="syntax-cons">(<a class="function-reference" href="#function-error">error</a> <span class="syntax-quote">'<a class="type-reference" href="chapter-10.xhtml#type-unbound-variable">unbound-variable</a></span>
                            <span class="syntax-keyword-symbol">:name</span> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-use-value">use-value</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">value</span>)</span>
       <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Specify a value to use this time."</span>
       <span class="syntax-interned-symbol">value</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="#function-store-value">store-value</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">value</span>)</span>
       <span class="syntax-keyword-symbol">:report</span> <span class="syntax-string">"Specify a value to store and use in the future."</span>
       <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-symbol-value">symbol-value</a> <a class="symbol-reference" href="chapter-2.xhtml#symbol-symbol">symbol</a>)</span> <span class="syntax-interned-symbol">value</span>)</span>)</span>)</span>)</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-number">1234</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">1234</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">careful-symbol-value</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">1234</span>
 <span class="syntax-cons">(<a class="function-reference" href="chapter-10.xhtml#function-makunbound">makunbound</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">A</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">careful-symbol-value</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: A is not bound.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  1: Specify a value to use this time.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  2: Specify a value to store and use in the future.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>  3: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(use-value 12)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">12</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">careful-symbol-value</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Error: A is not bound.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> To continue, type :CONTINUE followed by an option number.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>   1: Specify a value to use this time.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>   2: Specify a value to store and use in the future.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math>   3: Return to Lisp Toplevel.
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â–·</mi></math> Debug&gt; <math xmlns="http://www.w3.org/1998/Math/MathML"><span style="text-decoration: underline;">\hbox(store-value 24)</span></math>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">24</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">careful-symbol-value</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">a</span></span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">24</span>

;;; Example of the USE-VALUE restart

 <span class="syntax-cons">(<a class="macro-reference" href="chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">add-symbols-with-default</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">default</span> <a class="lambda-list-keyword-reference" href="chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">symbols</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">sys:unbound-symbol</span>
                    <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">c</span>)</span>
                        <span class="syntax-cons">(<a class="symbol-reference" href="chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">c</span>)</span>)</span> 
                        <span class="syntax-cons">(<a class="function-reference" href="#function-use-value">use-value</a> <span class="syntax-interned-symbol">default</span>)</span>)</span></span>)</span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="chapter-5.xhtml#function-apply">apply</a> <span class="syntax-function">#'<a class="function-reference" href="chapter-12.xhtml#function-+">+</a></span> <span class="syntax-cons">(<a class="function-reference" href="chapter-14.xhtml#function-mapcar">mapcar</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">careful-symbol-value</span></span> <span class="syntax-interned-symbol">symbols</span>)</span>)</span>)</span>)</span>
<math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-interned-symbol">ADD-SYMBOLS-WITH-DEFAULT</span>
 <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">1</span> <span class="syntax-interned-symbol">y</span> <span class="syntax-number">2</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">2</span>
 <span class="syntax-cons">(<span class="syntax-interned-symbol">add-symbols-with-default</span> <span class="syntax-number">3</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">x</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">y</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">z</span></span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mi>â†’</mi></math> <span class="syntax-number">6</span>


</span></code></pre><br/></dd></dl><dl><dt class="label">Side Effects</dt><dd>A transfer of control may occur if an appropriate <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> is available,
or (in the case of the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-abort">abort</a> or the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-muffle-warning">muffle-warning</a>)
execution may be stopped.<br/></dd></dl><dl><dt class="label">Affected By</dt><dd>Each of these functions can be affected by 
the presence of a <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> having the same name.<br/></dd></dl><dl><dt class="label">Exceptional Situations</dt><dd>If an appropriate <a class="symbol-reference" href="#symbol-abort">abort</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>
 is not available for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-abort">abort</a>,
or an appropriate <a class="symbol-reference" href="#symbol-muffle-warning">muffle-warning</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a> 
 is not available for the <a class="glossary-reference" href="chapter-26.xhtml#glossary-function">function</a> <a class="function-reference" href="#function-muffle-warning">muffle-warning</a>,
an error of <a class="glossary-reference" href="chapter-26.xhtml#glossary-type">type</a> <a class="type-reference" href="chapter-5.xhtml#type-control-error">control-error</a> is signaled.<br/></dd></dl><dl><dt class="label">See Also</dt><dd><a class="function-reference" href="#function-invoke-restart">invoke-restart</a>,
<a class="section-reference" href="#section-Restarts">Restarts</a>,
<a class="section-reference" href="#section-InterfacesToRestarts">Interfaces to Restarts</a>,
<a class="macro-reference" href="#macro-assert">assert</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-ccase">ccase</a>,
<a class="function-reference" href="#function-cerror">cerror</a>,
<a class="macro-reference" href="#macro-check-type">check-type</a>,
<a class="macro-reference" href="chapter-5.xhtml#macro-ctypecase">ctypecase</a>,
<a class="function-reference" href="#function-use-value">use-value</a>,
<a class="function-reference" href="#function-warn">warn</a><br/></dd></dl><dl><dt class="label">Notes</dt><dd><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="#function-abort">abort</a> <a class="type-reference" href="#type-condition">condition</a>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-abort">abort</a></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-muffle-warning">muffle-warning</a>)</span>  <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-muffle-warning">muffle-warning</a></span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-continue">continue</a>)</span>        <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-continue">continue</a></span>)</span>)</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span>)</span>)</span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-use-value">use-value</a> <span class="parameter">x</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-use-value">use-value</a></span>)</span>)</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span> <span class="parameter">x</span>)</span>)</span>)</span>
<span class="syntax-cons">(<a class="function-reference" href="#function-store-value">store-value</a> <span class="syntax-interned-symbol">x</span>)</span> <math xmlns="http://www.w3.org/1998/Math/MathML"><mo>â‰¡</mo></math> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-find-restart">find-restart</a> <span class="syntax-quote">'<a class="function-reference" href="#function-store-value">store-value</a></span>)</span>)</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">r</span> <span class="syntax-cons">(<a class="function-reference" href="#function-invoke-restart">invoke-restart</a> <span class="syntax-interned-symbol">r</span> <span class="parameter">x</span>)</span>)</span>)</span>
</span></code></pre><br/>No functions defined in this specification are required to provide
a <a class="symbol-reference" href="#symbol-use-value">use-value</a> <a class="glossary-reference" href="chapter-26.xhtml#glossary-restart">restart</a>.<br/></dd></dl></div><br/>
</section></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>