<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” THE-VALUES</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">THE-VALUES</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-the-values:return-number-received">Proposal RETURN-NUMBER-RECEIVED</a><ol> <li><a href="#section-Rationale for proposal RETURN-NUMBER-RECEIVED">Rationale for proposal RETURN-NUMBER-RECEIVED</a><ol> </ol></li></ol></li><li><a href="#issue-the-values:strict-matching">Proposal STRICT-MATCHING</a><ol> <li><a href="#section-Rationale for proposal STRICT-MATCHING">Rationale for proposal STRICT-MATCHING</a><ol> </ol></li></ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Performance impact">Performance impact</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue THE-VALUES [NIL] [CLARIFICATION]</h1><h2>Related issues</h2><ul><li><a class="issue-reference" href="../issues/the-ambiguity.xhtml#issue-the-ambiguity">THE-AMBIGUITY</a></li></ul><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> special form, <a class="function-reference" href="../chapter-5.xhtml#function-values">VALUES</a> type specifier </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>v1, 24 Feb 1991, Sandra Loosemore </section><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>X3J13 passed v1:RETURN-NUMBER-RECEIVED on vote of 10-1, Mar-91 </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>  Are the following forms valid, and if so how many values are returned    in each case? <br/>  #1: <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-truncate">truncate</a> <span class="syntax-number">7</span> <span class="syntax-number">3</span>)</span>
</span></code>   #2: <code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-truncate">truncate</a> <span class="syntax-number">7</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code>   #3: <code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-values">values</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-truncate">truncate</a> <span class="syntax-number">7</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code>   #4: <code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-values">values</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-truncate">truncate</a> <span class="syntax-number">7</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code>   #5: <code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-values">values</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a> <a class="type-reference" href="../chapter-12.xhtml#type-integer">integer</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-truncate">truncate</a> <span class="syntax-number">7</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code> <br/>There are two proposals, <a class="proposal-reference" href="#issue-the-values:return-number-received">RETURN-NUMBER-RECEIVED</a> and <a class="proposal-reference" href="#issue-the-values:strict-matching">STRICT-MATCHING</a>. <br/></section><section class="status-passed proposal" id="issue-the-values:return-number-received"><h2 class="section-title">Proposal RETURN-NUMBER-RECEIVED</h2><ol><li> Clarify that the <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> special form returns the exact values as   its subform. <br/></li><li> Clarify that it is not an error if the subform returns more values   than what is specified by the type specifier, provided that the  values for which types are declared are indeed of those types.  (In particular, if the type specifier is not a <a class="function-reference" href="../chapter-5.xhtml#function-values">VALUES</a> type   specifier, multiple values may still be returned.) <br/></li><li> Clarify that it is not an error if the subform returns fewer values  than what is specified by the type specifier.  Missing values are  treated as <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> for the purposes of checking their types. <br/></li></ol><section id="section-Rationale for proposal RETURN-NUMBER-RECEIVED" class="section"><h2 class="section-title">Rationale for proposal RETURN-NUMBER-RECEIVED</h2>  Point by point, <br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">1</span>)</span>
</span></code> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> is supposed to act purely as a declaration.  It should not       change the number of values that are returned by its subform. <br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">2</span>)</span>
</span></code> This is consistent with the way extra values are simply ignored       by <a class="macro-reference" href="../chapter-5.xhtml#macro-multiple-value-bind">MULTIPLE-VALUE-BIND</a> and friends. <br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">3</span>)</span>
</span></code> This is consistent with the way missing values are treated as <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>       by <a class="macro-reference" href="../chapter-5.xhtml#macro-multiple-value-bind">MULTIPLE-VALUE-BIND</a> and friends. <br/></section></section><section class="status-passed proposal" id="issue-the-values:strict-matching"><h2 class="section-title">Proposal STRICT-MATCHING</h2><ol><li> Clarify that the <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> special form returns the exact values as   its subform. <br/></li><li> Clarify that it is an error if the number and syntax of values   returned by the subform do not match the given type specifier  exactly.  In particular, if the type specifier is not a <a class="function-reference" href="../chapter-5.xhtml#function-values">VALUES</a>  type specifier then only a single value may be returned. <br/></li></ol><section id="section-Rationale for proposal STRICT-MATCHING" class="section"><h2 class="section-title">Rationale for proposal STRICT-MATCHING</h2>  Point by point, <br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">1</span>)</span>
</span></code> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> is supposed to act purely as a declaration.  It should not       change the number of values that are returned by its subform. <br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">2</span>)</span>
</span></code> This is consistent with the description of the <a class="function-reference" href="../chapter-5.xhtml#function-values">VALUES</a> type        specifier as specifying the arguments of a function which could       capture the values via <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-multiple-value-call">MULTIPLE-VALUE-CALL</a>.  Since argument       mismatches are clearly "is an error" situations, this should be       too.  This is also apparently closer to current practice than       proposal <a class="proposal-reference" href="#issue-the-values:return-number-received">RETURN-NUMBER-RECEIVED</a>. <br/></section></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  Under proposal <a class="proposal-reference" href="#issue-the-values:return-number-received">RETURN-NUMBER-RECEIVED</a>, all of the examples given in <br/>  the problem description section are valid and return the values 2 and 1.<br/><br/>  Under proposal <a class="proposal-reference" href="#issue-the-values:strict-matching">STRICT-MATCHING</a>, tests 2, 3, and 5 are in error.  Tests<br/>  1 and 4 are valid and return the values 2 and 1.<br/><br/></pre></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Lucid <a class="package-reference" href="../chapter-11.xhtml#package-cl">CL</a> version 4.0 signals an error in cases 3 and 5 <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">at</span> <span class="syntax-interned-symbol">least</span> <span class="syntax-interned-symbol">in</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
  <span class="syntax-interned-symbol">interpreter</span>)</span>
</span></code></pre>.  It returns the values 2 and 1 in case 2. <br/>  Allegro <a class="package-reference" href="../chapter-11.xhtml#package-cl">CL</a> version 3.1 signals an error in cases 2, 3, and 5. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Probably small.  Neither proposal requires checking to be performed in   any situation.  However under proposal <a class="proposal-reference" href="#issue-the-values:return-number-received">RETURN-NUMBER-RECEIVED</a>, some    implementations will have to be changed to not do some checks they    currently do. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Users may find the stricter error checking permitted by proposal    <a class="proposal-reference" href="#issue-the-values:strict-matching">STRICT-MATCHING</a> helpful.  However, if implementations that currently   do not check these errors begin to do so, some programs that currently   work in those implementations to stop working. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>  Confusion about what the <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> type specifier really means. <br/></section><section id="section-Performance impact" class="section"><h2 class="section-title">Performance impact</h2>  Probably small, but proposal <a class="proposal-reference" href="#issue-the-values:strict-matching">STRICT-MATCHING</a> might permit compilers   to be more aggressive about some kinds of type and multiple-value   optimizations. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  The cost of non-adoption is avoided. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>  Seems to depend on who you talk to.  In the best of all possible   worlds, <a class="macro-reference" href="../chapter-5.xhtml#macro-multiple-value-bind">MULTIPLE-VALUE-BIND</a> and friends would have ordinary lambda-list   syntax and follow the same rules as for ordinary lambda-binding, so there    wouldn't be the an inconsistency with <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-multiple-value-call">MULTIPLE-VALUE-CALL</a> to have to   resolve one way or the other. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  This issue was discussed on the <a class="package-reference" href="../chapter-1.xhtml#package-common-lisp">common-lisp</a> mailing list some time ago,   but never written up.  Here's the last message from that discussion: <br/>    Date: Thu, 20 Apr 1989 17:53 EDT     From: Kent M Pitman &lt;KMP@STONY-BROOK.SCRC.Symbolics.COM&gt; <br/>        Date: Thu, 20 Apr 89 16:59:15 EDT         From: Guy Steele &lt;gls@Think.COM&gt;            ...            PROPOSAL: <br/>           What it boils down to, is that <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> should check only as many types            as requested <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">pass</span> <span class="syntax-interned-symbol">back</span> <span class="syntax-interned-symbol">only</span> <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">many</span>)</span>
</span></code>. <br/>        No, this is not cool.  <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">THE</a> is supposed to act purely as a declaration,         but you are changing it to require it to pass on only as many values         as the type specifer indicates.  This could change the semantics of         a suitably devious program. <br/>        Better to say that it checks as many types as requsted, but passes on         exactly the values it receives.         &ndash;Guy <br/>    Even though I agree with your position, I think it's worth our writing up     a clarification issue to make sure we're all agreed and that it's 100%      clear in the ANSI spec. &mdash;&mdash;<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>