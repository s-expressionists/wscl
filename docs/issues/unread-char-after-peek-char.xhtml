<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” UNREAD-CHAR-AFTER-PEEK-CHAR</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">UNREAD-CHAR-AFTER-PEEK-CHAR</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-unread-char-after-peek-char:dont-allow">Proposal DONT-ALLOW</a><ol> </ol></li><li><a href="#section-Example">Example</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue UNREAD-CHAR-AFTER-PEEK-CHAR [NIL] [CLARIFICATION]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>pp 379, 380 of CLtL </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1 by Doug Cutting &lt;Cutting.PA@Xerox.COM&gt; on July 29, 1988 Version 2 by Masinter  2-Dec-88 </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2><a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> are very similar mechanisms.  The description of <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> in CLtL even states that "it is as if one had called <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> and then <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> in succession."  But while CLtL prohibits calling <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> twice in succession it does not prohibit calling <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> after <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>. The obvious implementation of <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">one-character</span> <span class="syntax-interned-symbol">buffer</span>)</span>
</span></code> will not work unless this prohibition is present. <br/></section><section class="status-passed proposal" id="issue-unread-char-after-peek-char:dont-allow"><h2 class="section-title">Proposal DONT-ALLOW</h2>   Rewrite the specification so that it is clear that doing either a    <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> or <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> `commits' all previous characters. <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>    on any character preceding that which is seen by the <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> (including    those passed over by <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> when `seeking' with a <a class="glossary-reference" href="../chapter-26.xhtml#glossary-non-nil">non-nil</a> first    argument) is not specified. <br/>   In particular, the results of calling  <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> after <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>    is unspecified. <br/></section><section id="section-Example" class="section"><h2 class="section-title">Example</h2><pre>   <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">test</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-cons">(<a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a> <a class="variable-reference" href="../chapter-21.xhtml#variable-*standard-input*">*standard-input*</a>)</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let*">let*</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">char1a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a>)</span>)</span>	
	    <span class="syntax-cons">(<span class="syntax-interned-symbol">char2a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a>)</span>)</span>
	    <span class="syntax-cons">(<span class="syntax-interned-symbol">char1b</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-progn">progn</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> <span class="syntax-interned-symbol">char1a</span> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a>)</span>
			   <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a>)</span>)</span>)</span>
	    <span class="syntax-cons">(<span class="syntax-interned-symbol">char2b</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a>)</span>)</span>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-interned-symbol">char1a</span> <span class="syntax-interned-symbol">char2a</span> <span class="syntax-interned-symbol">char1b</span> <span class="syntax-interned-symbol">char2b</span>)</span>)</span>)</span>
</span></code></pre><br/><br/>This is not legal, since the <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> for char2a "commits"<br/>the character read by char1a, and so the <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> is not legal.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2><a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> provide equivalent functionality and it is thus reasonable for an implementation to implement them in terms of the same mechanism. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>In Xerox Common Lisp, different <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">non-random-access</span>)</span>
</span></code> stream types behave differently. One, <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">TCP/FTP</span>)</span>
</span></code> handled this correctly, while another did not. <br/>In Symbolics Genera, for the Example above: <br/>     <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">test</span>)</span>
</span></code>ab      <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-character">#\a</span> <span class="syntax-character">#\b</span> <span class="syntax-character">#\a</span> <span class="syntax-character">#\b</span>)</span>
</span></code> <br/>     <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-21.xhtml#macro-with-input-from-string">with-input-from-string</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">s</span> <span class="syntax-string">"abc"</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">test</span> <span class="syntax-interned-symbol">s</span>)</span>)</span>
</span></code>      <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-character">#\a</span> <span class="syntax-character">#\b</span> <span class="syntax-character">#\a</span> <span class="syntax-character">#\b</span>)</span>
</span></code> <br/>     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-progn">progn</a> <span class="syntax-cons">(<a class="macro-reference" href="../chapter-21.xhtml#macro-with-open-file">with-open-file</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">s</span> <span class="syntax-string">"foo.output"</span> <span class="syntax-keyword-symbol">:direction</span> <span class="syntax-keyword-symbol">:output</span>)</span>
	      <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-write-string">write-string</a> <span class="syntax-string">"abc"</span> <span class="syntax-interned-symbol">s</span>)</span>)</span>
            <span class="syntax-cons">(<a class="macro-reference" href="../chapter-21.xhtml#macro-with-open-file">with-open-file</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">s</span> <span class="syntax-string">"foo.output"</span> <span class="syntax-keyword-symbol">:direction</span> <span class="syntax-keyword-symbol">:input</span>)</span> 
	      <span class="syntax-cons">(<span class="syntax-interned-symbol">test</span> <span class="syntax-interned-symbol">s</span>)</span>)</span>)</span>
</span></code></pre>      Signals an error about unreading #\a when #\b was already unread. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>Presumably none.  Implementations which allow this are still correct. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>Small.  I suspect there is very little code which depends upon this working correctly, as most code uses either <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> or <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>, but not both. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>Implementations of sequential streams are forced to be unnecessarily complex in order to be correct. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>Allows simple yet adequately powerful implementation of sequential streams. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>Requires that users have shared, one-char buffer model of how <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> work, rather than two separate one-char buffers. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>&lt;none&gt; </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>