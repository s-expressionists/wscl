<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” CONTAGION-ON-NUMERICAL-COMPARISONS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">CONTAGION-ON-NUMERICAL-COMPARISONS</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-contagion-on-numerical-comparisons:transitive">Proposal TRANSITIVE</a><ol> </ol></li><li><a href="#section-Test Cases/Examples">Test Cases/Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue CONTAGION-ON-NUMERICAL-COMPARISONS [Cleanup] [CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>CLtL p.194 </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1, 14-Sep-88, Moon </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>The numerical contagion rules specified on CLtL p.194 make it impossible for the numerical comparison functions to be transitive when given arguments of mixed floating and rational types <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">see</span> <span class="syntax-interned-symbol">example</span> <span class="syntax-interned-symbol">below</span>)</span>
</span></code></pre>. <br/></section><section class="status-passed proposal" id="issue-contagion-on-numerical-comparisons:transitive"><h2 class="section-title">Proposal TRANSITIVE</h2>Instead of using the same contagion rule both for combining functions and for comparing functions, make the present rule apply only to combining functions and add the following rule:  When rational and floating-point numbers are compared by a numerical function, the function <a class="function-reference" href="../chapter-12.xhtml#function-rational">rational</a> is called to convert the floating-point number to a rational and then an exact comparison is performed.  In the case of complex numbers <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-rational">rational</a> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">for</span> <a class="function-reference" href="../chapter-5.xhtml#function-some">some</a> <span class="syntax-interned-symbol">unknown</span> <span class="syntax-interned-symbol">reason</span> <span class="syntax-interned-symbol">only</span> <span class="syntax-interned-symbol">allowed</span> <span class="syntax-interned-symbol">on</span>
<span class="syntax-interned-symbol">reals</span>)</span>
</span></code></pre>, the real and imaginary parts are handled individually. <br/>It is of course valid to use a more efficient implementation than actually calling <a class="function-reference" href="../chapter-12.xhtml#function-rational">rational</a>, as long as the result of the comparison is the same. <br/></section><section id="section-Test Cases/Examples" class="section"><h2 class="section-title">Test Cases/Examples</h2><pre><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-/">/</a> <span class="syntax-number">10.0</span> <a class="constant-reference" href="../chapter-12.xhtml#constant-single-float-epsilon">single-float-epsilon</a>)</span>)</span>
</span></code></pre><br/><br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-1+">1+</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>)</span>
</span></code></pre><br/>should be <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, since <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>
</span></code></pre><br/>is certainly <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> and<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-1+">1+</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>)</span>
</span></code></pre><br/>is certainly <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>.  However, by the rule of floating-point contagion,<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-1+">1+</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>)</span>
</span></code></pre><br/>is the same as <br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-float">float</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-1+">1+</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span> <span class="syntax-interned-symbol">a</span>)</span>)</span>
</span></code></pre><br/>and the latter form is certainly <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>.<br/><br/>To understand this example better, it helps to realize that<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-number">1.0</span>)</span>)</span>
</span></code></pre><br/>is always true, by the definition of <a class="constant-reference" href="../chapter-12.xhtml#constant-single-float-epsilon">single-float-epsilon</a>.<br/><br/>Here is a second example:<br/><br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-floor">floor</a> <span class="syntax-interned-symbol">a</span>)</span>)</span>
</span></code></pre><br/><br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-&lt;=">&lt;=</a> <span class="syntax-interned-symbol">a</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span>)</span>)</span>
</span></code></pre> is <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>.<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-&lt;">&lt;</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">1</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">2</span>)</span>)</span>
</span></code></pre> is <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>.<br/><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-&lt;=">&lt;=</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> <span class="syntax-interned-symbol">i</span> <span class="syntax-number">2</span>)</span> <span class="syntax-interned-symbol">a</span>)</span>
</span></code></pre> is <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> by CLtL, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> by this proposal.<br/>Thus CLtL requires<br/>  a &lt;<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> i+1 &lt; i+2 &lt;<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> a<br/>which ought to imply<br/>  a &lt; a<br/>which is absurd.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>Transitivity of <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> and of &lt; are important to many algorithms.  What CLtL says now was probably not intentional, but just the result of thinking that comparing and combining could be lumped together without really thinking about it. <br/>Without this change, it is impossible to extend the :TEST argument to <a class="function-reference" href="../chapter-18.xhtml#function-make-hash-table">make-hash-table</a> to allow <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> or <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a>, since there could be two table entries with rational keys that are not <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>, then <a class="function-reference" href="../chapter-18.xhtml#function-gethash">gethash</a> could be presented with a floating-point argument that is <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> to both keys. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>Lucid is said to implement the proposal.  As far as I know all other implementations do what CLtL currently says. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>This requires a change in what is likely to be intricate and <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> code.  However, the total effort should be small compared to the cost of writing that code originally. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>This is an incompatible change.  It's difficult to know if any users are depending on the current behavior.  It seems likely that most users would expect the proposed behavior, and may be wondering why their programs don't quite work when the numbers get large. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>Comparison functions in Common Lisp will be non-transitive. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>Comparison functions in Common Lisp will be transitive. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>Having two rules of floating-point contagion may seem less esthetic, but I'm certain that having the comparison functions behave in a more mathematically correct fashion outweighs that esthetically. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>Everyone who has expressed an opinion has thought this was the right thing for years, but we never got around to writing it up as a cleanup proposal. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>