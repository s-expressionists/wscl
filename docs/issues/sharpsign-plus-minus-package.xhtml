<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp — SHARPSIGN-PLUS-MINUS-PACKAGE</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">SHARPSIGN-PLUS-MINUS-PACKAGE</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-sharpsign-plus-minus-package:keyword">Proposal KEYWORD</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Adoption Cost">Adoption Cost</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Conversion Cost">Conversion Cost</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue SHARPSIGN-PLUS-MINUS-PACKAGE [NIL] [CLARIFICATION/CHANGE]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2>#<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> (p. 358), #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> (p. 359), <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> (p. 448) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1 by Pitman   01-Mar-87 Version 2 by Masinter 10-Nov-87 Version 3 by Masinter 14-Nov-87 </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>No information is provided in the description of #<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> and #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pp.</span> <span class="syntax-interned-symbol">358-359</span>)</span>
</span></code> about what package the features are read on. <br/>In some systems, the current package is used. Since there is no wording in CLtL to the contrary, it's reasonable to assume that this would be done, but a consequence of this is that you must be much more sensitive to the package you're in at any given time when using #<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> or #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> even for system-provided features. (This is a problem if the <a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a> package can contain only the symbols in CLtL because system-provided features will likely not have the names of symbols on <a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a> and hence will require package prefixes. Having a symbol named <span class="issue-reference error">issue:LISP:SYMBOLICS</span> or <span class="issue-reference error">issue:LISP:LUCID</span> would not be possible, so something like #+Symbolics would not be possible; you'd have to write #+SYSTEM:SYMBOLICS or some such, which might get a read error in a non-Symbolics implementation that didn't export SYMBOLICS from <a class="package-reference" href="../chapter-A.xhtml#package-system">system</a>...) <br/>In some systems, a canonical package <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">such</span> <span class="syntax-interned-symbol">as</span> <a class="proposal-reference" href="#issue-sharpsign-plus-minus-package:keyword">KEYWORD</a>)</span>
</span></code> is used. This means that package prefixes are rarely necessary in sharpsign conditionals for system-provided features regardless of the current package or restrictions about what may be in <a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a>. (For example, the <a class="proposal-reference" href="#issue-sharpsign-plus-minus-package:keyword">KEYWORD</a> package can have any symbol so it's not a problem to push :SYMBOLICS or :LUCID on <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a>). <br/>This has implications about what goes on the <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a>  list <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">p.</span> <span class="syntax-number">448</span>)</span>
</span></code>. <br/></section><section class="status-unknown proposal" id="issue-sharpsign-plus-minus-package:keyword"><h2 class="section-title">Proposal KEYWORD</h2>Specify that the default package while reading feature specs is the keyword package. Other packages may be designated by use of explicit package prefixes. <br/>Symbols on <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> may be in any package but  that in practice they will mostly be on the keyword package because that's the package #+/#<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> uses by default. If symbols in a package other than keyword appear on <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a>, they  will be seen by #+/#<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> only if marked by explicit package  prefixes in the written feature-spec. <br/>Clarify that the package of the IEEE-FLOATING-POINT symbol mentioned on p. 448 is <a class="proposal-reference" href="#issue-sharpsign-plus-minus-package:keyword">KEYWORD</a>. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>Making the behavior of #<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> and #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> well defined is important for people writing portable code that manipulate <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> directly. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>Some implementations bind <a class="variable-reference" href="../chapter-11.xhtml#variable-*package*">*package*</a> while reading feature specs and others do not. <br/></section><section id="section-Adoption Cost" class="section"><h2 class="section-title">Adoption Cost</h2>Changes to implementations to make them conform should be fairly minor if not trivial. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>As currently specified, using #<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> and #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> in truly portable code can have bootstrapping problems, since it is sometimes required to conditionally set up <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> in different ways for different systems. <br/></section><section id="section-Conversion Cost" class="section"><h2 class="section-title">Conversion Cost</h2>Few changes to user code will be required; code that uses #<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a> and #<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> will continue to work, although code that manipulates <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> directly may require editing.  <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>Most users would perceive this as a bug fix either to CLtL or to certain implementations. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>The cleanup committee supports this proposal. <br/>It might be reasonable to suggest that only vendors should add keyword symbols to the <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*features*</a> list, and that users should add features on their personal packages so that collisions due to user applications were less likely. This idea might be a subject of controversy though, so is not part of this proposal. <br/>It would be useful to create a non-binding registry of feature names <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <a class="type-reference" href="../chapter-11.xhtml#type-package">package</a> <span class="syntax-interned-symbol">names</span>)</span>
</span></code> already in use, so that Lisp implementors could pick otherwise unused feature names, and users who wanted to write portable code could know what feature names were preferred. <br/></section></div></main><footer>Copyright © 2021 Jan Moringen</footer></body></html>