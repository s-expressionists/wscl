<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” IN-PACKAGE-FUNCTIONALITY</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">IN-PACKAGE-FUNCTIONALITY</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-in-package-functionality:mar89-x3j13">Proposal MAR89-X3J13</a><ol> <li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li></ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue IN-PACKAGE-FUNCTIONALITY [NIL] [CHANGE]</h1><h2>Related issues</h2><ul><a class="issue-reference" href="../issues/defpackage.xhtml#issue-defpackage">DEFPACKAGE</a><span class="issue-reference error">issue:COMPILE-FILE-SYMBOL-HANDLING</span></ul><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>proposal <a class="proposal-reference" href="#issue-in-package-functionality:mar89-x3j13">MAR89-X3J13</a> passed, as amended, Mar 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> (p182-183) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>07-Jul-88, Version 1 by Pitman 7-Oct-88, Version 2 by Masinter (discussion) 8-Dec-88, Version 3 by Masinter 12-Dec-88, Version 4 by Masinter 20-Jan-89, Version 5 by Loosemore 30-Jan-89, Version 6 by Loosemore 10-Mar-89, Version 7 by Loosemore 15-Mar-89, Version 8 by Masinter  (add back SELECT-ONLY) 9-Apr-89, Verison 9 by Masinter, as amended Mar 89 X3J13, and discussion updated. </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  There are two typical uses for <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> &ndash; to define/create a package   and to select a package. The fact that these two purposes have been   given to the same function has led to reduced error checking. <br/>  A more general problem is that the "Put In Seven Extremely Randoms"    convention described in CLtL is now recognized by many people as being   unsatisfactory for both package definition and package selection.   The <a class="macro-reference" href="../chapter-11.xhtml#macro-defpackage">defpackage</a> macro provides a much cleaner mechanism for package   definition, but there is still a need for a convenient way to select   a package that has well-defined compilation semantics. <br/></section><section class="status-passed proposal" id="issue-in-package-functionality:mar89-x3j13"><h2 class="section-title">Proposal MAR89-X3J13</h2>  Change <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> from a function to a macro: <br/>    <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> name						[macro] <br/>    This macro causes <a class="variable-reference" href="../chapter-11.xhtml#variable-*package*">*package*</a> to be set to the package named <a class="glossary-reference" href="../chapter-26.xhtml#glossary-name">name</a>,     which must be a symbol or string.  An error is signalled if the     package does not already exist.  Everything this macro does is also     performed at compile time if the call appears at top-level. <br/>  Remove the second paragraph of section 11.7 in CLtL.  (This includes   the requirement for special compile-time treatment of the various   package functions.) <br/><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  This could allow improved error checking and modularity, with only   minimal loss of functionality. <br/>  Making <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> a macro rather than a function means that there   is no need to require <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> to handle it specially.  Since   <a class="macro-reference" href="../chapter-11.xhtml#macro-defpackage">defpackage</a> is also defined to side-effect the compilation environment,   there is no need to require any of the package functions to be treated   specially by the compiler. <br/>  The language in section 11.7 of CLtL puts the burden on   implementations of ensuring that all symbols in a file which is   compiled and loaded end up in the same package that they would if the   source file were loaded interpretively.  No implementation can   possibly meet this requirement because, in general, the runtime   behavior of the program cannot be predicted by the compiler. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Probably no one implements this behavior exactly since it's an    incompatible change to CLtL. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  The <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> macro can be implemented trivially by using    <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-eval-when">eval-when</a> in its expansion: <br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a> <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">name</span>)</span>
        <span class="syntax-quasiquote">`<span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-eval-when">eval-when</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-3.xhtml#function-eval">eval</a> <a class="function-reference" href="../chapter-3.xhtml#function-compile">compile</a> <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a>)</span>
	     <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <a class="variable-reference" href="../chapter-11.xhtml#variable-*package*">*package*</a>
	           <span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-or">or</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-11.xhtml#function-find-package">find-package</a> <span class="syntax-quote">'<span class="syntax-unquote">,<span class="syntax-interned-symbol">name</span></span></span>)</span>
		       <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-error">error</a> <span class="syntax-string">"Package ~s does not exist."</span> <span class="syntax-quote">'<span class="syntax-unquote">,<span class="syntax-interned-symbol">name</span></span></span>)</span>)</span>)</span>)</span></span>)</span>
</span></code></pre> <br/>  The changes required to <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> to remove the magic treatment   of the package functions are also likely to be small. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  In most cases, minor syntactic changes to some files would be   necessary.  Programmers that are now using the "Put In Seven   Extremely Randoms" convention will probably find it straightforward   to convert their code to do a <a class="macro-reference" href="../chapter-11.xhtml#macro-defpackage">defpackage</a> followed by a    <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a>. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  The specification of <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> will be much more difficult to   understand. <br/>  The standard will require compilers to solve the halting problem. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  Modular package declarations would be encouraged and errors due   to demand-creation of packages would be easier to detect. <br/>  The specification of <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> will be simplified. <br/>  There will be a clear statement of the requirements for program   conformance, as relating to usage of packages. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  The fact that <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> is currently ambiguous about intent <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">whether</span>
    <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="type-reference" href="../chapter-11.xhtml#type-package">package</a> <span class="syntax-interned-symbol">should</span> <span class="syntax-interned-symbol">exist</span> <span class="syntax-interned-symbol">already</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-or">or</a> <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a>)</span>
</span></code></pre> is clearly not aesthetic.   Removing it can't be any worse. <br/>  The fact that the currently stated requirements for handling of   the package functions by the compiler are not implementable is   clearly not aesthetic. </section></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  The dual use of <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> has not been helpful and is confusing. <br/>  This is an incompatible change. <br/>KMP's notes of the Mar 89 X3J13: <br/> On Tuesday, we took a straw poll.    0 opposed both proposals.   15 liked NEW-MACRO.    7 liked SELECT-ONLY.  ``Keeping <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> makes no difference to compatibility.'' &ndash;Moon  Pitman moved to amend this to say "deprecate" instead of remove.  The motion to amend failed 3-N.  The NEW-MACRO proposal passed unamended 12-4. <br/> On Thursday, Aaron Larson and JonL asked that the issue be reconsidered.  The motion to reconsider passed N-1.  There was a motion to rename the SELECT-PACKAGE which we'd voted in to  <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> &ndash; so that the compatible syntax <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-string">"FOO"</span>)</span>
</span></code> would work  in CLtL and ANSI <a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a>.  Steele requested verbal clarification that we were not trying to solve  the ``dusty file'' problem but rather to make it possible to write new code  that worked in old and new situations &ndash; it was agreed that this was a  correct characterization of the proposal.  JonL's amendment passed 13-1.  Then the amended proposal was voted in 14-0. <br/>The net effect is that NEW-MACRO passed with the name of SELECT-PACKAGE changed to <a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a>. <br/>&mdash;&ndash; LMM added 19-Mar-90: <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-interned-symbol">foo</span>)</span>
</span></code>   is now legal (but illegal CLtL) <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">foo</span></span>)</span>
</span></code> is now not legal (but legal CLtL) <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-string">"FOO"</span>)</span>
</span></code> is now legal (and was in CLtL too) </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>