<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” LOCALLY-TOP-LEVEL</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">LOCALLY-TOP-LEVEL</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-locally-top-level:special-form">Proposal SPECIAL-FORM</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Performance impact">Performance impact</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue LOCALLY-TOP-LEVEL [NIL] [CLARIFICATION / ADDITION]</h1><h2>Related issues</h2><ul><span class="issue-reference error">issue:EVAL-WHEN-NON-TOP-LEVEL</span><a class="issue-reference" href="../issues/declaration-scope.xhtml#issue-declaration-scope">DECLARATION-SCOPE</a></ul><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Mar 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>None </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1,  9-Mar-89, by Moon Version 2, 16-Mar-89, by Moon, fix referenced proposal name </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>  It is desirable to be able to wrap <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> around one or more   top-level forms and have them continue to be treated as top-level   forms.  Three examples of how this is useful: <br/>   <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> to put an <a class="declaration-reference" href="../chapter-3.xhtml#declaration-optimize">optimize</a> or <a class="declaration-reference" href="../chapter-3.xhtml#declaration-inline">inline</a> declaration into force around      several related forms. <br/>   <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> to put declarations into force around <a class="macro-reference" href="../chapter-7.xhtml#macro-defclass">defclass</a>, or any other      top-level form that lacks a syntax for embedded declarations. <br/>   <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> <a class="issue-reference" href="../issues/declaration-scope.xhtml#issue-declaration-scope:no-hoisting">DECLARATION-SCOPE:NO-HOISTING</a>, which passed in January,      removed the ability to use a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> at the head of the body of a      <a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> or <a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a> to make a declaration that applies to the entire      form, including the lambda-list.  We are supposed to use <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a>      instead, but forms in the body of <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> are not top-level,      and that changes the semantics of <a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a>. <br/>  <span class="issue-reference error">issue:Issue EVAL-WHEN-NON-TOP-LEVEL</span> could not define <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> to treat   its body as top-level forms, because only a special form can do   that and <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> is a macro. <br/></section><section class="status-passed proposal" id="issue-locally-top-level:special-form"><h2 class="section-title">Proposal SPECIAL-FORM</h2>  Change <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> from a macro to a special form, and change the   definition of compiler processing <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">EVAL-WHEN-NON-TOP-LEVEL</span>)</span>
</span></code>   so that when a <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> form appears at top level the forms in   its body are processed at top level. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-optimize">optimize</a> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-safety">safety</a> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-space">space</a> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-speed">speed</a> <span class="syntax-number">0</span>)</span>)</span>)</span>
    <span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">frob</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-environment">&amp;ENVIRONMENT</a> <span class="syntax-interned-symbol">e</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span> <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">z</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">mumble</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span> <span class="syntax-interned-symbol">z</span> <span class="syntax-interned-symbol">e</span>)</span>)</span>)</span>
</span></code></pre><br/><br/>  Without this proposal, this would have to be written<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">frob</span> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-environment">&amp;ENVIRONMENT</a> <span class="syntax-interned-symbol">e</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span> <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;OPTIONAL</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">z</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a>
                                                    <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a>
                                                      <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-optimize">optimize</a>
                                                        <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-safety">safety</a> <span class="syntax-number">3</span>)</span>
                                                        <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-space">space</a> <span class="syntax-number">3</span>)</span>
                                                        <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-speed">speed</a> <span class="syntax-number">0</span>)</span>)</span>)</span>
                                                    <span class="syntax-cons">(<span class="syntax-interned-symbol">foo</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span>)</span>)</span>)</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-optimize">optimize</a> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-safety">safety</a> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-space">space</a> <span class="syntax-number">3</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-speed">speed</a> <span class="syntax-number">0</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">mumble</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span> <span class="syntax-interned-symbol">z</span> <span class="syntax-interned-symbol">e</span>)</span>)</span>)</span>
</span></code></pre><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  Wrapping <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> around a form should not change its semantics except   as specified by the declarations, hence the body of a top-level   <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> should be top-level. <br/>  A macro cannot have a top-level body unless it expands into a special   form that has a top-level body; otherwise the macro invocation and   the macro expansion would not have identical semantics as top-level   forms.  There is no available special form for <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> to macroexpand   into (CLtL doesn't say, but presumably the intent was to expand into   a <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> with an empty binding list). <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>  The Zetalisp equivalent of <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> worked to surround top-level forms,   because it was a macro that expanded into COMPILER-LET <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">stashing</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
  <span class="syntax-interned-symbol">declarations</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">a</span> <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> <a class="symbol-reference" href="../chapter-25.xhtml#symbol-variable">variable</a> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">compiler</span> <span class="syntax-interned-symbol">would</span> <span class="syntax-interned-symbol">look</span> <span class="syntax-interned-symbol">at</span>)</span>
</span></code></pre>.  This   is of course the wrong way to do declarations, but it shows that the   idea was that you could wrap declarations around a bunch of top-level   forms. <br/>  Symbolics Genera 7.4.0 does not implement the proposal <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">but</span> <span class="syntax-interned-symbol">it</span> <span class="syntax-interned-symbol">does</span>
  <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-interned-symbol">implement</span> <span class="syntax-interned-symbol">DECLARATION-SCOPE:NO-HOISTING</span> <span class="syntax-interned-symbol">either</span>)</span>
</span></code></pre>.  I did   not survey any other implementations. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  A half dozen lines of code in the compiler and a smaller amount   in the interpreter and any program-analyzing programs. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>  See the horrible example above. <br/></section><section id="section-Performance impact" class="section"><h2 class="section-title">Performance impact</h2>  None. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  More consistent language. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>  Improved. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  None. <br/><br/>     &mdash;&ndash; End Forwarded Messages &mdash;&ndash; </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>