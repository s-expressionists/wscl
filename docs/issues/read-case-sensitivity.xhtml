<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” READ-CASE-SENSITIVITY</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">READ-CASE-SENSITIVITY</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-read-case-sensitivity:readtable-keywords">Proposal READTABLE-KEYWORDS</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Test Cases">Test Cases</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue READ-CASE-SENSITIVITY [Cleanup] [ADDITION/CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>passed, as amended, Jun 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>CLtL p 334 ff: What the Read Function Accepts, especially p 337, step 8, point 1. CLtL p 360 ff: The Readtable <a class="function-reference" href="../chapter-23.xhtml#function-copy-readtable">copy-readtable</a> (CLtL, p 361) <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a> (CLtL, p 372) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1, 15-Feb-89, by Dalton Version 2, 23-Mar-89, by Dalton, (completely new proposal after comments from Pitman, Gray, Masinter, and R.Tobin@uk.ac.ed) Version 3, 16-Jun-89, by Dalton (very minor changes in presentation and some additions to the discussion) Version 4, 22-Jun-89, by Dalton (removal of the <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> proposal and a different specification for :INVERT after discussion with Moon) Version 5, 23-Jun-89, by Dalton (minor revisions in presentation and better test case, as suggested by Pitman; also fixed some errors) Version 6, 24-Jun-89, by Dalton (small correction) Version 7, 2-Jul-89, by Masinter (as amended, Jun89X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  The Common Lisp reader always converts unescaped constituent   characters to upper case.  (See CLtL, p 337, step 8, point 1.)   This behavior is not always desirable. <br/><ol><li>  Lisp applications often use the Lisp reader to read their data. This is often significantly easier than writing input routines from scratch, especially if the input can be structured as lists. However, certain applications want to make use of case distinctions, and Common Lisp makes this unreasonably difficult.  (You must define every letter as a read macro and have the macro function read the rest of the symbol, or else you must write a reader from scratch.) <br/></li><li>  Some programming languages distinguish between upper and lower case in identifiers, and useful conventions are often built around such distinctions.  For example, in C, constants are often written in upper case and variables in lower.  In Mesa<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">?</span>)</span>
</span></code></pre> and Smalltalk<pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">?</span>)</span>
</span></code></pre>, a capital letter is used to indicate the beginning of a new word in identifiers made up of several words.  In Edinburgh Prolog, variables begin with upper-case letters and constant symbols do not.  The case-insensitivity of the Common Lisp reader makes it difficult to use conventions of this sort. <br/></li></ol></section><section class="status-passed proposal" id="issue-read-case-sensitivity:readtable-keywords"><h2 class="section-title">Proposal READTABLE-KEYWORDS</h2>  Define a new settable function, <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <span class="syntax-interned-symbol">&lt;readtable&gt;</span>)</span>
</span></code></pre> to   control the reader's interpretation of case.  The following values   may be given: :UPCASE, :DOWNCASE, :PRESERVE, and :INVERT. <br/>    When the value is :UPCASE, unescaped constituent characters     are converted to upper-case, as specified by CLtL on page 337. <br/>    When the value is :DOWNCASE, unescaped constituent characters     are converted to lower-case. <br/>    When the value is :PRESERVE, the case of all characters remains     unchanged. <br/>    When the value is :INVERT, then if all of the unescaped letters     in the extended token are of the same case, those <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">unescaped</span>)</span>
</span></code></pre>     letters are converted to the opposite case. <br/>  <a class="function-reference" href="../chapter-23.xhtml#function-copy-readtable">copy-readtable</a> copies the setting of <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>.  The value of   <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> for the standard readtable is :UPCASE. <br/>  The <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> of <a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a> also has significance when printing   The case in which letters are printed, when <a class="glossary-reference" href="../chapter-26.xhtml#glossary-vertical-bar">vertical-bar</a> syntax is not   used, is determined as follows: <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :UPCASE, upper-case letters are printed     in the case specified by <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a>, and lower-case letters     are printed in their own case. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :DOWNCASE, lower-case letters are printed     in the case specified by <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a>, and upper-case letters     are printed in their own case. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :PRESERVE, all letters are printed in their     own case. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :INVERT, the case of all letters in single<a class="function-reference" href="../chapter-12.xhtml#function--">-</a>     case symbol names is inverted.  Mixed-case symbol names are printed     as-is. <br/>  The rules for escaping letters in symbol names are also affected by   the <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>.  If <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-escape*">*print-escape*</a> is true, letters are escaped   as follows: <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :UPCASE, all lower-case letters must be     escaped. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :DOWNCASE, all upper-case letters must be     escaped. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :PRESERVE, no letters need be escaped. <br/>    When <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> is :INVERT, no letters need be escaped. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  There are a number of different ways to achieve case-sensitivity.   This proposal is fairly simple but provides all of the functionality   that one could reasonably expect. <br/>  By using a property of the readtable, we avoid introducing a new   special variable.  Any code that wishes to control all of the   reader's parameters already takes <a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a> into account.  A new   special variable would require such code to change. <br/>  :DOWNCASE is included for symmetry with :UPCASE.   <br/>  :INVERT is included so that case conventions can be used in Common   Lisp code without requiring that the names of symbols in the "<a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a>"   package be written in upper case.  (Opinions vary as to whether is   is advisable to use such conventions, but this proposal leaves that   choice to the user.) <br/>  :INVERT has an effect only for single-case names so that mixed<a class="function-reference" href="../chapter-12.xhtml#function--">-</a>   case names can be interpreted in a more straightforward way. <br/>  In order to avoid complex interactions between the case setting of   the readtable and <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a>, this proposal specifies a   significance for <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a> only when the case setting is :UPCASE   or :DOWNCASE.  The meaning of <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a> when the readtable   setting is :DOWNCASE was chosen for its simplicity and for symmetry   with :UPCASE while still being useful. <br/></section><section id="section-Test Cases" class="section"><h2 class="section-title">Test Cases</h2><pre>  ;;; Test 1 &ndash; reading<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">test1</span> <span class="syntax-symbol">()</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-copy-readtable">copy-readtable</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"READTABLE-CASE  Input   Symbol-name~
	       ~%-----------------------------------~
	       ~%"</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:upcase</span> <span class="syntax-keyword-symbol">:downcase</span> <span class="syntax-keyword-symbol">:preserve</span> <span class="syntax-keyword-symbol">:invert</span>)</span></span>)</span>
	<span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a>)</span> <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>)</span>
	<span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">input</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-string">"ZEBRA"</span> <span class="syntax-string">"Zebra"</span> <span class="syntax-string">"zebra"</span>)</span></span>)</span>
	  <span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;:~A~16T~A~24T~A"</span>
		  <span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-string-upcase">string-upcase</a> <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>)</span>
		  <span class="syntax-interned-symbol">input</span>
		  <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">symbol-name</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-read-from-string">read-from-string</a> <span class="syntax-interned-symbol">input</span>)</span>)</span>)</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/><br/>  The output from <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">TEST1</span>)</span>
</span></code></pre> should be as follows:<br/><br/>    <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>  Input   <a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">symbol-name</a><br/>    &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;<br/>    :UPCASE         ZEBRA   ZEBRA<br/>    :UPCASE         Zebra   ZEBRA<br/>    :UPCASE         zebra   ZEBRA<br/>    :DOWNCASE       ZEBRA   zebra<br/>    :DOWNCASE       Zebra   zebra<br/>    :DOWNCASE       zebra   zebra<br/>    :PRESERVE       ZEBRA   ZEBRA<br/>    :PRESERVE       Zebra   Zebra<br/>    :PRESERVE       zebra   zebra<br/>    :INVERT         ZEBRA   zebra<br/>    :INVERT         Zebra   Zebra<br/>    :INVERT         zebra   ZEBRA<br/><br/>  ;;; Test 2 &ndash; printing<br/><br/>  (defun test2 <pre><code><span class="syntax-root"><span class="syntax-symbol">()</span>
</span></code></pre><br/>    (let <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-copy-readtable">copy-readtable</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
	  <span class="syntax-cons">(<a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a> <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a>)</span>)</span>
</span></code></pre><br/>      <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"READTABLE-CASE *PRINT-CASE*  Symbol-name  Output~
	       ~%--------------------------------------------------~
	       ~%"</span>)</span>
</span></code></pre><br/>      (dolist <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:upcase</span> <span class="syntax-keyword-symbol">:downcase</span> <span class="syntax-keyword-symbol">:preserve</span> <span class="syntax-keyword-symbol">:invert</span>)</span></span>)</span>
</span></code></pre><br/>	<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a>)</span> <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>)</span>
</span></code></pre><br/>	(dolist <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">print-case</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-keyword-symbol">:upcase</span> <span class="syntax-keyword-symbol">:downcase</span> <span class="syntax-keyword-symbol">:capitalize</span>)</span></span>)</span>
</span></code></pre><br/>	  (dolist (symbol '(|ZEBRA| |Zebra| |zebra|))<br/>	    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a> <span class="syntax-interned-symbol">print-case</span>)</span>
</span></code></pre><br/>	    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <span class="syntax-string">"~&amp;:~A~15T:~A~29T~A~42T~A"</span>
		    <span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-string-upcase">string-upcase</a> <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a>)</span>
		    <span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-string-upcase">string-upcase</a> <span class="syntax-interned-symbol">print-case</span>)</span>
		    <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">symbol-name</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a>)</span>
		    <span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-prin1-to-string">prin1-to-string</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a>)</span>)</span>
</span></code></pre>)))))<br/><br/>  The output from <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">TEST2</span>)</span>
</span></code></pre> should be as follows:<br/><br/>    <a class="function-reference" href="../chapter-23.xhtml#function-readtable-case">readtable-case</a> <a class="variable-reference" href="../chapter-22.xhtml#variable-*print-case*">*print-case*</a>  <a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">symbol-name</a>  Output<br/>    &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&ndash;<br/>    :UPCASE        :UPCASE       ZEBRA        ZEBRA<br/>    :UPCASE        :UPCASE       Zebra        |Zebra|<br/>    :UPCASE        :UPCASE       zebra        |zebra|<br/>    :UPCASE        :DOWNCASE     ZEBRA        zebra<br/>    :UPCASE        :DOWNCASE     Zebra        |Zebra|<br/>    :UPCASE        :DOWNCASE     zebra        |zebra|<br/>    :UPCASE        :CAPITALIZE   ZEBRA        Zebra<br/>    :UPCASE        :CAPITALIZE   Zebra        |Zebra|<br/>    :UPCASE        :CAPITALIZE   zebra        |zebra|<br/>    :DOWNCASE      :UPCASE       ZEBRA        |ZEBRA|<br/>    :DOWNCASE      :UPCASE       Zebra        |Zebra|<br/>    :DOWNCASE      :UPCASE       zebra        ZEBRA<br/>    :DOWNCASE      :DOWNCASE     ZEBRA        |ZEBRA|<br/>    :DOWNCASE      :DOWNCASE     Zebra        |Zebra|<br/>    :DOWNCASE      :DOWNCASE     zebra        zebra<br/>    :DOWNCASE      :CAPITALIZE   ZEBRA        |ZEBRA|<br/>    :DOWNCASE      :CAPITALIZE   Zebra        |Zebra|<br/>    :DOWNCASE      :CAPITALIZE   zebra        Zebra<br/>    :PRESERVE      :UPCASE       ZEBRA        ZEBRA<br/>    :PRESERVE      :UPCASE       Zebra        Zebra<br/>    :PRESERVE      :UPCASE       zebra        zebra<br/>    :PRESERVE      :DOWNCASE     ZEBRA        ZEBRA<br/>    :PRESERVE      :DOWNCASE     Zebra        Zebra<br/>    :PRESERVE      :DOWNCASE     zebra        zebra<br/>    :PRESERVE      :CAPITALIZE   ZEBRA        ZEBRA<br/>    :PRESERVE      :CAPITALIZE   Zebra        Zebra<br/>    :PRESERVE      :CAPITALIZE   zebra        zebra<br/>    :INVERT        :UPCASE       ZEBRA        zebra<br/>    :INVERT        :UPCASE       Zebra        Zebra<br/>    :INVERT        :UPCASE       zebra        ZEBRA<br/>    :INVERT        :DOWNCASE     ZEBRA        zebra<br/>    :INVERT        :DOWNCASE     Zebra        Zebra<br/>    :INVERT        :DOWNCASE     zebra        ZEBRA<br/>    :INVERT        :CAPITALIZE   ZEBRA        zebra<br/>    :INVERT        :CAPITALIZE   Zebra        Zebra<br/>    :INVERT        :CAPITALIZE   zebra        ZEBRA<br/><br/></pre></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  While there may not be any current implementation that supports   exactly this proposal, several implementations provide some means   for changing case sensitivity. <br/>  Franz Inc's Ex<a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a> has a function, <span class="issue-reference error">issue:EXCL:SET-CASE-MODE</span>, that sets both   the "preferred case" <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="macro-reference" href="../chapter-5.xhtml#macro-case">case</a> <span class="syntax-interned-symbol">of</span> <span class="syntax-interned-symbol">characters</span> <span class="syntax-interned-symbol">in</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="function-reference" href="../chapter-22.xhtml#function-print">print</a> <span class="syntax-interned-symbol">names</span> <span class="syntax-interned-symbol">of</span>
  <a class="symbol-reference" href="../chapter-7.xhtml#symbol-standard">standard</a> <span class="syntax-interned-symbol">symbols</span> <span class="syntax-interned-symbol">such</span> <span class="syntax-interned-symbol">as</span> <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a>)</span>
</span></code></pre> and whether or not the reader is case<a class="function-reference" href="../chapter-12.xhtml#function--">-</a>   sensitive. <br/>  In Symbolics Common Lisp, the function SET-CHARACTER-TRANSLATION   can be used to make the translation of a letter be that same letter,   thus achieving case-sensitivity. <br/>  Xerox Medley has a function for setting a readtable flag that   determines case sensitivity. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Fairly small.  The reader will be slightly slower and readtables   will be slightly more complex. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Slight.  Programmers must already take into account the possibility   that <a class="variable-reference" href="../chapter-23.xhtml#variable-*readtable*">*readtable*</a> will be a non-standard readtable.  Case-sensitivity   is no worse than character macros in this respect. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Applications that want to read mixed-case expressions will not   be able to use the Common Lisp reader to do so (except, perhaps,   by tortuous use of read macros). <br/>  Programming styles that rely on case distinctions <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">without</span> <span class="syntax-interned-symbol">escape</span>
  <span class="syntax-interned-symbol">characters</span>)</span>
</span></code></pre> will effectively be impossible in Common Lisp. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  Applications will be able to read mixed-case expressions. <br/>  Programmers will be able to make use of case distinctions. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  For the proposal:  <br/>    The language will have greater symmetry, because it will be     possible to control the treatment of case on both input and output     instead of only on output <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">now</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="macro-reference" href="../chapter-5.xhtml#macro-case">case</a>)</span>
</span></code></pre>. <br/>    The language will look less old-fashioned. <br/>  Against the proposal: <br/>    It is, perhaps, inconsistent to control case-sensitivity by a     readtable operation when other aspects of the reader, such as the     input base and the default float format <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">mention</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
    <a class="type-reference" href="../chapter-11.xhtml#type-package">package</a>)</span>
</span></code></pre>, are controlled by special variables.  However, it can be     argued that character-level syntax is determined chiefly by the     readtable.  Case-sensitivity can be seen as analogous to character     macros in this respect. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Dalton supports the proposal <a class="proposal-reference" href="#issue-read-case-sensitivity:readtable-keywords">READTABLE-KEYWORDS</a>. <br/>  Version 1 of the proposal suggested a new global variable rather   than a property of the readtable.  Pitman was strongly opposed to   that proposal and gave convincing arguments that it should be   dropped.  Gray suggested that the readtable property should be a   function.  Versions 2 and 3 included a <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> proposal as well   as the <a class="type-reference" href="../chapter-10.xhtml#type-keyword">keyword</a> one.  But at the March 1989 X3J13 meeting it was   felt that there should be only a single proposal and, since   opinion seemed to favor the <a class="type-reference" href="../chapter-10.xhtml#type-keyword">keyword</a> proposal, the <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>   proposal was dropped. <br/>  In earlier versions of the proposal, :INVERT worked a letter at   a time <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">rather</span> <span class="syntax-interned-symbol">than</span> <span class="syntax-interned-symbol">operating</span> <span class="syntax-interned-symbol">on</span> <span class="syntax-interned-symbol">extended</span> <span class="syntax-interned-symbol">tokens</span>)</span>
</span></code></pre> so that, for   example, Zebra read as zEBRA.  However, the purpose of :INVERT   is to let the programmer get the standard internal case <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">ie</span><span class="syntax-interned-symbol">,
  upper</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-case">case</a>)</span>
</span></code></pre> by writing lower case rather than upper.  This   matters when referring to single-case symbols such as those   in the <a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a> package.  But, in most cases, mixed-case identifiers   will already have the right case.  For example, one would use   TheNextWindow to get TheNextWindow, not tHEnEXTwINDOW. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>