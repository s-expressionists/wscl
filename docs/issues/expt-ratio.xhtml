<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” EXPT-RATIO</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">EXPT-RATIO</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-expt-ratio:p.211">Proposal P.211</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue EXPT-RATIO [Cleanup] [CLARIFICATION]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>CLtL pages 204 and 211 </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1, 4-Oct-88, by Aspinall and Moon Version 2,  6-Oct-88, Masinter (very minor discussion) Version 3, 31-Oct-88, Masinter (fix typo) </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>  The comment (page 204, 2nd para) that "... an implementation [of expt]   might choose to compute <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3/2</span>)</span>
</span></code> as if it had been written   <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code>" disagrees with the principal value definition on   page 211.  See the example below for a case where the two disagree.  We   believe the principal value definitions are consistent and reasonable,   therefore the implementation comment is wrong. <br/></section><section class="status-passed proposal" id="issue-expt-ratio:p.211"><h2 class="section-title">Proposal P.211</h2>  Clarify that <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code> is not equivalent to <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3/2</span>)</span>
</span></code>   and that page 211 rules. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-exp">exp</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-/">/</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-*">*</a> <span class="syntax-number">2</span> <a class="constant-reference" href="../chapter-12.xhtml#constant-pi">pi</a> <span class="syntax-number">#c<span class="syntax-symbol">(<span class="syntax-number">0</span> <span class="syntax-number">1</span>)</span></span>)</span> <span class="syntax-number">3</span>)</span>)</span>)</span>
</span></code>         ;exp<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">2.pi.i/3</span>)</span>
</span></code><br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>
</span></code> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 1 <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">except</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-interned-symbol">round-off</span> <a class="function-reference" href="../chapter-9.xhtml#function-error">error</a>)</span>
</span></code><br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>)</span>
</span></code> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 1 <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">except</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-interned-symbol">round-off</span> <a class="function-reference" href="../chapter-9.xhtml#function-error">error</a>)</span>
</span></code><br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3/2</span>)</span>
</span></code> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; -1 <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">except</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-interned-symbol">round-off</span> <a class="function-reference" href="../chapter-9.xhtml#function-error">error</a>)</span>
</span></code><br/><br/>  There can be no question that <br/>          <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3</span>)</span>
</span></code> ==&gt; 1<br/>  because expt is single-valued with an integer second argument, and<br/>          <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-sqrt">sqrt</a> <span class="syntax-number">1</span>)</span>
</span></code> ==&gt; 1<br/>  definitely follows the principal branch of the square root function.<br/><br/>  But <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a> <span class="syntax-interned-symbol">x</span> <span class="syntax-number">3/2</span>)</span>
</span></code> is defined as <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-exp">exp</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-*">*</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-log">log</a> <span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-number">3/2</span>)</span>)</span>
</span></code> <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">page</span> <span class="syntax-number">211</span>)</span>
</span></code>.<br/>          <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-log">log</a> <span class="syntax-interned-symbol">x</span>)</span>
</span></code> ==&gt; 2.pi.i/3<br/>  according to the definition of the logarithm's branch cuts on page 211<br/>  <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">which</span> <span class="syntax-interned-symbol">really</span> <span class="syntax-interned-symbol">comes</span> <span class="syntax-interned-symbol">down</span> <span class="syntax-interned-symbol">to</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">branch</span> <span class="syntax-interned-symbol">cuts</span> <span class="syntax-interned-symbol">of</span> <a class="function-reference" href="../chapter-12.xhtml#function-phase">phase</a> <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> <span class="syntax-interned-symbol">page</span> <span class="syntax-number">210</span>)</span>
</span></code>, so<br/>          <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-*">*</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-log">log</a> <span class="syntax-interned-symbol">x</span>)</span> <span class="syntax-number">3/2</span>)</span>
</span></code> ==&gt; pi.i<br/>  and<br/>          exp<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pi.i</span>)</span>
</span></code> is -1.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  We believe the principal value definitions are consistent and   reasonable, therefore the implementation comment is wrong. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>  Symbolics Genera 7.3 currently returns the wrong answer, following page   204 rather than page 211.  Lucid Common Lisp, and    Envos Medley implement the proposal. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  The obvious code changes in complex expt. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>  Self-contradictory language specification. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  Users can better predict the branch cuts in expt. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Mathematical Explanation:  When the expt function returns a complex result   in <a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a> (Cartesian) form, the phase of the complex number is effectively   canonicalized.  Information is lost, and that information is necessary to   specify upon which branch of the sqrt function the final result should lie. <br/>  Another way to put it would be that although           sqrt<code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-expt">expt</a><span class="syntax-cons">(<span class="syntax-interned-symbol">x</span><span class="syntax-feature-expression">,3</span>)</span>)</span>
</span></code> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> expt<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">x</span><span class="syntax-feature-expression">,3/2</span>)</span>
</span></code>   where expt and sqrt are the mathematical multi-valued functions, it is not   true that:           pvsqrt<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pvexpt</span><span class="syntax-cons">(<span class="syntax-interned-symbol">x</span><span class="syntax-feature-expression">,3</span>)</span>)</span>
</span></code> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> pvexpt<code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">x</span><span class="syntax-feature-expression">,3/2</span>)</span>
</span></code>   where pvexpt and pvsqrt denote the principal value versions of those functions. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>