<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp — REDUCE-ARGUMENT-EXTRACTION</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">REDUCE-ARGUMENT-EXTRACTION</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-reduce-argument-extraction:key">Proposal KEY</a><ol> </ol></li><li><a href="#section-Example">Example</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-Adoption">Cost of non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue REDUCE-ARGUMENT-EXTRACTION [NIL] [ADDITION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> (pp. 251-252), :KEY arguments (p. 246),  the astronaut structure (pp. 312-313) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1 by Pierson 5-Dec-87 Version 2 by Pierson 30-Dec-87 Version 3 by Masinter 13-Feb-88 </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2><a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> is the only one of the Common Lisp functions that modify or search lists and sequences which does not accept a :KEY argument. This complicates many uses of <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a>. <br/></section><section class="status-unknown proposal" id="issue-reduce-argument-extraction:key"><h2 class="section-title">Proposal KEY</h2>Change the definition of <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> to take a :KEY keyword described as follows:  <br/>If a :KEY argument is supplied, its value must be a function of one argument which will be used to extract the values to reduce.  The :KEY function will be applied exactly once to each element of the sequence in the order implied by the reduction order but not to the value of the :INITIAL-VALUE argument, if any. <br/></section><section id="section-Example" class="section"><h2 class="section-title">Example</h2><pre>Using <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> to obtain the total of the ages of the possibly empty<br/>sequence of astronauts ASTROS, would currently require:<br/><br/>    <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a></span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-map">map</a> <span class="syntax-quote">'<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a></span> <span class="syntax-function">#'<span class="syntax-interned-symbol">PERSON-AGE</span></span> <span class="syntax-interned-symbol">ASTROS</span>)</span>)</span>
</span></code><br/><br/>If this proposal is adopted, the same result could be obtained without<br/>creating a new list by: <br/><br/>    <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-+">+</a></span> <span class="syntax-interned-symbol">ASTROS</span> <span class="syntax-keyword-symbol">:KEY</span> <span class="syntax-function">#'<span class="syntax-interned-symbol">PERSON-AGE</span></span>)</span>
</span></code><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>This proposal makes many common situations where <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> would be useful much less cumbersome. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>We know of no implementation which currently supports this feature. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>This will require most implementations to make a trivial modification to <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a>.  Implementations which wish to use this as an opportunity to further optimize compiled calls to <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> will have to undertake more work <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">which</span> <span class="syntax-interned-symbol">would</span> <span class="syntax-interned-symbol">be</span> <span class="syntax-interned-symbol">much</span> <span class="syntax-interned-symbol">more</span> <span class="syntax-interned-symbol">difficult</span> <span class="syntax-interned-symbol">today</span>)</span>
</span></code>. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>None, this is an upward compatible extension. <br/></section><section id="section-Cost of non-Adoption" class="section"><h2 class="section-title">Cost of non-Adoption</h2><a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> will continue to be more difficult to use than other sequence functions on sequences of complex objects. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2><a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> will become easier to use on sequences of complex objects.  It will be easier for compilers to convert some calls to <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> into efficient loops. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>Slightly damaged in one way.  All :KEY arguments are currently defined to be used for predicates, this proposal will implicitly broaden :KEY to support general extraction for any purpose. <br/>Slightly improved in another way. Many common situations where <a class="function-reference" href="../chapter-17.xhtml#function-reduce">reduce</a> could be used would be easier to write and easier to later read. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>Several members of the committee feel that the increased functionality outweighs the damage to the definition of :KEY.  No one has objected to this change in the recent round of discussions. <br/>There is some controversy over whether the "definition" of :KEY arguments on page 246 of CLtL really constitutes a definition or just an "unwritten rule". <br/></section></div></main><footer>Copyright © 2021 Jan Moringen</footer></body></html>