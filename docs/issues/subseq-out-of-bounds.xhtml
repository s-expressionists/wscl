<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp — SUBSEQ-OUT-OF-BOUNDS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">SUBSEQ-OUT-OF-BOUNDS</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-subseq-out-of-bounds:is-an-error">Proposal IS-AN-ERROR</a><ol> </ol></li><li><a href="#section-Test Cases/Examples">Test Cases/Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue SUBSEQ-OUT-OF-BOUNDS [NIL] [CLARIFICATION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2>:START and :END arguments (246-247), <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a> (248) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>24-Mar-88, Version 1 by Steele 29-Mar-88, Version 2 by Steele, in response to Moon's comments </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>The descriptions of :START and :END arguments, and of <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a>, do not explicitly address the question of out-of-bounds indices.  (The language on page 246, "These arguments should be integer indices into the sequence," is considered too vague on this point.) <br/>Also, the language on page 246 does not make clear whether the prohibition against "start &gt; end" applies to defaulted values as well as explicit values, and does not specify clearly whether the default value for the end argument is the allocated length or the active length. <br/></section><section class="status-unknown proposal" id="issue-subseq-out-of-bounds:is-an-error"><h2 class="section-title">Proposal IS-AN-ERROR</h2>Specify that it is an error for the :START argument of any standard function, or the second argument to <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a>, to be less than zero. <br/>Specify that it is an error for the :END argument of any standard function, or the third argument to <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a>, to be greater than the active length of the sequence in question <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">returned</span> <span class="syntax-interned-symbol">by</span> <a class="function-reference" href="../chapter-17.xhtml#function-length">LENGTH</a>)</span>
</span></code>. <br/>Specify that the start value, after defaulting, must not be greater than the end value, after defaulting. <br/>Specify that the default value for the end argument is the active length of the sequence in question. <br/>This may be summarized as follows: <br/>Let X be the sequence within which indices are to be considered.  Let S be the :START argument of any standard function, or the second argument to <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a>, whether explicitly specified or defaulted, through omission, to zero.  Let E be the :END argument of any standard function, or the third argument to <a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a>, whether explicitly specified or defaulted, through omission or an explicitly passed <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> value, to the active length of X, as returned by <a class="function-reference" href="../chapter-17.xhtml#function-length">LENGTH</a>.  It is an error if the condition <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-&lt;=">&lt;=</a> <span class="syntax-number">0</span> <span class="syntax-interned-symbol">S</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-length">LENGTH</a> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code> is not true. <br/></section><section id="section-Test Cases/Examples" class="section"><h2 class="section-title">Test Cases/Examples</h2><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a> <span class="syntax-string">"Where's the beef?"</span> <span class="syntax-number">-1</span> <span class="syntax-number">5</span>)</span>
</span></code> might be assumed to be "Where" or " Where".<br/><br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a> <span class="syntax-string">"Where's the beef?"</span> <span class="syntax-number">-3</span> <span class="syntax-number">-3</span>)</span>
</span></code> might be assumed to be "".<br/><br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a> <span class="syntax-string">"Where's the beef?"</span> <span class="syntax-number">16</span> <span class="syntax-number">18</span>)</span>
</span></code> might be assumed to be "?" or "? ".<br/><br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-subseq">SUBSEQ</a> <span class="syntax-string">"Where's the beef?"</span> <span class="syntax-number">10000</span> <span class="syntax-number">10000</span>)</span>
</span></code> might be assumed to be "".<br/><br/>Under this proposal each of these situations is an error, and portable<br/>programs may not rely on their behavior.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>We don't want code indexing off the ends of arrays. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>KCL interpreted and compiled code signals an error. <br/>Symbolics Common Lisp interpreted and compiled code signals an error; the compiler also issued an out-of-range warning <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">possible</span> <span class="syntax-interned-symbol">because</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
<span class="syntax-interned-symbol">arguments</span> <span class="syntax-interned-symbol">were</span> <span class="syntax-interned-symbol">all</span> <span class="syntax-interned-symbol">constant</span>)</span>
</span></code></pre>. <br/>Lucid Common Lisp interpreted and compiled code signals an error. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>None. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>Users who depended on some specific implementation behavior in these cases may find that their pragmatically unportable code is now officially unportable. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>Confusion. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>Removal of a small but important ambiguity in the spec. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>It seems cleaner not to allow indexing off the end of an array, and by extension not allow it for any sequence. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>This merely clarifies the original intent of the passage on page 246. <br/></section></div></main><footer>Copyright © 2021 Jan Moringen</footer></body></html>