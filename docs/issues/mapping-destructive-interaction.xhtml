<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” MAPPING-DESTRUCTIVE-INTERACTION</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">MAPPING-DESTRUCTIVE-INTERACTION</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-mapping-destructive-interaction:explicitly-vague">Proposal EXPLICITLY-VAGUE</a><ol> </ol></li><li><a href="#section-Test Case">Test Case</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue MAPPING-DESTRUCTIVE-INTERACTION [NIL] [CLARIFICATION]</h1><h2>Related issues</h2><ul><a class="issue-reference" href="../issues/remf-destruction-unspecified.xhtml#issue-remf-destruction-unspecified">REMF-DESTRUCTION-UNSPECIFIED</a></ul><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-14.xhtml#function-mapcar">mapcar</a>, <a class="function-reference" href="../chapter-14.xhtml#function-maplist">maplist</a>, ... (p128); <a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> (p126); <a class="function-reference" href="../chapter-18.xhtml#function-maphash">maphash</a> (p285);  <a class="macro-reference" href="../chapter-11.xhtml#macro-do-symbols">do-symbols</a>, <a class="macro-reference" href="../chapter-11.xhtml#macro-do-external-symbols">do-external-symbols</a>, <a class="macro-reference" href="../chapter-11.xhtml#macro-do-all-symbols">do-all-symbols</a> (pp187-188); All functions using :TEST	       </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>07-Mar-88, Version 1 by Pitman 09-Jun-88, Version 2 by Pitman (merge Moon's comments and update current practice) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2> The interaction of mapping functions and <a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> with destructive  operations on the list being operated on is unclear. For example,  if you destructively modify some tail of a list being mapped down,  does that affect the mapping process? <br/></section><section class="status-passed proposal" id="issue-mapping-destructive-interaction:explicitly-vague"><h2 class="section-title">Proposal EXPLICITLY-VAGUE</h2> Clarify that it in general is an error <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">effect</span> <span class="syntax-interned-symbol">is</span> <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-interned-symbol">defined</span>
 <span class="syntax-interned-symbol">but</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">general</span> <span class="syntax-interned-symbol">no</span> <a class="function-reference" href="../chapter-9.xhtml#function-error">error</a> <span class="syntax-interned-symbol">will</span> <span class="syntax-interned-symbol">be</span> <span class="syntax-interned-symbol">signalled</span>)</span>
</span></code></pre> for code executed during a  "structure traversing" operation to destructively modify the  structure in a way that might affect the ongoing traversal operation. <br/> For list traversal operations, this means that the cdr chain of the  list may not be destructively modified. <br/> For array traversal operations, the array may not be adjusted and  its <a class="function-reference" href="../chapter-15.xhtml#function-fill-pointer">fill-pointer</a>, if any, may not be changed. <br/> For hash tables, new elements may not be added or deleted EXCEPT  that the element corresponding to the current hash key may be  changed or removed. <br/> For packages, new symbols may not be interned in or uninterned from  the package being traversed or any package that it uses EXCEPT that  the current symbol may be uninterned from the package being traversed  in a <a class="macro-reference" href="../chapter-11.xhtml#macro-do-symbols">do-symbols</a>. <br/> Note: This proposal is intended to clarify restrictions on user code   for use with structure manipulators which are not inherently   destructive. Other operators, such as <a class="function-reference" href="../chapter-17.xhtml#function-delete-duplicates">delete-duplicates</a> or <a class="function-reference" href="../chapter-17.xhtml#function-nreverse">nreverse</a>,   may have much more complicated restrictions and are intentionally not   treated by this proposal. See the <a class="issue-reference" href="../issues/remf-destruction-unspecified.xhtml#issue-remf-destruction-unspecified">X3J13 Issue REMF-DESTRUCTION-UNSPECIFIED</a>   for more discussion of such issues. <br/></section><section id="section-Test Case" class="section"><h2 class="section-title">Test Case</h2><pre> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let*">let*</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">L</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span>)</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">LL</span> <span class="syntax-interned-symbol">L</span>)</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">I</span> <span class="syntax-number">0</span>)</span>)</span>
   <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">FOO</span> <span class="syntax-interned-symbol">L</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="../chapter-12.xhtml#macro-incf">incf</a> <span class="syntax-interned-symbol">I</span>)</span>
     <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span>)</span>
	 <span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a> <span class="syntax-interned-symbol">LL</span>)</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>
	 <span class="syntax-cons">(<a class="macro-reference" href="../chapter-14.xhtml#macro-pop">pop</a> <span class="syntax-interned-symbol">LL</span>)</span>)</span>)</span>
   <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">L</span>)</span>)</span>
</span></code></pre> might return <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">2</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span>)</span>)</span>
</span></code> or <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span>)</span>)</span>
</span></code>, for example.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2> This clarifies the status quo. <br/> Also, the likelihood that the user will want to destructively alter a  structure while it is being traversed is low. The likelihood that such  code would be readable and maintainable is also low. The likelihood   that a compiler could do some interesting optimization if this point  were not pinned down is high enough to be the overriding consideration  in this case. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2> The implementation of <a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> in Symbolics Genera, KCL, and PopLog Common Lisp  returns <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span>)</span>)</span>
</span></code> for the test case. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  None. This simply makes the status quo explicit. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Technically none. People who were mistakenly assuming that CLtL guaranteed   things which it does not might be inclined to rewrite their code in a more   portable way. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Users would be less informed. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  users would be more informed. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  Some might say it would be clearer to define this one way or the other, but   advocates of both camps exist and their arguments are fairly symmetric.   In any case, since this is a proposal to preserve the status quo, it has no   major impact on aesthetics. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  This idea for this proposal was suggested by the Japanese community. <br/>  Pitman drafted the formal proposal and supports the <a class="proposal-reference" href="#issue-mapping-destructive-interaction:explicitly-vague">EXPLICITLY-VAGUE</a> proposal. <br/>  Moon generally supported version 1 of this proposal, but had some specific   criticisms about weakness of the wording which this version is an attempt to fix. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>