<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” MACRO-DECLARATIONS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">MACRO-DECLARATIONS</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit History">Edit History</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-macro-declarations:make-explicit">Proposal MAKE-EXPLICIT</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to implementors">Cost to implementors</a><ol> </ol></li><li><a href="#section-Cost to users">Cost to users</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue MACRO-DECLARATIONS [Cleanup] [CLARIFICATION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="issue-reference" href="../issues/symbol-macrolet-declare.xhtml#issue-symbol-macrolet-declare">X3J13 Issue SYMBOL-MACROLET-DECLARE</a> <a class="issue-reference" href="../issues/declaration-scope.xhtml#issue-declaration-scope">X3J13 Issue DECLARATION-SCOPE</a> <span class="issue-reference error">issue:Issue DECLARE-TYPE-FREE</span> <a class="issue-reference" href="../issues/define-compiler-macro.xhtml#issue-define-compiler-macro">X3J13 Issue DEFINE-COMPILER-MACRO</a> <a class="issue-reference" href="../issues/dynamic-extent.xhtml#issue-dynamic-extent">X3J13 Issue DYNAMIC-EXTENT</a> <a class="issue-reference" href="../issues/dynamic-extent-function.xhtml#issue-dynamic-extent-function">X3J13 Issue DYNAMIC-EXTENT-FUNCTION</a> Declarations (CLtL chapter 9) </section><section id="section-Edit History" class="section"><h2 class="section-title">Edit History</h2>V1, 26 Oct 1989, Sandra Loosemore V2, 02 Nov 1989, Sandra Loosemore (suggestions from Moon) <br/></section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2><a class="issue-reference" href="../issues/symbol-macrolet-declare.xhtml#issue-symbol-macrolet-declare">X3J13 Issue SYMBOL-MACROLET-DECLARE</a> defines a meaning for <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> declarations when the lexically visible "binding" of the symbol names a symbol-macro.  It also requires SYMBOL-MACRO to signal an error if a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration is provided in the body for a symbol which it defines as a symbol-macro. <br/>What is the meaning of a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration appearing in some other context <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">such</span> <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">a</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-locally">locally</a> <span class="syntax-interned-symbol">construct</span>)</span>
</span></code>, for a symbol for which the lexically apparent "binding" is a symbol-macro definition?  How about any other declaration which normally applies to a variable or function binding (<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a>, <a class="declaration-reference" href="../chapter-3.xhtml#declaration-dynamic-extent">dynamic-extent</a>, <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ftype">ftype</a>, <a class="declaration-reference" href="../chapter-3.xhtml#declaration-inline">inline</a>, <a class="symbol-reference" href="../chapter-3.xhtml#symbol-notinline">notinline</a>) when the lexically apparent "binding" is a macro or symbol-macro definition?  <br/></section><section class="status-unknown proposal" id="issue-macro-declarations:make-explicit"><h2 class="section-title">Proposal MAKE-EXPLICIT</h2>Clarify that the standard declarations that apply to function or variable bindings have the following effects when the binding is a macro or symbol-macro: <br/>  <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a>     <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-symbol-macrolet">symbol-macrolet</a> signals an error if it includes a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration      for any symbol that it binds as a symbol-macro.  [Issue     <a class="issue-reference" href="../issues/symbol-macrolet-declare.xhtml#issue-symbol-macrolet-declare">symbol-macrolet-declare</a>]  Presumably, this error is of type      <a class="type-reference" href="../chapter-5.xhtml#type-program-error">program-error</a> and is signalled at compile-time rather than run-time. <br/>    A <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration for a symbol whose lexically visible binding     is a symbol-macro causes that binding to be shadowed, in the same way     that a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration shadows lexical variable bindings. <br/>  <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a>     A <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> declaration for a symbol that names a symbol-macro is equivalent     to wrapping a <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> expression around the expansion of that symbol-macro.     [<a class="issue-reference" href="../issues/symbol-macrolet-declare.xhtml#issue-symbol-macrolet-declare">X3J13 Issue SYMBOL-MACROLET-DECLARE</a>]  This is meaningful regardless of whether      the declaration appears in the form that bound the symbol-macro or as a      free declaration within the scope of the symbol-macro binding.  Multiple     <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> declarations applying to a single symbol-macro binding are handled     in the same way as multiple <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> declarations that apply to a     single variable binding. <br/>  <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ftype">ftype</a>     This declaration is not valid when the lexically apparent binding     is a macro binding rather than a function binding.  (This is because     <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ftype">ftype</a> declares the functional binding of the name to be of a particular     subtype of <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>, and macros are not <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>s.) <br/>  <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a>     <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> declarations for symbol-macro bindings should be treated in      exactly the same way as <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> declarations for variable bindings.     In other words, such a declaration specifies that the bindings of     of the specified symbol-macros are never used. <br/>  <a class="declaration-reference" href="../chapter-3.xhtml#declaration-dynamic-extent">dynamic-extent</a>     This declaration is not valid when the lexically apparent binding     is a symbol-macro or macro binding rather than a variable or     function binding. <br/>  <a class="symbol-reference" href="../chapter-3.xhtml#symbol-notinline">notinline</a>     In the presence of <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a> definitions, this declaration     affects references to macros in exactly the same way that it affects     references to functions.  When the lexically apparent binding is a      macro that also has a <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a> definition, this declaration can      be used to indicate to a language processor that the macro <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> 
    <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a>)</span>
</span></code></pre> definition should be used.  [<span class="issue-reference error">issue:Issue DEFINE-COMPILER-MACRO.</span>]     A <a class="symbol-reference" href="../chapter-3.xhtml#symbol-notinline">notinline</a> declaration for a macro has otherwise has no effect on     its expansion.  Implementations are not free to ignore this declaration. <br/>  <a class="declaration-reference" href="../chapter-3.xhtml#declaration-inline">inline</a>     To parallel treatment of <a class="symbol-reference" href="../chapter-3.xhtml#symbol-notinline">notinline</a>, in the presence of <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a>     definitions, this declaration affects references to macros in exactly     the same way that it affects references to functions.  When the lexically      apparent binding is a macro that also has a <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a> definition,      this declaration can be used to indicate to a language processor that      the <a class="symbol-reference" href="../chapter-25.xhtml#symbol-compiler-macro">compiler-macro</a> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">macro</span>)</span>
</span></code> definition should be used.  An     <a class="declaration-reference" href="../chapter-3.xhtml#declaration-inline">inline</a> declaration for a macro otherwise has no effect on its expansion.     Implementations are free to ignore this declaration. <br/>In those situations where the use of the declaration is not valid, the consequences of evaluating or compiling the program are undefined. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>This proposal is primarily an explicit restatement of things which have already been stated in other places, with some obvious interpolations added. <br/>Leaving the consequences undefined permits implementations to signal an error, to assign some implementation-specific interpretation to the declaration, or simply to ignore the declaration. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>Utah Common Lisp implements this proposal.  It currently ignores all declarations that apply to function or variable bindings when the lexically visible binding is a macro or symbol-macro.  The declarations are added to the environment in the normal way but are never examined by the interpreter or compiler.  The exception is that a <a class="symbol-reference" href="../chapter-3.xhtml#symbol-special">special</a> declaration will shadow a symbol-macro definition in the same way that it will shadow a lexical variable binding.  <br/>Neither HPCL-I nor Lucid <a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a> complain about <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ftype">ftype</a> or INLINE/NOTINLINE declarations when the lexically visible function "binding" is a macro. They are apparently being ignored.  KCL ignores all declarations that apply to function bindings <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">doesn</span><span class="syntax-quote">'<a class="section-reference" href="../chapter-26.xhtml#section-T">T</a></span> <span class="syntax-interned-symbol">yet</span> <span class="syntax-interned-symbol">support</span> <span class="syntax-interned-symbol">symbol-macros</span>)</span>
</span></code>. <br/></section><section id="section-Cost to implementors" class="section"><h2 class="section-title">Cost to implementors</h2>Presumably small.   <br/></section><section id="section-Cost to users" class="section"><h2 class="section-title">Cost to users</h2>It seems unlikely that this proposal would be an incompatible change that causes many user programs to break, particularly given the relative newness of symbol-macros and compiler-macros. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>More complete specification of the language and less chance for confusion to arise later on. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>Some people might be bothered by the asymmetry between the handling of <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> and <a class="declaration-reference" href="../chapter-3.xhtml#declaration-ftype">ftype</a> declarations.  Strictly speaking, the special handling for <a class="symbol-reference" href="../chapter-25.xhtml#symbol-type">type</a> declarations is unnecessary since one could explicitly include the <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> form in the expansion of the symbol-macro.  Other people probably think that the notational convenience outweighs the asymmetry. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>&mdash;&mdash;<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>