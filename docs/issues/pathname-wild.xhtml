<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” PATHNAME-WILD</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">PATHNAME-WILD</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-pathname-wild:new-functions">Proposal NEW-FUNCTIONS</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Performance Impact">Performance Impact</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue PATHNAME-WILD [Cleanup] [ADDITION]</h1><h2>Related issues</h2><ul><a class="issue-reference" href="../issues/pathname-component-value.xhtml#issue-pathname-component-value">PATHNAME-COMPONENT-VALUE</a><a class="issue-reference" href="../issues/pathname-logical.xhtml#issue-pathname-logical">PATHNAME-LOGICAL</a></ul><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, as amended, Jun 89 X3j13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>Pathnames (pp410-413) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>21-Jul-88, Version 1 by Pitman 06-Oct-88, Version 2 by Pitman 9-May-89, Version 3 by Moon (small fixes) 10-May-89, Version 4 by Moon (add two more functions) 13-May-89, Version 5 by Moon (minor cleanups, add clarification) 19-Jun-89, Version 6 by Moon (revise based on extensive discussion in the cleanup subcommittee; rewrite the description of <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> so it is possible to understand it) 23-Jun-89, Version 7 by Moon (simplify <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> based on last minute discussion of logical pathnames) 2-Jul-89, Version 8 by Masinter (<a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <a class="function-reference" href="../chapter-12.xhtml#function--">-</a>&gt; True as per Jun89 X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  Some file systems provide more complex conventions for wildcards than   simple component-wise wildcards <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:WILD</span>)</span>
</span></code></pre>. For example, <br/>  "F*O" might mean:     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> a normal three character name     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> a three-character name, with the middle char wild     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> at least a two-character name, with the middle 0 or more chars wild     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> a wild match spanning multiple directories <br/>  "&gt;foo&gt;*&gt;bar" might imply:     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory is named "*"     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory is :WILD     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> there may be zero or more :WILD middle directories     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory name matches any one-letter name <br/>  "&gt;foo&gt;**&gt;bar" might mean     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory is named "**"     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory is :WILD     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> there may be zero or more :WILD middle directories     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> the middle directory name matches any two-letter name <br/>  Some file systems support even more complex wildcards, for example   regular expressions. <br/>  The <a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a> pathname model does not specify a way to represent complex   wildcards, which means, for example, that <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"F*O"</span>)</span>
</span></code></pre>   cannot be recognized by portable code as containing a wildcard. <br/>  Common Lisp provides only the first of these four common operations   on wildcard pathnames: <ol><li> Enumerate the set of existing files that match the pathname; this is provided by the <a class="function-reference" href="../chapter-20.xhtml#function-directory">directory</a> function. </li><li> Test whether a pathname contains wildcards. </li><li> Test whether a pathname matches a wildcard pathname. </li><li> Translate one pathname into another according to a mapping specified by a pair of wildcard pathnames. <br/></li></ol></section><section class="status-passed proposal" id="issue-pathname-wild:new-functions"><h2 class="section-title">Proposal NEW-FUNCTIONS</h2>  Introduce the following three functions: <br/><ol><li> <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> pathname &amp;optional field-key   Tests a pathname for the presence of wildcard components.  If the first   argument is not a pathname, string, or file stream an error of type   <a class="type-reference" href="../chapter-4.xhtml#type-type-error">type-error</a> is signalled. <br/>  If no &lt;field-key&gt; is provided, or the &lt;field-key&gt; is <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, the result is   true if &lt;pathname&gt; has any wildcard components, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> if &lt;pathname&gt; has none.   If a non-null &lt;field-key&gt; is provided, it must be one of :HOST, :DEVICE,   :DIRECTORY, :NAME, :TYPE, or :VERSION.  In this case, the result is true   if the indicated component of &lt;pathname&gt; is a wildcard, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> if the   component is not a wildcard.  Note that not all implementations   support wildcards in all fields, according to <a class="issue-reference" href="../issues/pathname-component-value.xhtml#issue-pathname-component-value">pathname-component-value</a>. <br/></li><li> <a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a> pathname wildcard </li></ol><br/>    true if &lt;pathname&gt; matches &lt;wildcard&gt;, otherwise <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>.  The matching rules     are <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> but should be consistent with the     <a class="function-reference" href="../chapter-20.xhtml#function-directory">directory</a> function.  Missing components of &lt;wildcard&gt; default to :WILD. <br/>    If either argument is not a pathname, string, or file stream an error     of type <a class="type-reference" href="../chapter-4.xhtml#type-type-error">type-error</a> is signalled.  It is valid for &lt;pathname&gt; to be a     wild pathname; a wildcard field in &lt;pathname&gt; will only match a     wildcard field in &lt;wildcard&gt;, i.e. the function is not commutative.     It is valid for &lt;wildcard&gt; to be a non-wild pathname. <br/>  3. <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> source from-wildcard to-wildcard &amp;key <br/>    Translates the pathname &lt;source&gt;, which matches &lt;from-wildcard&gt;, into     a corresponding pathname &lt;result&gt;, which matches &lt;to-wildcard&gt;, and     returns &lt;result&gt;. <br/>    The pathname &lt;result&gt; is &lt;to-wildcard&gt; with each wildcard or missing     field replaced by a portion of &lt;source&gt;.  A "wildcard field" is a     pathname component with a value of :WILD, a :WILD element of a     list-valued directory component, or an <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> portion     of a component, such as the "*" in the complex wildcard string     "foo*bar" that some implementations support.  An implementation that     adds other wildcard features, such as regular expressions, must define     how <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> extends to those features.  A "missing field" is     a pathname component with a value of <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>. <br/>    The portion of &lt;source&gt; that is copied into &lt;result&gt; is implementation     defined.  Typically it is determined by the user interface conventions     of the file systems involved.  Usually it is the portion of &lt;source&gt;     that matches a wildcard field of &lt;from-wildcard&gt; that is in the same     position as the wildcard or missing field of &lt;to-wildcard&gt;.  If there     is no wildcard field in &lt;from-wildcard&gt; at that position, then usually     it is the entire corresponding pathname component of &lt;source&gt;, or in     the case of a list-valued directory component, the entire corresponding     list element.  For example, if the name components of &lt;source&gt;,     &lt;from-wildcard&gt;, and &lt;to-wildcard&gt; are "gazonk", "gaz*", and "h*"     respectively, then in most file systems, the wildcard fields of the     name component of &lt;from-wildcard&gt; and &lt;to-wildcard&gt; are each "*", the     matching portion of &lt;source&gt; is "onk", and the name component of     &lt;result&gt; is "honk".  However, the exact behavior of <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a>     cannot be dictated by the Common Lisp language and must be allowed to     vary, depending on the user interface conventions of the file systems     involved. <br/>    During the copying of a portion of &lt;source&gt; into &lt;result&gt;, additional     <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> translations of alphabetic case or file naming     conventions might occur, especially when &lt;from-wildcard&gt; and     &lt;to-wildcard&gt; are for different hosts. <br/>    If any of the first three arguments is not a pathname, string, or file     stream an error of type <a class="type-reference" href="../chapter-4.xhtml#type-type-error">type-error</a> is signalled.  It is valid for     &lt;source&gt; to be a wild pathname; in general this will produce a wild     result.  It is valid for &lt;from-wildcard&gt; and/or &lt;to-wildcard&gt; to be     non-wild pathnames.  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a> <span class="syntax-interned-symbol">&lt;source&gt;</span> <span class="syntax-interned-symbol">&lt;from-wildcard&gt;</span>)</span>
</span></code></pre> must     be true or an error is signalled. <br/>    There are no specified keyword arguments for <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a>, but     implementations are permitted to extend it by adding keyword arguments.     There is one specified return value from <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a>;     implementations are permitted to extend it by returning additional     values. <br/>    Implementation guideline: one file system performs this operation by     examining each piece of the three pathnames in turn, where a piece is a     pathname component or a list element of a structured component such as     a hierarchical directory.  Hierarchical directory elements in     &lt;from-wildcard&gt; and &lt;to-wildcard&gt; are matched by whether they are     wildcards, not by depth in the directory hierarchy.  If the piece in     &lt;to-wildcard&gt; is present and not wild, it is copied into the result.     If the piece in &lt;to-wildcard&gt; is :WILD or <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, the piece in &lt;source&gt; is     copied into the result.  Otherwise, the piece is &lt;to-wildcard&gt; might be     a complex wildcard such as "foo*bar" and the piece in &lt;from-wildcard&gt;     should be wild; the portion of the piece in &lt;source&gt; that matches the     wildcard portion of the piece in &lt;from-wildcard&gt; replaces the wildcard     portion of the piece in &lt;to-wildcard&gt; and the value produced is used in     the result. <br/>  4. Clarify that the functions <a class="function-reference" href="../chapter-21.xhtml#function-open">open</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <a class="macro-reference" href="../chapter-21.xhtml#macro-with-open-file">with-open-file</a>)</span>
</span></code></pre>, <a class="function-reference" href="../chapter-20.xhtml#function-probe-file">probe-file</a>,   <a class="function-reference" href="../chapter-20.xhtml#function-file-write-date">file-write-date</a>, <a class="function-reference" href="../chapter-20.xhtml#function-file-author">file-author</a>, and <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a> only accept non-wildcard   pathnames and signal an error if given a pathname for which   <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> returns true. <br/>  5. Clarify that the functions <a class="function-reference" href="../chapter-20.xhtml#function-rename-file">rename-file</a>, <a class="function-reference" href="../chapter-20.xhtml#function-delete-file">delete-file</a>, <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a>, and   <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> have <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> consequences when given a   wildcard pathname.  Each function might signal an error or might operate   on all files that match the wildcard pathname. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  ;The following examples are not portable.  They are written to run<br/>  ;with particular file systems and particular wildcard conventions.<br/>  ;Other implementations will behave differently.  These examples are<br/>  ;intended to be illustrative, not to be prescriptive.<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-keyword-symbol">:WILD</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-keyword-symbol">:WILD</span>)</span> <span class="syntax-keyword-symbol">:NAME</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-make-pathname">make-pathname</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-keyword-symbol">:WILD</span>)</span> <span class="syntax-keyword-symbol">:TYPE</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-string">"S:&gt;foo&gt;**&gt;"</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>   ;Lispm<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:NAME</span> <span class="syntax-string">"F*O"</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>    ;Most places<br/><br/>  ;This example assumes one particular set of wildcard conventions<br/>  ;Not all file systems will run this example exactly as written<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">FROM</span> <span class="syntax-interned-symbol">TO</span>)</span>
    <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">FILE</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-20.xhtml#function-directory">directory</a> <span class="syntax-interned-symbol">FROM</span>)</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="../chapter-20.xhtml#function-rename-file">rename-file</a> <span class="syntax-interned-symbol">FILE</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-interned-symbol">FILE</span> <span class="syntax-interned-symbol">FROM</span> <span class="syntax-interned-symbol">TO</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-string">"/usr/me/*.lisp"</span> <span class="syntax-string">"/dev/her/*.l"</span>)</span>
</span></code></pre><br/>    ;Renames /usr/me/init.lisp to /dev/her/init.l<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-string">"/usr/me/pcl*/*"</span> <span class="syntax-string">"/sys/pcl/*/"</span>)</span>
</span></code></pre><br/>    ;Renames /usr/me/pcl-5-may/low.lisp to /sys/pcl/pcl-5-may/low.lisp<br/>    ;In some file systems the result might be /sys/pcl/5-may/low.lisp<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-string">"/usr/me/pcl*/*"</span> <span class="syntax-string">"/sys/library/*/"</span>)</span>
</span></code></pre><br/>    ;Renames /usr/me/pcl-5-may/low.lisp to /sys/library/pcl-5-may/low.lisp<br/>    ;In some file systems the result might be /sys/library/5-may/low.lisp<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-string">"/usr/me/foo.bar"</span> <span class="syntax-string">"/usr/me2/"</span>)</span>
</span></code></pre><br/>    ;Renames /usr/me/foo.bar to /usr/me2/foo.bar<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">RENAME-FILES</span> <span class="syntax-string">"/usr/joe/*-recipes.text"</span> <span class="syntax-string">"/usr/jim/cookbook/joe's-*-rec.text"</span>)</span>
</span></code></pre><br/>    ;Renames /usr/joe/lamb-recipes.text to /usr/jim/cookbook/joe's-lamb-rec.text<br/>    ;Renames /usr/joe/pork-recipes.text to /usr/jim/cookbook/joe's-pork-rec.text<br/>    ;Renames /usr/joe/veg-recipes.text to /usr/jim/cookbook/joe's-veg-rec.text<br/><br/>  ;This example assumes one particular set of wildcard conventions<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"foo*"</span> <span class="syntax-string">"*baz"</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "barbaz"<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"foo*"</span> <span class="syntax-string">"*"</span>)</span>)</span>
</span></code></pre>    <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "foobar"<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"foobar"</span> <span class="syntax-string">"*"</span>    <span class="syntax-string">"foo*"</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "foofoobar"<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname-name">pathname-name</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"bar"</span>    <span class="syntax-string">"*"</span>    <span class="syntax-string">"foo*"</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "foobar"<br/><br/>  ;Using Unix syntax and the wildcard conventions used by the<br/>  ;particular version of Unix on which I tried this:<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-namestring">namestring</a>
    <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"/usr/dmr/hacks/frob.l"</span>
                        <span class="syntax-string">"/usr/d*/hacks/*.l"</span>
                        <span class="syntax-string">"/usr/d*/backup/hacks/backup-*.*"</span>)</span>)</span>
</span></code></pre><br/>   <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "/usr/dmr/backup/hacks/backup-frob.l"<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-namestring">namestring</a>
    <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"/usr/dmr/hacks/frob.l"</span>
                        <span class="syntax-string">"/usr/d*/hacks/fr*.l"</span>
                        <span class="syntax-string">"/usr/d*/backup/hacks/backup-*.*"</span>)</span>)</span>
</span></code></pre><br/>   <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "/usr/dmr/backup/hacks/backup-ob.l"<br/><br/>  ;This is similar to the above example but uses two different hosts,<br/>  ;U: which is a Unix and V: which is a VMS.  Note the translation<br/>  ;of file type and alphabetic case conventions.<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-namestring">namestring</a>
    <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"U:/usr/dmr/hacks/frob.l"</span>
                        <span class="syntax-string">"U:/usr/d*/hacks/*.l"</span>
                        <span class="syntax-string">"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*"</span>)</span>)</span>
</span></code></pre><br/>   <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-FROB.LSP"<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-namestring">namestring</a>
    <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <span class="syntax-string">"U:/usr/dmr/hacks/frob.l"</span>
                        <span class="syntax-string">"U:/usr/d*/hacks/fr*.l"</span>
                        <span class="syntax-string">"V:SYS$DISK:[D*.BACKUP.HACKS]BACKUP-*.*"</span>)</span>)</span>
</span></code></pre><br/>   <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "V:SYS$DISK:[DMR.BACKUP.HACKS]BACKUP-OB.LSP"<br/><br/>  ;This example presumes background information described in <a class="issue-reference" href="../issues/pathname-logical.xhtml#issue-pathname-logical">pathname-logical</a><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">TRANSLATE-LOGICAL-PATHNAME-1</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-interned-symbol">RULES</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">RULE</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-assoc">assoc</a> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-interned-symbol">RULES</span> <span class="syntax-keyword-symbol">:TEST</span> <span class="syntax-function">#'<a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a></span>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-unless">unless</a> <span class="syntax-interned-symbol">RULE</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-error">error</a> <span class="syntax-string">"No translation rule for ~A"</span> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a>)</span>)</span>
      <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-first">first</a> <span class="syntax-interned-symbol">RULE</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-second">second</a> <span class="syntax-interned-symbol">RULE</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">TRANSLATE-LOGICAL-PATHNAME-1</span> <span class="syntax-string">"FOO:CODE;BASIC.LISP"</span>
                        <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-string">"FOO:DOCUMENTATION;"</span> <span class="syntax-string">"MY-UNIX:/doc/foo/"</span>)</span>
                          <span class="syntax-cons">(<span class="syntax-string">"FOO:CODE;"</span>          <span class="syntax-string">"MY-UNIX:/lib/foo/"</span>)</span>
                          <span class="syntax-cons">(<span class="syntax-string">"FOO:PATCHES;*;"</span>     <span class="syntax-string">"MY-UNIX:/lib/foo/patch/*/"</span>)</span>)</span></span>)</span>
</span></code></pre><br/>   <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; the pathname MY-UNIX:/lib/foo/basic.l<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  1,2,3. These three functions provide a standardized interface to the   idiosyncratic wildcard functionality of each host file system. <br/><ol><li> <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> makes it possible to detect wild pathnames reliably and do something useful (give up, merge out the bothersome components, call <a class="function-reference" href="../chapter-20.xhtml#function-directory">directory</a> for a list of matching pathnames, etc.) <br/>2,3. <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> is needed by many application programs that deal with wildcard pathnames.  <a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a> and <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> are needed by logical pathnames.  The <a class="issue-reference" href="../issues/pathname-logical.xhtml#issue-pathname-logical">pathname-logical</a> proposal cannot be implemented without these features.  Implementing <a class="issue-reference" href="../issues/pathname-logical.xhtml#issue-pathname-logical">pathname-logical</a> could involve adding additional capabilities to <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a>, depending on the type of file system used, but those capabilities do not need to be in the standard. <br/>4. Since these functions return a value connected with one file, there is no meaningful way to extend them to work on wildcard pathnames.  It seems best to specify that they signal an error, rather than leaving the consequences undefined. <br/>5. The consequences are proposed to be <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-defined">implementation-defined</a> because current practice varies and no one wants to change. <br/></li></ol></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Presumably no implementation supports the proposal exactly as stated.   Symbolics Genera has had similar features under different names for many   years: <br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">SEND</span> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:WILD-P</span>)</span>
</span></code></pre> returns a value such as <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, :NAME, :TYPE,     etc., indicating the first wild field. <br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">SEND</span> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:NAME-WILD-P</span>)</span>
</span></code></pre>, <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">SEND</span> <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-keyword-symbol">:DIRECTORY-WILD-P</span>)</span>
</span></code></pre>,     etc. test individual fields. <br/>    The :TRANSLATE-WILD-PATHNAME, :TRANSLATE-WILD-PATHNAME-REVERSIBLE, and     :PATHNAME-MATCH messages resemble <a class="function-reference" href="../chapter-19.xhtml#function-translate-pathname">translate-pathname</a> and     <a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a>. <br/>  The Explorer also supports the messages :WILD-P <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">although</span> <span class="syntax-interned-symbol">it</span> <span class="syntax-interned-symbol">only</span>
  <span class="syntax-interned-symbol">returns</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <a class="macro-reference" href="../chapter-5.xhtml#macro-or">or</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>)</span>
</span></code></pre>, :NAME-WILD-P, etc., :TRANSLATE-WILD-PATHNAME, and   :PATHNAME-MATCH. <br/>  Points 4 and 5 are current practice as far as the authors are aware.   The Explorer permits <a class="function-reference" href="../chapter-20.xhtml#function-delete-file">delete-file</a> on a wild pathname, meaning to delete   all files that match. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Many implementations probably have a substrate which is capable of this   or something similar already. In such cases, it's a relatively small   matter to add the proposed interface. <br/>  Even in cases where an implementation doesn't have ready code, it's clearly   better for the implementor to write that code once and for all than to ask   each user of wildcards to write it. <br/>  Since the detailed behavior is at the implementor's discretion, the cost   is unlikely to be large.  Some file systems will do all the work and the   implementor need only provide an interface to the file system or to a   standard library routine.  For other file systems the implementor has to   write the actual matching and translation algorithms. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None.  This change is upward compatible. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Wild pathnames would continue to be mistaken for ordinary pathnames in   many situations.  User programs that deal with wildcard pathnames would   have to operate on <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> representations and hence   would not be easily portable. <br/>  The biggest cost is that the logical pathnames proposal would be stymied. <br/></section><section id="section-Performance Impact" class="section"><h2 class="section-title">Performance Impact</h2>  None. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  A more complete set of wildcard pathname operations.  Portable user   programs that deal with wildcard pathnames will be more consistent   and reliable.  A portable system construction tool can be written   and the foundations are laid for a `logical pathname' facility   <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">proposed</span> <span class="syntax-interned-symbol">separately</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">PATHNAME-LOGICAL</span>)</span>
</span></code></pre>. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  This change would make some portable code less kludgey. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  There was some question about the name. The name PATHNAME-WILD-P   suggests a ``slot'' of a pathname <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">like</span> <a class="function-reference" href="../chapter-19.xhtml#function-pathname-host">pathname-host</a>)</span>
</span></code></pre>,   while <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> suggests a type <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">like</span> <a class="function-reference" href="../chapter-21.xhtml#function-input-stream-p">input-stream-p</a>)</span>
</span></code></pre>.   The committee was split on what to call it. Since it is more   like a type than a slot, the name <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> was chosen. <br/>  It's been suggested that <a class="function-reference" href="../chapter-19.xhtml#function-wild-pathname-p">wild-pathname-p</a> and <a class="function-reference" href="../chapter-19.xhtml#function-pathname-match-p">pathname-match-p</a> be allowed   to return a value other than <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> to represent "truth", which would   somehow encode some additional information. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>