<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” EQUAL-STRUCTURE</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">EQUAL-STRUCTURE</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-equal-structure:maybe-status-quo">Proposal MAYBE-STATUS-QUO</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue EQUAL-STRUCTURE [NIL] [CLARIFICATION/CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed as amended, Jun 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> (p80), <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> (p81) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>18-Mar-88, Version 1 by Pitman 08-Jun-88, Version 2 by Masinter (add Benson's proposal) 23-Sep-88, Version 3 by Masinter (remove all but STATUS-QUO) 01-Oct-88, Version 4 by Masinter (fix description) 01-Oct-88, Version 5 by Pitman   (correct wording, add discussion) 11-Jan-89, Version 6 by Pitman   (attempt <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> correction) 15-Mar-89, Version 7 by Masinter (amended as per vote at Jan 89 X3J13) 3-Jul-89, Version 8, by Masinter (amended as per Jun89 X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  The behavior of <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> on structures is a subject of controversy.   At issue are whether these functions should descend the slots of structures   or use simply the structure's primitive identity (i.e., <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>) to test for   equivalence. <br/></section><section class="status-passed proposal" id="issue-equal-structure:maybe-status-quo"><h2 class="section-title">Proposal MAYBE-STATUS-QUO</h2>  Clarify that <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> do not descend any structures or data types   other than the ones explicitly specified here: <br/>   Type                     <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> Behavior        <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> Behavior <br/>   Number                     uses <a class="function-reference" href="../chapter-5.xhtml#function-eql">eql</a>               uses <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>    Character                  uses <a class="function-reference" href="../chapter-5.xhtml#function-eql">eql</a>               uses <a class="function-reference" href="../chapter-13.xhtml#function-char-equal">char-equal</a>    Cons                       descends               descends    <a class="symbol-reference" href="../chapter-2.xhtml#symbol-bit-vector">bit-vector</a>                 descends               descends    String                     descends               descends    Pathname                   magic per CLtL         same as <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a>    Structure                  uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>                <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">see</span> <span class="syntax-interned-symbol">below</span>)</span>
</span></code></pre>    other Array                uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>                descends    <a class="type-reference" href="../chapter-18.xhtml#type-hash-table">hash-table</a>                 uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>                <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">see</span> <span class="syntax-interned-symbol">below</span>)</span>
</span></code></pre>    Instance (<a class="type-reference" href="../chapter-4.xhtml#type-standard-object">standard-object</a>) uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>                uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>    Other                      uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>                uses <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> <br/>  Note that the order of this table is in some cases important, with upper   entries taking priority over lower ones. <br/>  <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> descends hash tables by first comparing the count of entries   and the :TEST function; if those are the same, it compares the   keys of the tables using the :TEST function and then the values   of the matching keys using <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> recursively. <br/>  <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> on two <a class="macro-reference" href="../chapter-8.xhtml#macro-defstruct">defstruct</a> objects 's1' and 's2', where one is a   non<a class="function-reference" href="../chapter-12.xhtml#function--">-</a>:TYPEed <a class="macro-reference" href="../chapter-8.xhtml#macro-defstruct">defstruct</a> and the other is typed, is false. <br/>  <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> on two <a class="macro-reference" href="../chapter-8.xhtml#macro-defstruct">defstruct</a> objects 's1' and 's2', where both are   non<a class="function-reference" href="../chapter-12.xhtml#function--">-</a>:TYPEed DEFSTRUCTS is true iff: <br/><ol><li> The type of 's1' is the same as the type of 's2' <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">this</span> <span class="syntax-interned-symbol">is</span>
   <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">same</span> <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">saying</span> <span class="syntax-interned-symbol">that</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <a class="macro-reference" href="../chapter-8.xhtml#macro-defstruct">defstruct</a> <span class="syntax-interned-symbol">name</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">s1</span></span><span class="syntax-quote">' <span class="syntax-interned-symbol">is</span></span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">same</span>
   <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">that</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">s2</span></span><span class="syntax-quote">'</span>)</span>
</span></code></pre>. </li><li> The value of each slot of 's1' is <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> to the value of the same slot of 's2' <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">where</span> <span class="syntax-string">"same"</span> <span class="syntax-interned-symbol">means</span> <span class="syntax-interned-symbol">same</span> <span class="syntax-interned-symbol">name</span>)</span>
</span></code></pre> <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">this</span> <span class="syntax-interned-symbol">is</span> <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
  <span class="syntax-interned-symbol">same</span> <span class="syntax-interned-symbol">as</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">slots</span></span><span class="syntax-quote">' <span class="syntax-interned-symbol">for</span></span> <span class="syntax-interned-symbol">standard-objects</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">CLOS</span>)</span>
</span></code></pre>. <br/></li></ol></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  There seem to be as many different equality primitives as there   are applications for them. None of the possible ways of changing   <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> or <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> are flawless. Given the inability to "fix" them,   it is better to leave them alone. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  We are unaware of any extensions to CLtL's set of operations,   although frequently users request them. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Since this seems to be compatible with the status quo, none. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Same <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Ongoing controversy about whether <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> "do the right thing". <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  A feeling that <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> exist and/or do what they do because serious   consideration was given and we consciously decided on a particular resolution   to the numerous questions that have come up about them. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  There seems to be wide debate about what the proper aesthetics for   how equality should work in Common Lisp. While the status quo is not   aesthetically more pleasing than the various alternatives, aesthetic   considerations vary widely. Different people model structures   differently. Sometimes the same person models structures differently in   different situations. The question of which should be descended and which   should not is a very personal one, and the aesthetic attractiveness of any   of these options will vary from person to person or application to   application. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  An earlier version of this issue with various alternatives was distributed   at the June 1988 X3J13 meeting. Since   this is a frequently raised issue, we thought we should submit it   as a clarification although there is no change to CLtL. <br/>  Options for which we considered proposals were:     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> removing <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> from the standard.     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> changing <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> to descend structures.     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> changing <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> to be case sensitive.     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> adding a :TEST keyword to <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a>.     <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> making <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> a generic function   All of these had some serious problems. <br/>  The cleanup committee supports option STATUS-QUO. <br/>  It would be useful if descriptions of <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> contained some sort   of additional commentary alluding to the complex issues discussed here.   The following is offered to the Editorial staff as a starting point: <br/>    Object equality is not a concept for which there is a uniquely     determined correct algorithm. The appropriateness of an equality     predicate can be judged only in the context of the needs of some     particular program. Although these functions take any type of     argument and their names sound very generic, <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> and <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> are     not appropriate for every application. Any decision to use or not     use them should be determined by what they are documented to do     rather than any abstract characterization of their function. If     neither <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> nor <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> is found to be appropriate in a particular     situation, programmers are encouraged to create another operator     that is appropriate rather than blame <a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> or <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a> for ``doing     the wrong thing.'' <br/> Additional Comments to Version 6: <br/>Version 6 attempts to fix some of the problems noted in Version 5. There are still some open questions. Only the "Proposal" part has been changed since Version 5; some of the costs, benefits &amp; other discussion is now incorrect. <br/>Kent says: <br/>Please read this very carefully before voting in favor of it. There were a lot of Yes votes for the last version, which I think had some serious bugs in it. This would be a very bad issue for us to screw up. <br/>Things that might need special attention: <br/> <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> Moon contends that standard practice in Symbolics Lisp is    for instances to be compared using <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> under <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a>, not by    descending. There may be performance issues involved here.    Some agreement needs to be reached. <br/> <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> Neither the previous version of the proposal nor CLtL was    clear on what happens to pathnames under <a class="function-reference" href="../chapter-5.xhtml#function-equalp">equalp</a>. This showed    up when I converted the presentation below. That issue should    be addressed as well. <br/>Hopefully if this version of the proposal isn't something you want to vote yes for, at least it's in a suitable form for easy line-item changes interactively in the meeting. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>