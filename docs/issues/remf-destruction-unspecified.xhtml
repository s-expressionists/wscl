<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” REMF-DESTRUCTION-UNSPECIFIED</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">REMF-DESTRUCTION-UNSPECIFIED</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-remf-destruction-unspecified:x3j13-mar-89">Proposal X3J13-MAR-89</a><ol> </ol></li><li><a href="#section-Test Cases">Test Cases</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Performance Impact">Performance Impact</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue REMF-DESTRUCTION-UNSPECIFIED [NIL] [CLARIFICATION/CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>v6 accepted by X3J13 with amendments to fix typos (see v7) on 16-1 vote </section><section id="section-References" class="section"><h2 class="section-title">References</h2>(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> (<a class="function-reference" href="../chapter-10.xhtml#function-get">get</a> ...) ...), <a class="function-reference" href="../chapter-10.xhtml#function-remprop">remprop</a>, (<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> (<a class="function-reference" href="../chapter-14.xhtml#function-getf">getf</a> ...) ...), <a class="macro-reference" href="../chapter-14.xhtml#macro-remf">remf</a> (pp165-167); <a class="function-reference" href="../chapter-17.xhtml#function-nreverse">nreverse</a> (p248); <a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a>, <a class="function-reference" href="../chapter-17.xhtml#function-delete-if">delete-if</a>, <a class="function-reference" href="../chapter-17.xhtml#function-delete-duplicates">delete-duplicates</a>, <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a>, <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute-if">nsubstitute-if</a> (pp254-256);  <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a>, <a class="function-reference" href="../chapter-14.xhtml#function-nreconc">nreconc</a> (p269); <a class="function-reference" href="../chapter-14.xhtml#function-nunion">nunion</a>, <a class="function-reference" href="../chapter-14.xhtml#function-nintersection">nintersection</a>, <a class="function-reference" href="../chapter-14.xhtml#function-nset-exclusive-or">nset-exclusive-or</a> (pp276-279). </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>11-Feb-87, Version 1 by Dave Andre (DLA@Symbolics.COM) 29-Oct-87, Version 2 by Pitman (flesh out proposals) 28-Nov-88, Version 3 by Pitman (revised presentation) 29-Nov-88, Version 4 by Pitman (slight editing per DLA) 15-Mar-89, Version 5 by Margolin (amendments discussed in Hawaii, removed -NOT functions) 17-Mar-89, Version 6 by Margolin (make NSUBSTITUTE* less vague) 05-Apr-89, Version 7 by Pitman (typos corrected per X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2> Currently, the exact nature of the side-effect performed by list  modification routines is not specified. <br/> Either the specific modifications allowed should be specified so that  programmers can rely on them and implementors can avoid accidentally  causing problems by introducing well-meaning optimizations, or else  the documentation should explicitly state that the effects are  unspecified so that programmers will not depend on them and   implementors will feel comfortable about doing interesting optimizations. <br/></section><section class="status-passed proposal" id="issue-remf-destruction-unspecified:x3j13-mar-89"><h2 class="section-title">Proposal X3J13-MAR-89</h2> Clarify that the way in which the destructive behavior of the  operators below is achieved is explicitly vague in a number of ways,  in order to provide individual implementations the necessary  flexibility to do useful optimizations. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-getf">getf</a> <span class="syntax-interned-symbol">place</span> <span class="syntax-interned-symbol">indicator</span>)</span> <span class="syntax-interned-symbol">value</span>)</span>
</span></code></pre>   is permitted to either <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> place or to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or   <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level list structure held by that place. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-14.xhtml#macro-remf">remf</a> <span class="syntax-interned-symbol">place</span> <span class="syntax-interned-symbol">indicator</span>)</span>
</span></code></pre>   is permitted to either <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> place or to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or   <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level list structure held by that place. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-get">get</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a> <span class="syntax-interned-symbol">indicator</span>)</span> <span class="syntax-interned-symbol">value</span>)</span>
</span></code></pre>   is constrained to behave exactly the same as   <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-getf">getf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-plist">symbol-plist</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a>)</span> <span class="syntax-interned-symbol">indicator</span>)</span> <span class="syntax-interned-symbol">value</span>)</span>
</span></code></pre>. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-remprop">remprop</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a> <span class="syntax-interned-symbol">indicator</span>)</span>
</span></code></pre>   is constrained to behave exactly the same as   <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-14.xhtml#macro-remf">remf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-plist">symbol-plist</a> <a class="symbol-reference" href="../chapter-2.xhtml#symbol-symbol">symbol</a>)</span> <span class="syntax-interned-symbol">indicator</span>)</span>
</span></code></pre>. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-nreverse">nreverse</a> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a>)</span>
</span></code></pre>   when sequence is a list, is permitted to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or    <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level list structure in that sequence.   when sequence is an array is permitted to re-order the elements    of the given sequence in order to produce the resulting array. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a> <span class="syntax-interned-symbol">object</span> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>   when sequence is a list, is permitted to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or    <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level list structure held in that sequence.   when sequence is an array is permitted to change the dimensions    of the array and to slide its elements into new positions without    permuting them to produce the resulting array. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-delete-if">delete-if</a> <span class="syntax-interned-symbol">test</span> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>   is constrained to behave exactly like   <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a>
	  <span class="syntax-keyword-symbol">:TEST</span> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">ITEM</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-funcall">funcall</a> <span class="syntax-interned-symbol">test</span> <span class="syntax-interned-symbol">ITEM</span>)</span>)</span></span>
	  <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-delete-duplicates">delete-duplicates</a> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>   when sequence is a list, is permitted to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or    <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level list structure held in that sequence.   when sequence is an array is permitted to change the dimensions    of the array and to slide its elements into new positions without    permuting them to produce the resulting array. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nreconc">nreconc</a> <a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-interned-symbol">tail</span>)</span>
</span></code></pre>   is constrained to have side-effect behavior equivalent to:   <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-nreverse">nreverse</a> <a class="function-reference" href="../chapter-14.xhtml#function-list">list</a>)</span> <span class="syntax-interned-symbol">tail</span>)</span>
</span></code></pre>. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nunion">nunion</a> <span class="syntax-interned-symbol">list1</span> <span class="syntax-interned-symbol">list2</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nintersection">nintersection</a> <span class="syntax-interned-symbol">list1</span> <span class="syntax-interned-symbol">list2</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nset-exclusive-or">nset-exclusive-or</a> <span class="syntax-interned-symbol">list1</span> <span class="syntax-interned-symbol">list2</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>   is permitted to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any part, <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> or <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>, of the top-level of   any of the given lists. <br/>  Note, however, that since this side-effect is not required,   these functions should still not be used in for-effect-only   positions in portable code. <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">lists</span>)</span>
</span></code></pre>   is defined using the following recursive relationship: <br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">args</span>)</span>
</span></code></pre> == <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">args</span>)</span>
</span></code></pre>     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-interned-symbol">arg</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; arg     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-interned-symbol">arg1</span> <span class="syntax-interned-symbol">arg2</span>)</span>
</span></code></pre> has the side effect of <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-rplacd">rplacd</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-last">last</a> <span class="syntax-interned-symbol">arg1</span>)</span> <span class="syntax-interned-symbol">arg2</span>)</span>
</span></code></pre>, 		      and returns arg1      <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-interned-symbol">arg1</span> <span class="syntax-interned-symbol">arg2</span> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">args</span>)</span>
</span></code></pre> == <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-interned-symbol">arg1</span> <span class="syntax-interned-symbol">arg2</span>)</span> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">args</span>)</span>
</span></code></pre> <br/>  [If a previous cleanup issue prohibited <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> as a non-last argument    then ignore the <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-symbol">.</span> <span class="syntax-interned-symbol">args</span>)</span>
</span></code></pre> case.] <br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a> <span class="syntax-interned-symbol">new-object</span> <span class="syntax-interned-symbol">old-object</span> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute-if">nsubstitute-if</a> <span class="syntax-interned-symbol">new-object</span> <span class="syntax-interned-symbol">test</span> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>   is required to <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> any <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">a</span> <a class="function-reference" href="../chapter-14.xhtml#function-list">list</a>)</span>
</span></code></pre> or <a class="function-reference" href="../chapter-15.xhtml#function-aref">aref</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">it</span><span class="syntax-quote">'<span class="syntax-interned-symbol">s</span></span>
  <span class="syntax-interned-symbol">a</span> <a class="function-reference" href="../chapter-15.xhtml#function-vector">vector</a>)</span>
</span></code></pre> of <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> which is required to be replaced with   NEW-OBJECT.  If <a class="type-reference" href="../chapter-17.xhtml#type-sequence">sequence</a> is a list, none of the <a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a>s of the   top-level list may be modified.  These functions, therefore, may be   used in for-effect-only positions in code (some may find this   stylistically distasteful, though). <br/> Note: The above clarifications are not intended as complete functional  descriptions. They are intended to augment <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">rather</span> <span class="syntax-interned-symbol">than</span> <span class="syntax-interned-symbol">to</span> <a class="function-reference" href="../chapter-17.xhtml#function-replace">replace</a>)</span>
</span></code></pre>  other descriptions already in effect. <br/></section><section id="section-Test Cases" class="section"><h2 class="section-title">Test Cases</h2><pre> For <a class="function-reference" href="../chapter-14.xhtml#function-getf">getf</a>...<br/><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">D</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">E</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">F</span></span>)</span>)</span>
</span></code></pre>    ==&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-cddr">cddr</a> <span class="syntax-interned-symbol">FOO</span>)</span>)</span>
</span></code></pre>                  ==&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-14.xhtml#macro-remf">remf</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a>				           ==&gt; ??<br/><br/>    In Symbolics Common Lisp, <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a> holds <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span>)</span>
</span></code></pre>.<br/>    CLtL allows other interpretations. eg, <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a> might hold<br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span>
</span></code></pre>, <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>
</span></code></pre>, <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">C</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>
</span></code></pre> or <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span>)</span>
</span></code></pre>.<br/>    Under this proposal, any of these interpretations <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">others</span> <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">well</span>)</span>
</span></code></pre><br/>    would still be valid<br/><br/> For <a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a>...<br/><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span>)</span>)</span>
</span></code></pre>   ==&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a> <span class="syntax-interned-symbol">FOO</span>)</span>)</span>
</span></code></pre>         ==&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-interned-symbol">FOO</span>)</span>)</span>
</span></code></pre>   ==&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">C</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a>                          ==&gt; ??<br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-cdr">cdr</a> <span class="syntax-interned-symbol">FOO</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> <span class="syntax-interned-symbol">BAR</span>)</span>)</span>
</span></code></pre>     ==&gt; ??<br/><br/>    In Symbolics Common Lisp, these last two expressions return <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span>)</span>
</span></code></pre> and <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>.<br/>    Under this proposal, either of these interpretations <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">others</span>
    <span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">well</span>)</span>
</span></code></pre> would be valid.<br/><br/> For <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a>...<br/><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">D</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">E</span></span>)</span>
	  <span class="syntax-interned-symbol">BAR</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">F</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">G</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">H</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">I</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">J</span></span>)</span>
	  <span class="syntax-interned-symbol">BAZ</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">K</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">L</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">M</span></span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-interned-symbol">BAZ</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">foo</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-baz">baz</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">C</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">D</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">E</span></span>)</span>
	  <span class="syntax-interned-symbol">BAR</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">F</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">G</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">H</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">I</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">J</span></span>)</span>
	  <span class="syntax-interned-symbol">BAZ</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">K</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">L</span></span> <span class="syntax-quote">'<span class="syntax-interned-symbol">M</span></span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-interned-symbol">BAR</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-interned-symbol">BAZ</span>)</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre> <br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">foo</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">C</span> <span class="syntax-interned-symbol">D</span> <span class="syntax-interned-symbol">E</span> <span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">F</span> <span class="syntax-interned-symbol">G</span> <span class="syntax-interned-symbol">H</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">J</span> <span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/>    <a class="index/code-reference" href="../chapter-1.xhtml#index/code-baz">baz</a> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">K</span> <span class="syntax-interned-symbol">L</span> <span class="syntax-interned-symbol">M</span>)</span>
</span></code></pre><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2> Implementations already vary widely on their implementation techniques  for these functions. This effectively clarifies the status quo, making  it more clear to programmers what they may rely upon in portable code. <br/> In the case of <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a>, however, the precise definition is useful because  it is what users expect, it is how <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> has been defined for many  years, and it is how current implementations generally work.  It may  not always be the most efficient way (e.g. it may result in invisible  pointers in CDR-coded implementations), but callers of <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> probably  use it specifically for its precise side effects. <br/> In the case of <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a>, this seems like the only reasonable  implementation mechanism, and there doesn't seem to be a reason not to  guarantee it. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2> All valid implementations are believed to comply with the vague  definitions.  Symbolics Genera 7.2 and Sun Common Lisp 2.1.3 appear to  conform to the <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> spec. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2> None. This is probably the status quo for most implementors.  If there  are any implementations that don't implement <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> and <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a> as  above <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">which</span> <span class="syntax-interned-symbol">I</span> <span class="syntax-interned-symbol">doubt</span>)</span>
</span></code></pre> they will have to be changed. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2> This change would not affect programs coded with "good programming  practice".  That is, only programs which rely on currently undocumented  features would be in any danger of breaking.  In fact, those programs  are already in such danger, and this change to the documentation would  just publicize it.  The clarification would -encourage<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> good programming  practice by warning people to only obey the published contract of the  above-mentioned functions. <br/> There is, however, no automatic technique for making this check for  programs already in error. Bugs due to unexpected side-effects are in  general among the hardest to reckon with. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2> Programmers may naively believe there is only one possible or reasonable  implementation of these functions. Some implementors may shy away from  reasonable optimizations out of a paranoid belief that deviating from   some vague, unspoken rules will lead to programmer unrest. Making these  things explicitly vague clarifies the implementor's rights in a way that  permits numerous useful optimizations. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2> Users would be discouraged from taking advantage of subtle details  of these destructive operations because such details would be explicitly  not guaranteed to be portable. <br/> Implementations can improve performance of many of the above-mentioned  functions when they are not under the constraint to implement them  in a highly constrained fashion. For example, in Symbolics systems,  <a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a> of a cdr-coded list could use the implementation primitive  %CHANGE-LIST-TO-CONS rather than <a class="function-reference" href="../chapter-14.xhtml#function-rplacd">rplacd</a> to avoid creating forwarding  pointers. <br/> Garbage collection effectiveness can also be improved. For example,  all of the destructive operations which remove objects (eg, <a class="macro-reference" href="../chapter-14.xhtml#macro-remf">remf</a>)  could remove <a class="function-reference" href="../chapter-14.xhtml#function-car">car</a> pointers to removed objects which are more volatile  than the list itself, assisting the garbage collector and thereby  improving memory usage and paging performance. <br/> Tightening the definition of <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> and <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a> permits users to  predict their programs' behavior more precisely. <br/>Non-Benefits: <br/> Users who inadvertently depend on side-effect behavior may be rudely  surprised when moving between implementations. <br/> Compatibility with older Lisp dialects is diminished. <br/> Implementors have less flexibility in implementing <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> efficiently.  This is true of <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a>, but this is less likely to cause problems. <br/></section><section id="section-Performance Impact" class="section"><h2 class="section-title">Performance Impact</h2> Metering in Symbolics test  systems have shown that there are substantial  performance gains to be had by allowing implementations flexibility in  these areas. <br/> In the case of <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a>, this implementation flexibility, and hence  potential performance improvements, is sacrificed. <br/> If anyone ever invents CAR-coding, the required implementation of  <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a> could be a performance hindrance. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2> Most of these functions implement abstract operations. For example,  <a class="function-reference" href="../chapter-10.xhtml#function-remprop">remprop</a> implements an abstract operation on a "property list".  Proper language design should not encourage people to delve below the  level of abstraction into the nitty gritty. <br/> <a class="function-reference" href="../chapter-14.xhtml#function-nconc">nconc</a> is a "less abstract" function than the rest of the functions  described above.  It is usually used precisely because of the way it  interacts with list implementation.  Similarly for <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a>. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2> Andre's original version of this proposal pushed for explicitly vague  descriptions of these functions' side-effect behavior.  He believes  that if users want more predictability from these functions, they  should write private variants that implement whatever predictability  they require.  <br/> Pitman originally opposed this position because he weighed portability  a higher concern. Since the original discussion, however, his views on  how to resolve this priority have been refined, and he now believes  that leaving things vague is appropriate. As such, he now supports what  is effectively Andre's original proposal. <br/> Pitman and Andre supported version 4.  [I don't know how they feel  about v6 &ndash; Barmar]. <br/> Moon supports version 6. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>