<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” METHOD-INITFORM</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">METHOD-INITFORM</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-method-initform:allow-call-next-method">Proposal ALLOW-CALL-NEXT-METHOD</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#issue-method-initform:forbid-call-next-method">Proposal FORBID-CALL-NEXT-METHOD</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-adoption">Cost of non-adoption</a><ol> </ol></li><li><a href="#section-Performance impact">Performance impact</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Esthetics">Esthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue METHOD-INITFORM [NIL] [CLARIFICATION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2>88-002R p.2-12 </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>29-Apr-90, Version 1 by Moon 30-Apr-90, Version 2 by Moon (update current practice) 4-May-90, Version 3 by Moon (update discussion and current practice) 5-Jun-90, Version 4 by Moon (update current practice) 8-Jun-90, Version 5 by Moon (update current practice) </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2>  Should <a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">CALL-NEXT-METHOD</a> and <a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">NEXT-METHOD-P</a> be allowed in initforms for   optional and keyword parameters and <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-aux">&amp;AUX</a> variables of methods?  The   document currently allows them only in the body of a method, not in forms   embedded in the lambda-list, although it takes a close reading of the   document to discern this. <br/>  There are two proposals in this issue. <br/>  This is Symbolics issue #15. <br/></section><section class="status-unknown proposal" id="issue-method-initform:allow-call-next-method"><h2 class="section-title">Proposal ALLOW-CALL-NEXT-METHOD</h2>  Expand the lexical scope of <a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">CALL-NEXT-METHOD</a> and <a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">NEXT-METHOD-P</a> to include   all forms in a method, including forms embedded in the lambda-list. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  This seems more natural and consistent. <br/></section><section class="status-unknown proposal" id="issue-method-initform:forbid-call-next-method"><h2 class="section-title">Proposal FORBID-CALL-NEXT-METHOD</h2>  The lexical scope of <a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">CALL-NEXT-METHOD</a> and <a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">NEXT-METHOD-P</a> includes only   forms in the body of a method. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  This is the status quo and is easier to implement. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">foo</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span> <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-aux">&amp;aux</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span>)</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-null">null</a> <span class="syntax-interned-symbol">y</span>)</span>
        <span class="syntax-cons">(<span class="syntax-interned-symbol">zzz</span>)</span>
        <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-keyword-symbol">:baz</span></span> <span class="syntax-interned-symbol">y</span>)</span>)</span>)</span>
</span></code></pre><br/>  ;is briefer than<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">foo</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-null">null</a> <span class="syntax-interned-symbol">y</span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">zzz</span>)</span>
          <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-quote">'<span class="syntax-keyword-symbol">:baz</span></span> <span class="syntax-interned-symbol">y</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">countem</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span> <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;optional</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">local</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">next-method-p</a>)</span>)</span>)</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">accum</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">local</span> <span class="syntax-number">0</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">frobs</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>
        <span class="syntax-cons">(<a class="macro-reference" href="../chapter-12.xhtml#macro-incf">incf</a> <span class="syntax-interned-symbol">accum</span> <span class="syntax-interned-symbol">y</span>)</span>)</span>
      <span class="syntax-interned-symbol">accum</span>)</span>)</span>
</span></code></pre><br/>  ;is briefer than<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">countem</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span> <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;optional</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">local</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">nil</a> <span class="syntax-interned-symbol">local-p</span>)</span>)</span>
    <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">accum</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-if">if</a> <span class="syntax-interned-symbol">local-p</span> <span class="syntax-interned-symbol">local</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">next-method-p</a>)</span>)</span>)</span>
                     <span class="syntax-number">0</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">frobs</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>
        <span class="syntax-cons">(<a class="macro-reference" href="../chapter-12.xhtml#macro-incf">incf</a> <span class="syntax-interned-symbol">accum</span> <span class="syntax-interned-symbol">y</span>)</span>)</span>
      <span class="syntax-interned-symbol">accum</span>)</span>)</span>
</span></code></pre><br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">jack-of-confusion</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span>)</span>
     <span class="syntax-cons">(<a class="macro-reference" href="../chapter-7.xhtml#macro-defmethod">defmethod</a> <span class="syntax-interned-symbol">ace-of-confusion</span> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">myclass</span>)</span>
                                  <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-optional">&amp;optional</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">y</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">call-next-method</a>)</span>)</span>)</span>
       <span class="syntax-cons">(<span class="syntax-interned-symbol">borf</span> <span class="syntax-interned-symbol">x</span> <span class="syntax-interned-symbol">y</span>)</span>)</span>
     <span class="syntax-cons">(<span class="syntax-interned-symbol">ace-of-confusion</span> <span class="syntax-interned-symbol">x</span>)</span>)</span>
</span></code></pre><br/>  ;In <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a>, the default value for y<br/>  ;is the value returned by an ace-of-confusion method.<br/>  ;In <a class="issue-reference" href="#issue-method-initform:forbid-call-next-method">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</a>, the default value for y<br/>  ;is the value returned by a jack-of-confusion method.<br/><br/></pre></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>  Symbolics Genera 8.0, Lucid 4.0.0 Beta-1, and recent versions of   PCL appear to implement <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a>.   TI Explorer release 6 does not.   Apple and IIM implement <a class="issue-reference" href="#issue-method-initform:forbid-call-next-method">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</a>. <br/>  The first example does not actually work in Genera due to a bug. <br/>  Other CLOS implementations were not surveyed. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  In <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a>, handling <a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">CALL-NEXT-METHOD</a> and   <a class="function-reference" href="../chapter-7.xhtml#function-next-method-p">NEXT-METHOD-P</a> by simply wrapping a <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-flet">FLET</a> or <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-macrolet">MACROLET</a> around the body will   not work.  If they are called from forms in the lambda-list some   massaging of the lambda-list is necessary.  It's not very difficult,   though. <br/>  <a class="issue-reference" href="#issue-method-initform:forbid-call-next-method">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</a> has no cost to implementors. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None for either proposal. <br/></section><section id="section-Cost of non-adoption" class="section"><h2 class="section-title">Cost of non-adoption</h2>  <a class="issue-reference" href="#issue-method-initform:forbid-call-next-method">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</a> forbids a programming technique   that users might find useful.  <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a>   requires a little more work for implementors, who might have thought   they had finished their CLOS implementations by now. <br/></section><section id="section-Performance impact" class="section"><h2 class="section-title">Performance impact</h2>  None. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  <a class="issue-reference" href="#issue-method-initform:forbid-call-next-method">METHOD-INITFORM:FORBID-CALL-NEXT-METHOD</a> avoids changing the status quo.   <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a> provides a programming technique   that users might find useful. <br/></section><section id="section-Esthetics" class="section"><h2 class="section-title">Esthetics</h2>  <a class="issue-reference" href="#issue-method-initform:allow-call-next-method">METHOD-INITFORM:ALLOW-CALL-NEXT-METHOD</a> seems more uniform. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Jeff Dalton suggests that the places where <a class="function-reference" href="../chapter-7.xhtml#function-call-next-method">CALL-NEXT-METHOD</a> is allowed   should be consistent with the places where <a class="macro-reference" href="../chapter-5.xhtml#macro-return">RETURN</a> from an implicit block   is allowed.  This probably supports <a class="proposal-reference" href="#issue-method-initform:forbid-call-next-method">FORBID-CALL-NEXT-METHOD</a>. <br/>  Gregor Kiczales says he supports <a class="proposal-reference" href="#issue-method-initform:forbid-call-next-method">FORBID-CALL-NEXT-METHOD</a>, but is not   adamant about it.  He thinks <a class="proposal-reference" href="#issue-method-initform:forbid-call-next-method">FORBID-CALL-NEXT-METHOD</a> is more natural. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>