<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” CONDITION-RESTARTS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">CONDITION-RESTARTS</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-condition-restarts:permit-association">Proposal PERMIT-ASSOCIATION</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Test Case">Test Case</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue CONDITION-RESTARTS [Cleanup] [CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Version 2, Passed, Jun 89 X3J13 Version 3, as amended &amp; passed Nov 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>Common Lisp Condition System </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>18-Jan-89, Version 1 by Pitman 26-Jun-89, Version 2 by Pitman and Barrett 3-Dec-89, Version 3 by Masinter (as amended Nov 89 X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  It was noted in the condition system document itself, and many people have   complained privately, that a major weakness of the condition system is the   inability to know whether a particular restart is associated with a    particular signalling action.  Also, there has been an interest in   disabling an established restart in some situations. <br/>  The problem being addressed shows itself in situations involving recursive   errors. The programmer wants to make sure that a restart obtained from   <a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> or <a class="function-reference" href="../chapter-9.xhtml#function-compute-restarts">compute-restarts</a> is in fact present for the purpose of   handling some particular error that he is actively focussed on, and not   for some other <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">outer</span>)</span>
</span></code></pre> error which he was not actively trying to handle. <br/>  Also, some implementors have wondered whether it was appropriate to   implement restarts as objects with dynamic extent.  It would be good   to make this clear so that users are not surprised when porting programs. <br/></section><section class="status-passed proposal" id="issue-condition-restarts:permit-association"><h2 class="section-title">Proposal PERMIT-ASSOCIATION</h2><ol><li> Define that during the dynamic extent of a call to <a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> with a  particular condition, the effect of calling <a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> again on that  condition object for a distinct abstract event is not defined. <br/> For example, although a handler MAY resignal a condition in order to  allow outer handlers first shot at handling the condition, two  distinct asynchronous keyboard events may not signal an <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> condition  object at the same time. <br/></li><li> Define that restarts have dynamic extent. </li><li> Introduce a macro <a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> which can be used to  dynamically bind the association between a condition and a set  of restarts. <br/> <a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> condition-form restarts-form <a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-body">&amp;BODY</a> forms 				[Macro] <br/>  Evaluates CONDITION-FORM and RESTARTS-FORM, the results of which   should be a condition C and a list of restarts <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">R1</span> <span class="syntax-interned-symbol">R2</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code></pre>,   respectively. Then evaluates the body of forms in implicit-progn   style, returning the result of the last form, or <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> if there   are no forms. While in the dynamic context of the body,   an attempt to find a restart Ri which is associated with a   condition Ci (see #4 below), as in (<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> rI cI), will    consider the restarts R1, R2, etc. if <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a> <span class="syntax-interned-symbol">CI</span> <span class="syntax-interned-symbol">C</span>)</span>
</span></code></pre>. <br/> Usually this macro is not used explicitly in code, since  <a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> handles most of the common cases in a way that is  syntactically more concise. <br/></li><li> Extend <a class="function-reference" href="../chapter-9.xhtml#function-compute-restarts">compute-restarts</a>, <a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a>, <a class="function-reference" href="../chapter-9.xhtml#function-abort">abort</a>, <a class="function-reference" href="../chapter-9.xhtml#function-continue">continue</a>, <a class="function-reference" href="../chapter-9.xhtml#function-use-value">use-value</a>,  and <a class="function-reference" href="../chapter-9.xhtml#function-store-value">store-value</a> to permit an optional condition object as an argument. <br/> When the extra argument is not supplied, these functions behave  exactly as defined before. (Restarts are considered without  prejudice to whether they have been associated with conditions.) <br/> When this argument is supplied, only those restarts which are  associated with the given condition or restarts which are not  associated with any condition are considered. In all other  respects, the behavior is the same. [However, see #7 for related  developments.] <br/> Passing a condition argument of <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> is treated the same as passing  no condition argument. <br/></li><li> Extend the definition of <a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> to say that if the form to  do the signalling is a list whose car is any of <a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a>, <a class="function-reference" href="../chapter-9.xhtml#function-error">error</a>,  <a class="function-reference" href="../chapter-9.xhtml#function-cerror">cerror</a>, or <a class="function-reference" href="../chapter-9.xhtml#function-warn">warn</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-or">or</a> <span class="syntax-interned-symbol">is</span> <span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">form</span> <span class="syntax-interned-symbol">which</span> <span class="syntax-interned-symbol">macroexpands</span> <span class="syntax-interned-symbol">into</span> <span class="syntax-interned-symbol">such</span> <span class="syntax-interned-symbol">a</span>
     <a class="function-reference" href="../chapter-14.xhtml#function-list">list</a>)</span>
</span></code></pre>, then <a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> is implicitly intended to  associate the restarts with the condition to be signalled. <br/> That is, for example,     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-interned-symbol">FRED</span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">...</span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">...</span>)</span>)</span>
</span></code></pre>  is equivalent to     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a>
            <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> <span class="syntax-interned-symbol">FRED</span> 
                                     <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">A</span></span>)</span> 
                                           <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">B</span></span>)</span>)</span>
              <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-interned-symbol">FRED</span>)</span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">A</span> <span class="syntax-interned-symbol">...</span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">B</span> <span class="syntax-interned-symbol">...</span>)</span>)</span>
</span></code></pre> <br/></li><li> Define that Common Lisp macros such as <a class="macro-reference" href="../chapter-9.xhtml#macro-check-type">check-type</a>, which are defined  to signal and to make restarts available, use the equivalent of  <a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> to associate the conditions they signal with  the defined restarts, so that users can make reliable tests not only  for the restarts being available, but also for them being available  for the right reasons. <br/></li><li> Add a :TEST keyword to <a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> clauses and a :TEST-FUNCTION  keyword to <a class="macro-reference" href="../chapter-9.xhtml#macro-restart-bind">restart-bind</a> clauses <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">in</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">same</span> <span class="syntax-interned-symbol">general</span> <span class="syntax-interned-symbol">style</span> <span class="syntax-interned-symbol">as</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a>
     <span class="syntax-keyword-symbol">:INTERACTIVE</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-keyword-symbol">:INTERACTIVE-FUNCTION</span> <span class="syntax-interned-symbol">keywords</span>)</span>
</span></code></pre>.  These permit  association of a function of one argument with a restart such  that if this function returns false, then functions such as  <a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a>, <a class="function-reference" href="../chapter-9.xhtml#function-compute-restarts">compute-restarts</a>, and <a class="function-reference" href="../chapter-9.xhtml#function-invoke-restart">invoke-restart</a> [see #4 above]  will not consider the restart to be active. The argument to the  test function is the value of the optional condition argument  most of these functions accept (or nil for <a class="function-reference" href="../chapter-9.xhtml#function-invoke-restart">invoke-restart</a>, since  it doesn't have that argument). The default test function is <br/>   #'<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">C</span>)</span>)</span> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>)</span>
</span></code></pre>. <br/></li></ol></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2><ol><li> The ability to recycle a condition object <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">including</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">ability</span> <span class="syntax-interned-symbol">to</span>
     <span class="syntax-interned-symbol">resignal</span> <span class="syntax-interned-symbol">a</span> <a class="type-reference" href="../chapter-9.xhtml#type-condition">condition</a>)</span>
</span></code></pre> means that the same condition object might be  simultaneously active for two different purposes. In such a case, no  test <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-interned-symbol">even</span> <a class="function-reference" href="../chapter-5.xhtml#function-eq">eq</a>)</span>
</span></code></pre> would suffice to determine whether a particular  restart belonged with a particular signalling action, since the  condition could not uniquely identify the signalling action. By  making the programmer responsible for assuring that that a given  condition may not be concurrently signalled for two conceptually  distinct purposes, this sticky area is avoided. <br/></li><li> There are no known reasons for restarts to not have dynamic extent.  Important optimizations may be possible by allowing implementors this  flexibility. <br/></li><li> This is is the minimal level of support needed to set up an   association between restarts and conditions. <br/></li><li> This provides a natural interface for retrieving and using the  information about the associations between conditions and restarts. <br/></li><li> This provides a natural interface for the most common case of  wanting to signal a restart with some associated conditions. <br/></li><li> This is a logical consequence of 5. </li><li> Programmers and implementors have asked for a way of  "filtering" restarts so that they are not visible in some contexts. <br/></li></ol></section><section id="section-Test Case" class="section"><h2 class="section-title">Test Case</h2><pre>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-interned-symbol">C</span>)</span> <span class="syntax-interned-symbol">...</span>)</span></span>)</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-string">"Test"</span>)</span>)</span>
</span></code></pre><br/>  was permissible and continues to be. However,<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-handler-bind">handler-bind</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-error">error</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-interned-symbol">FRED</span>)</span> <span class="syntax-interned-symbol">...</span>)</span></span>)</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-signal">signal</a> <span class="syntax-interned-symbol">FRED</span>)</span>)</span>
</span></code></pre><br/>  may be undefined <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">depending</span> <span class="syntax-interned-symbol">on</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">programmer</span><span class="syntax-quote">'<span class="syntax-interned-symbol">s</span></span> <span class="syntax-interned-symbol">intent</span>)</span>
</span></code></pre> because the<br/>  two uses of FRED are not cooperating and may not represent conceptually<br/>  distinct situations.<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> 
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span>)</span>)</span>
        <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a>
            <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-invoke-restart">invoke-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-number">2</span>)</span>)</span>)</span>
    <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-number">1</span>)</span>)</span>
</span></code></pre>)<br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 2<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-make-condition">make-condition</a> <span class="syntax-quote">'<a class="type-reference" href="../chapter-9.xhtml#type-simple-condition">simple-condition</a></span>)</span>)</span>)</span>
    <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> 
        <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span>)</span>)</span>
          <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a>
              <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-invoke-restart">invoke-restart</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span> <span class="syntax-interned-symbol">FOO</span>)</span>)</span>
            <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-number">2</span>)</span>)</span>)</span>
      <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-number">1</span>)</span>)</span>)</span>
</span></code></pre><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 1<br/><br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a> 
      <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-with-condition-restarts">with-condition-restarts</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">list</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-find-restart">find-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span>)</span>)</span>
        <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-restart-case">restart-case</a>
            <span class="syntax-cons">(<a class="function-reference" href="../chapter-9.xhtml#function-invoke-restart">invoke-restart</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">ALPHA</span></span>)</span>
          <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-keyword-symbol">:TEST</span> <span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">C</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">C</span>)</span>)</span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>
            <span class="syntax-number">2</span>)</span>)</span>)</span>
    <span class="syntax-cons">(<span class="syntax-interned-symbol">ALPHA</span> <span class="syntax-symbol">()</span> <span class="syntax-number">1</span>)</span>)</span>
</span></code></pre>)<br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 1<br/><br/></pre></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Presumably no implementation does this yet. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Several small, relatively modular changes. <br/>  The specific details of how the association is made between conditions   and restarts is left up to the implementation.  It is recommended <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">e.g.</span><span class="syntax-interned-symbol">,
  for</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">sake</span> <span class="syntax-interned-symbol">of</span> <a class="special-operator-reference" href="../chapter-3.xhtml#special-operator-the">the</a> <span class="syntax-interned-symbol">garbage</span> <span class="syntax-interned-symbol">collector</span>)</span>
</span></code></pre> that the association be external   to the condition, however, since the condition might persist for long   afterward and the restart information has no value beyond the dynamic   extent during which the actual signalling is occurring. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Except for the change to the recyclability of restarts, this change is    upward compatible. <br/>  Probably very few if any users currently take advantage of recycling   restarts, so the cost to users of this change is very slight. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Use of restarts would not be nearly as reliable. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  It would be possible to write code which was considerably more robust. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  Some people might consider this proposal to make things slightly better   because it avoids some ambiguities. Others might consider it to make   things slightly worse because it adds additional complexity. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Pitman and Barrett support this proposal. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>