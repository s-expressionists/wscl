<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” LOAD-TRUENAME</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">LOAD-TRUENAME</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-load-truename:new-pathname-variables">Proposal NEW-PATHNAME-VARIABLES</a><ol> </ol></li><li><a href="#section-Example">Example</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue LOAD-TRUENAME [Cleanup] [ADDITION]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jun 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> (p426), <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> (p188), <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> (p188), <a class="issue-reference" href="../issues/require-pathname-defaults.xhtml#issue-require-pathname-defaults">X3J13 Issue REQUIRE-PATHNAME-DEFAULTS</a> </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>13-Mar-89, Version 1 by Pitman 29-Mar-89, Version 2 by Moon (add -PATHNAME vars) 10-Apr-89, Version 3 by Pitman (clarify v2) 11-Apr-89, Version 4 by Pitman (merge Moon's v3 comments) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2> It is difficult to construct sets of software modules which work  together as a unit and which port between different implementations. <br/> <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> and <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> were intended to provide this level of support  but have `failed' to be portable in practice. <br/> Typical user configurations involve a `system definition' file which  loads the modules of a `system' <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">collection</span> <span class="syntax-interned-symbol">of</span> <span class="syntax-interned-symbol">software</span> <span class="syntax-interned-symbol">modules</span>)</span>
</span></code>. <br/> Among the specific problems which arise are: <br/>  <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> File system types may vary. Different file syntax must be used for     each site. <br/>  <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> Even with the same Lisp implementation and host file system type,     the directory in which a software system resides may differ from     delivery site to delivery site. <br/>  <a class="function-reference" href="../chapter-12.xhtml#function--">-</a> Multiple `copies' of the same system may reside in different     directories on the same machine. <br/></section><section class="status-passed proposal" id="issue-load-truename:new-pathname-variables"><h2 class="section-title">Proposal NEW-PATHNAME-VARIABLES</h2> Introduce new variables: <br/>   <a class="variable-reference" href="../chapter-24.xhtml#variable-*load-truename*">*load-truename*</a>					[Variable] <br/>   This special variable is initially <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, but is bound by <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> to    hold the truename of the pathname of the file being loaded. <br/>   <a class="variable-reference" href="../chapter-24.xhtml#variable-*compile-file-truename*">*compile-file-truename*</a>				[Variable] <br/>   This special variable is initially <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, but is bound by     <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> to hold the truename of the pathname of the file    being compiled. <br/>   <a class="variable-reference" href="../chapter-24.xhtml#variable-*load-pathname*">*load-pathname*</a>					[Variable] <br/>   This special variable is initially <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> but is bound by <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a>    to hold a pathname which represents the filename given as the    first argument to <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> merged against the defaults.    That is, <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-merge-pathnames">merge-pathnames</a> <span class="syntax-interned-symbol">arg1</span>)</span>)</span>
</span></code>. <br/>   <a class="variable-reference" href="../chapter-24.xhtml#variable-*compile-file-pathname*">*compile-file-pathname*</a>				[Variable] <br/>   This special variable is initially <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> but is bound by <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a>    to hold a pathname which represents the filename given as the    first argument to <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> merged against the defaults.    That is, <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-merge-pathnames">merge-pathnames</a> <span class="syntax-interned-symbol">arg1</span>)</span>)</span>
</span></code>. <br/></section><section id="section-Example" class="section"><h2 class="section-title">Example</h2><pre> &mdash;&mdash; File SETUP &mdash;&mdash;<br/> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-11.xhtml#macro-in-package">in-package</a> <span class="syntax-string">"MY-STUFF"</span>)</span>
</span></code><br/> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-defmacro">defmacro</a> <span class="syntax-interned-symbol">COMPILE-TRUENAME</span> <span class="syntax-symbol">()</span> <span class="syntax-quasiquote">`<span class="syntax-quote">'<span class="syntax-unquote">,<a class="variable-reference" href="../chapter-24.xhtml#variable-*compile-file-truename*">*compile-file-truename*</a></span></span></span>)</span>
</span></code><br/> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*MY-COMPILE-TRUENAME*</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">COMPILE-TRUENAME</span>)</span> <span class="syntax-string">"Just for debugging."</span>)</span>
</span></code><br/> <code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defvar">defvar</a> <span class="syntax-interned-symbol">*MY-LOAD-PATHNAME*</span> <a class="variable-reference" href="../chapter-24.xhtml#variable-*load-pathname*">*load-pathname*</a>)</span>
</span></code><br/> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">LOAD-MY-SYSTEM</span> <span class="syntax-symbol">()</span>
   <span class="syntax-cons">(<a class="macro-reference" href="../chapter-6.xhtml#macro-dolist">dolist</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">MODULE-NAME</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-string">"FOO"</span> <span class="syntax-string">"BAR"</span> <span class="syntax-string">"BAZ"</span>)</span></span>)</span>
     <span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-19.xhtml#function-merge-pathnames">merge-pathnames</a> <span class="syntax-interned-symbol">MODULE-NAME</span> <span class="syntax-interned-symbol">*MY-LOAD-PATHNAME*</span>)</span>)</span>)</span>)</span>
</span></code></pre><br/> &mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;<br/><br/> <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> <span class="syntax-string">"SETUP"</span>)</span>
</span></code><br/> <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">LOAD-MY-SYSTEM</span>)</span>
</span></code><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2> This satisfies the most common instances of the frequently reported  problem in the Problem Description. <br/> The ...-TRUENAME* variables are useful to tell the real file being  loaded. <br/> The ...-PATHNAME* variables are useful to find information about  the original link names or logical device names mentioned in the  pathname to be opened but no longer reflected in the truename. <br/> Note that it is not adequate to just have the -PATHNAME* variables  since <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a> on these pathnames might not yield the value of the  -TRUENAME* variables if the file has been deleted or protected  since the open occurred <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">in</span> <a class="function-reference" href="../chapter-5.xhtml#function-some">some</a> <span class="syntax-interned-symbol">implementations</span>)</span>
</span></code>. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2> Wide variation. <br/> In some implementations, calling <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> binds or sets   <a class="variable-reference" href="../chapter-19.xhtml#variable-*default-pathname-defaults*">*default-pathname-defaults*</a> so that pathnames named in a file being  LOADed will default to being `nearby.' <br/> Some implementations provide special variables that are similar or  identical to one or both of those proposed. <br/> Some implementations have a way to represent the pathname for the  current working directory, and make the default pathname default  to that, so that loading without specifying a default again tends to  get `nearby' files. <br/> None of these techniques is portable, unfortunately, because there  is no agreement. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2> Very small. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2> None. This change is upward compatible. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2> Continued difficulty for anyone trying to put a system of modules  in a form where they can be conveniently delivered using portable code. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2> The cost of non-adoption is avoided. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2> Negligible. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2> Touretzky raised the issue most recently on <a class="package-reference" href="../chapter-1.xhtml#package-common-lisp">common-lisp</a>. A number  of people immediately jumped on the bandwagon, indicating it was  important to them, too. <br/> Pitman made three suggestions in response, of which the above is  the first. The others included:   2. Variables *LOAD-TRUENAMES* and *COMPILE-FILE-TRUENAMES* which hold      lists of the truenames of all files being loaded or compiled,      respectively, during the dynamic invocation of <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> and <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a>. <br/>  3. Variable *LOAD-OR-COMPILE-FILE-TRUENAMES* which holds a list like     <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a>)</span> <span class="syntax-interned-symbol">...</span>)</span>
</span></code>     during the dynamic invocation of <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> and <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a>. <br/> Touretzky responded:  ``I like KMP's proposals.  I like the second one best: have separate    variables for files being loaded and files being compiled, and use    them to maintain a stack so we can see the nesting of loads within    files.'' <br/> Pitman ultimately chose to present the first rather than the second  because it seemed simpler, easier to explain, and more likely to  pass at this late date. <br/> Other suggestions which were considered discarded were: <ol><li> Provide just variables *LOAD-STREAM* and *COMPILE-FILE-STREAM*.  Then <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> and <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a> could be used to yield the   information contained in the -PATHNAME* and -TRUENAME* variables  of the proposal above. </li><li> Like <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span>)</span>
</span></code>, but call both variables <a class="variable-reference" href="../chapter-21.xhtml#variable-*standard-input*">*standard-input*</a>. That is,  say that <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a> and <a class="function-reference" href="../chapter-24.xhtml#function-compile-file">compile-file</a> bind <a class="variable-reference" href="../chapter-21.xhtml#variable-*standard-input*">*standard-input*</a> to the  stream being loaded. </li></ol> There were a number of pitfalls with this approach which all center  around the way it invites the user to do other operations besides  <a class="function-reference" href="../chapter-19.xhtml#function-pathname">pathname</a> and <a class="function-reference" href="../chapter-20.xhtml#function-truename">truename</a>.  Not only would some people be confused by  the difference between the characteristics of *LOAD-STREAM* for  compiled and interpreted files, but also even with interpreted   streams, the actual position of the stream pointer at the time of  execution of the forms contained in the file could vary between  implementations in a way that became a lurking portability barrier.  Since the observed user need which spawned this discussion was for  a way to tell what file was being loaded and not for a way to   manipulate the stream, it seemed best to just go with the variables  that addressed that specific need--fewer pitfalls and more perspicuous  code are likely to result. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>