<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” FUNCTION-COMPOSITION</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">FUNCTION-COMPOSITION</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-function-composition:jan89-x3j13">Proposal JAN89-X3J13</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue FUNCTION-COMPOSITION [Cleanup] [ADDITION]</h1><h2>Related issues</h2><ul><a class="issue-reference" href="../issues/test-not-if-not.xhtml#issue-test-not-if-not">TEST-NOT-IF-NOT</a></ul><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed (as amended) Jan 89 X3J13 (And reaffirmed Jun 89 X3J13 that this was the version wanted) </section><section id="section-References" class="section"><h2 class="section-title">References</h2>None </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>21-Jun-88, Version 1 by Pitman 05-Oct-88, Version 2 by Pitman 7-Dec-88, Version 3 by Masinter 12-Dec-88, Version 4 by Masinter (additional comments) 10-Feb-89, Version 5 (as amended by X3J13 Jan 89) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  A number of useful functions on functions are conspicuously   absent from Common Lisp's basic set. Among them are functions   which return constant <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, constant <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, and functions which   combine functions in common, interesting ways. <br/></section><section class="status-passed proposal" id="issue-function-composition:jan89-x3j13"><h2 class="section-title">Proposal JAN89-X3J13</h2>  Add the following functions: <br/>   <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> function					[Function] <br/>    Returns a function whose value is the same as the <a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> of the     given function applied to the same arguments. <br/>   <a class="function-reference" href="../chapter-5.xhtml#function-constantly">constantly</a> value						[Function] <br/>    Returns a function whose value is always <a class="glossary-reference" href="../chapter-26.xhtml#glossary-value">value</a>. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-mapcar">mapcar</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">X</span>)</span>)</span> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>)</span></span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-interned-symbol">A</span> <span class="syntax-number">4.3</span>)</span></span>)</span>
</span></code><br/>  ==<br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-mapcar">mapcar</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-constantly">constantly</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">3</span> <span class="syntax-interned-symbol">A</span> <span class="syntax-number">4.3</span>)</span></span>)</span>
</span></code><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <code><span class="syntax-root"><span class="syntax-cons">(<a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>)</span>
</span></code><br/><br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-find-if-not">find-if-not</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-zerop">zerop</a></span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">0</span> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code><br/>  ==<br/>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-find-if">find-if</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-zerop">zerop</a></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">0</span> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; 3<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  The presence of these functions will contribute to syntactic   conciseness in some cases.  <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  No Common Lisp implementations provide these functions,   but they do exist in the <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> language. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  A straightforward implementation is simple to cook up. The definitions   given here would suffice. Typically some additional work might be   desirable to make these open code in interesting ways. <br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>)</span>
    <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">ARGUMENTS</span>)</span>
        <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-apply">apply</a> <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> <span class="syntax-interned-symbol">ARGUMENTS</span>)</span>)</span>)</span></span>)</span>
</span></code></pre> <br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <a class="function-reference" href="../chapter-5.xhtml#function-constantly">constantly</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">VALUE</span>)</span>
    <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<a class="lambda-list-keyword-reference" href="../chapter-3.xhtml#lambda-list-keyword-rest">&amp;REST</a> <span class="syntax-interned-symbol">ARGUMENTS</span>)</span> 
        <span class="syntax-cons">(<a class="symbol-reference" href="../chapter-3.xhtml#symbol-declare">declare</a> <span class="syntax-cons">(<a class="declaration-reference" href="../chapter-3.xhtml#declaration-ignore">ignore</a> <span class="syntax-interned-symbol">ARGUMENTS</span>)</span>)</span>
        <span class="syntax-interned-symbol">VALUE</span>)</span></span>)</span>
</span></code></pre> <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None. This change is upward compatible. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> <span class="syntax-interned-symbol">BENEFITS</span>)</span>
</span></code> <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  Some code would be more clear.    Some compilers might be able to produce better code. <br/>  Takes a step toward being able to flush the -IF-NOT functions   and the :TEST-NOT keywords, both of which are high on the list   of what people are referring to when they say Common Lisp is   bloated by too much garbage. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  In situations where these could be used straightforwardly, the   alternatives are far less perspicuous. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Several additional functions (COMPOSE, CONJOIN) were  considered and rejected at the Jan 89 X3J13 meeting. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>