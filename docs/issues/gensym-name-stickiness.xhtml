<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” GENSYM-NAME-STICKINESS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">GENSYM-NAME-STICKINESS</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-gensym-name-stickiness:like-teflon">Proposal LIKE-TEFLON</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Test Case">Test Case</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue GENSYM-NAME-STICKINESS [Cleanup] [CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Mar 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> (p169) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>14-Feb-89, Version 1 by Pitman 15-Mar-89, Version 2 by Steele (add GENSYM-COUNTER function) 20-Mar-89, Version 3 by Pitman (make it a variable) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  Many people avoid use of the argument to <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> because the argument   is `sticky' and such stickiness can lead to confusion. The problem is   that if any application <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">usually</span> <span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">macro</span>)</span>
</span></code> uses the gensym argument at   all, then all applications are forced to. If they do not, they risk   finding that the `helpful' argument supplied in some previous call will   be harmful to them. <br/></section><section class="status-passed proposal" id="issue-gensym-name-stickiness:like-teflon"><h2 class="section-title">Proposal LIKE-TEFLON</h2>  Define that if an optional argument [either a string or a number] is   given to <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>, it does <a class="function-reference" href="../chapter-5.xhtml#function-not">NOT</a> have a side-effect on <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>'s internal state. <br/>  Introduce a new variable, <a class="variable-reference" href="../chapter-10.xhtml#variable-*gensym-counter*">*GENSYM-COUNTER*</a>, which holds the state of   the gensym counter. That is, the next symbol generated by <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> will   be number n.  The initial value of this variable is not defined, but   must always be a non-negative integer. This variable may be either    assigned or bound by users at any time, but always to a non-negative   integer. <br/>  Deprecate the use of a numeric argument to <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  Conscientious programmers are forced now to write their own <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>   lookalikes because they know the system's <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> has an invasive   effect. This defeats the primary intended function of <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>, which   is to satisfy the most common idiomatic use of <a class="function-reference" href="../chapter-10.xhtml#function-make-symbol">MAKE-SYMBOL</a>. <br/>  The stickiness of the <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> prefix was an attempt to be gratuitously   compatible with Maclisp, at the expense of good programming pratice. <br/>  Users who need the old behavior of <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> can trivially implement   that behavior using <a class="function-reference" href="../chapter-10.xhtml#function-make-symbol">MAKE-SYMBOL</a>. <br/>  Occasionally you want to reset the <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> counter so that, for example,   you can get the compiler to generate the same symbol names again   <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">good</span> <span class="syntax-interned-symbol">for</span> <span class="syntax-interned-symbol">comparing</span> <span class="syntax-interned-symbol">results</span> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">see</span> <span class="syntax-interned-symbol">what</span> <span class="syntax-interned-symbol">really</span> <span class="syntax-interned-symbol">changed</span>)</span>
</span></code>. <br/></section><section id="section-Test Case" class="section"><h2 class="section-title">Test Case</h2><pre>  ;; #1: Test stickiness of name part.<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-13.xhtml#function-char-equal">CHAR-EQUAL</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-char">CHAR</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">SYMBOL-NAME</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-second">SECOND</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-14.xhtml#function-list">LIST</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <span class="syntax-string">"A"</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>)</span>)</span>)</span>)</span> <span class="syntax-number">0</span>)</span>
	      <span class="syntax-character">#\G</span>)</span>
</span></code></pre><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> ;under CLtL<br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>   ;under this proposal<br/><br/>  ;; #2: Test stickiness of number part.<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-=">=</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-12.xhtml#function-parse-integer">PARSE-INTEGER</a> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-progn">PROGN</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <span class="syntax-number">6789</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-string">STRING</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <span class="syntax-string">"G"</span>)</span>)</span>)</span> <span class="syntax-keyword-symbol">:START</span> <span class="syntax-number">1</span>)</span>
     <span class="syntax-number">6790</span>)</span>
</span></code></pre><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>   ;under CLtL<br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> ;under this proposal <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">except</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-when">when</a> <a class="variable-reference" href="../chapter-10.xhtml#variable-*gensym-counter*">*gensym-counter*</a> <span class="syntax-interned-symbol">happens</span> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">align</span>)</span>
</span></code><br/><br/>  ;; #3: Illustrate use of new variable.<br/>  <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-string=">STRING=</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-name">SYMBOL-NAME</a> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">LET</a> <span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="../chapter-10.xhtml#variable-*gensym-counter*">*GENSYM-COUNTER*</a> <span class="syntax-number">43</span>)</span>)</span> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <span class="syntax-string">"FOO"</span>)</span>)</span>)</span>
           <span class="syntax-string">"FOO43"</span>)</span>
</span></code></pre><br/>  <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>   ;under this proposal <code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-not">not</a> <span class="syntax-interned-symbol">meaningful</span> <span class="syntax-interned-symbol">previously</span>)</span>
</span></code><br/><br/></pre></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Symbolics Cloe and Genera are compatible with CLtL, so this would be an   incompatible change. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Very small. <br/>  If any implementations currently use a more compact representation for   the internal state of <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> than a variable holding a string and a   separate variable holding an integer, they might be forced to change.   Even then, the change would proabably still be quite small. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Most uses of <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> do not depend on the stickiness of the name, so the   change would be compatible. In some cases, the change would be an   improvement. Even in the worst case where someone depends on stickiness,   it's extremely straightforward to write the couple of lines of code to   produce an application based on <a class="function-reference" href="../chapter-10.xhtml#function-make-symbol">MAKE-SYMBOL</a> that is at least as flexible   as <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a>, and often moreso. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Good programmers would avoid using the argument to <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-or">or</a> <span class="syntax-interned-symbol">using</span> 
  <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> <span class="syntax-interned-symbol">altogether</span>)</span>
</span></code></pre> in many situations where they ought not have to. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  Gensyms which appear to convey information through their name would not   accidentally pop out and cause confusion in places where they oughtn't. <br/>  Making the gensym counter visible as a variable means that people will   be able to bind the gensym counter locally when they don't want to affect   the global counter. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  Unnecessary global state changes are hard to reason about. This would    be a small simplification. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Pitman claims to have written a non-sticky <a class="function-reference" href="../chapter-10.xhtml#function-gensym">GENSYM</a> function for nearly   every one of the dozen or so large systems that he's written or worked   on in the last decade in order to get around the stated problem.   Others have suggested similar experience. <br/>  Pitman and Steele support <a class="proposal-reference" href="#issue-gensym-name-stickiness:like-teflon">LIKE-TEFLON</a>. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>