<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” FLOATING-POINT-CONDITION-NAMES</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">FLOATING-POINT-CONDITION-NAMES</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit History">Edit History</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-floating-point-condition-names:x3j13-nov-89">Proposal X3J13-NOV-89</a><ol> </ol></li><li><a href="#issue-floating-point-condition-names:add-minimal-ieee">Proposal ADD-MINIMAL-IEEE</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to implementors">Cost to implementors</a><ol> </ol></li><li><a href="#section-Cost to users">Cost to users</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue FLOATING-POINT-CONDITION-NAMES [Cleanup] [ADDITION]</h1><h2>Related issues</h2><ul><li><a class="issue-reference" href="../issues/float-underflow.xhtml#issue-float-underflow">FLOAT-UNDERFLOW</a></li><li><span class="issue-reference error">issue:ERROR-CHECKING-IN-NUMBERS-CHAPTER</span></li></ul><section id="section-References" class="section"><h2 class="section-title">References</h2>CLtL, Section 12.10 "Implementation Parameters" (for floats) CLtL, P.448 "*features*" IEEE Standard for Binary Floating-Point Arithmetic </section><section id="section-Edit History" class="section"><h2 class="section-title">Edit History</h2>V1, 30 Oct 1989, JonL White V2, 4 Dec 1990, Kent M. Pitman (amendments per X3J13) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>The currently proposed error system contains names for three conditions related to floating-point operations: <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a>, <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-overflow">floating-point-overflow</a>, and <a class="type-reference" href="../chapter-12.xhtml#type-division-by-zero">division-by-zero</a>.  Probably a majority of implementation will be running on machines that support the IEEE floating point standard; but there is no name for the remaining two out  of the five mandated trapping conditions, namely <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-inexact">floating-point-inexact</a> and <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-invalid-operation">floating-point-invalid-operation</a>. <br/>Furthermore, even though the condition names may appear in an image, it is not clear that such traps are enabled at every point in time. The IEEE standard specifies that user-level programs ought to have the capability of selectively enabling or disabling its five traps; and other implementations may run on a variety of hardware configurations for which the traps possible vary from host to host.  However, there is no current way for user-code to ask <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">1</span>)</span>
</span></code> what conditions are in fact supporting floating-point traps, nor to ask <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-number">2</span>)</span>
</span></code> just what traps are  currently active <br/>Note that some very simple implementations might not be able to cause trapping even for <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-underflow">floating-point-underflow</a>;  and in other implementations, the relevant traps may vary on a host-to-host basic, depending on what particular optional hardware is available on that host.  For example, Sun3 workstations come  in three configurations: one with only software  floating-point support, one with a Motorola MC68881 attached co-processor,  and one with both an MC68881 and a Weitek Floating Point "Accelerator";  the increasing hardware complement gives rise to an increasing number of  implementation-specific traps.  Even within the IEEE standard, it is  possible for a conforming implementation to make a refinement of the five  suggested traps [the MC68881 partitions one of the traps into three,  giving a total of eight]; so even though one knows that an implementation  is IEEE compatible, it still makes sense to ask what conditions are  supportable as floating-point traps. <br/></section><section class="status-unknown proposal" id="issue-floating-point-condition-names:x3j13-nov-89"><h2 class="section-title">Proposal X3J13-NOV-89</h2><ol><li> Add <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-invalid-operation">FLOATING-POINT-INVALID-OPERATION</a> and <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-inexact">FLOATING-POINT-INEXACT</a>  as conditions which are sub-conditions of <a class="type-reference" href="../chapter-12.xhtml#type-arithmetic-error">ARITHMETIC-ERROR</a>. <br/></li></ol>The intent is that if condition <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">FOO</a> is a currently enabled floating point trap, then whenever that particular situation arises the system will arrange to signal the Lisp condition <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">FOO</a>.  The means for enabling and disabling traps is not addressed in this proposal. <br/></section><section class="status-unknown proposal" id="issue-floating-point-condition-names:add-minimal-ieee"><h2 class="section-title">Proposal ADD-MINIMAL-IEEE</h2><ol><li> Add <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-invalid-operation">FLOATING-POINT-INVALID-OPERATION</a> and <a class="type-reference" href="../chapter-12.xhtml#type-floating-point-inexact">FLOATING-POINT-INEXACT</a>  as conditions which are sub-conditions of <a class="type-reference" href="../chapter-12.xhtml#type-arithmetic-error">ARITHMETIC-ERROR</a>. </li><li> Add a global parameter SUPPORTED-FLOATING-POINT-CONDITIONS which  is to contain a list of all the condition names that can, in that  implementation, be enabled as floating-point traps; this is to  be an "implementation revealing" parameter. </li><li> Add a function of no arguments ENABLED-FLOATING-POINT-TRAPS which  returns a list of condition names for all currently enabled  floating point trapping conditions. <br/></li></ol>The intent is that if condition <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">FOO</a> is a currently enabled floating point trap, then whenever that particular situation arises the system will arrange to signal the Lisp condition <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">FOO</a>.  The means for enabling and disabling traps is not addressed in this proposal. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>Many Common Lisp implementations do in fact run on hardware that supports the IEEE floating-point standard;  a minimal requirement for porting between these implementations is that they all use the same name for the five IEEE-mandated floating-point conditions. Since at least some implementations will provide means for selective enabling and disabling of various floating-point traps, then the  user must be able to query the system to find out what the current state is, and what states are supportable. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>Lucid Common Lisp supports this much; moreover, it uses <a class="macro-reference" href="../chapter-5.xhtml#macro-setf">SETF</a> on <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">ENABLED-FLOATING-POINT-TRAPS</span>)</span>
</span></code> as the primary means to alter the currently-enabled traps. <br/></section><section id="section-Cost to implementors" class="section"><h2 class="section-title">Cost to implementors</h2>Trivial. <br/></section><section id="section-Cost to users" class="section"><h2 class="section-title">Cost to users</h2>None; this is an upward-compatible addition. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>Portability of a greater amount of user code; portability of "skills", since IEEE support is so common. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>It is better for all IEEE implementations to use the same names for these conditions, rather than have them vary from one to another. It is also probably better for non-IEEE implementations to use the IEEE condition names where appropriate, just to minimize the  conceptual overload. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>If an implementation is to claim full IEEE support, then it ought to  provide some means of enabling and catching these five IEEE-mandated traps.  Then it would be appropriate to put :IEEE-FLOATING-POINT on the list <a class="symbol-reference" href="../chapter-1.xhtml#symbol-*features*">*FEATURES*</a> (see CLtL, P.448). <br/>Moon and JonL privately discussed some means for enabling and disabling various floating-point traps, back in June 1989 when the  <a class="issue-reference" href="../issues/float-underflow.xhtml#issue-float-underflow">float-underflow</a> proposal was under discussion; they came to the  conclusion that "getting the design right and efficient" was more  than a few minutes worth of work, and so postponed further work on it. <br/>[The IEEE standard apparently goes by the name of ANSI-IEEE Std 754-1985;  my working copy is Draft 10.0 from 1982.  I don't think there are great  variances between them. &ndash; JonL &ndash;] <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>