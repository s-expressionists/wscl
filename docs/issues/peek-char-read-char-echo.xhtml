<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” PEEK-CHAR-READ-CHAR-ECHO</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">PEEK-CHAR-READ-CHAR-ECHO</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-peek-char-read-char-echo:first-read-char">Proposal FIRST-READ-CHAR</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue PEEK-CHAR-READ-CHAR-ECHO [NIL] [CLARIFICATION/CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> (p379), <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> (p379), <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> (p379), <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a> (p330), Streams (p327-328), <a class="function-reference" href="../chapter-23.xhtml#function-read-preserving-whitespace">read-preserving-whitespace</a> (p376),  <a class="function-reference" href="../chapter-23.xhtml#function-read-delimited-list">read-delimited-list</a> (p377) </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>06-Mar-87, Version 1 by Pitman 23-Jun-88, Version 2 by Pitman (remove interactive stuff) 8-Oct-88, Version 3 by Pitman &amp; Masinter </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  The interaction between <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>, <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> and streams made by   <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a> is not made adequately clear about how many times   a particular character may be echoed and at what time such echo   is permissible. <br/>  For example, given:    (<a class="macro-reference" href="../chapter-21.xhtml#macro-with-input-from-string">with-input-from-string</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="type-reference" href="../chapter-21.xhtml#type-string-stream">string-stream</a> <span class="syntax-string">"A"</span>)</span>
</span></code></pre>      (<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-cons">(<a class="variable-reference" href="../chapter-21.xhtml#variable-*standard-input*">*standard-input*</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a> <a class="type-reference" href="../chapter-21.xhtml#type-string-stream">string-stream</a>
					       <a class="variable-reference" href="../chapter-21.xhtml#variable-*standard-output*">*standard-output*</a>)</span>)</span>)</span>
</span></code></pre>        (<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-let">let</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-cons">(<a class="function-reference" href="../chapter-16.xhtml#function-char">char</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
</span></code></pre> 	 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>)</span>
</span></code></pre>             (<a class="function-reference" href="../chapter-22.xhtml#function-prin1">prin1</a> '&mdash;) 	 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>)</span>
</span></code></pre>             (<a class="function-reference" href="../chapter-22.xhtml#function-prin1">prin1</a> '&mdash;) 	 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-setq">setq</a> <a class="function-reference" href="../chapter-16.xhtml#function-char">char</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>)</span>)</span>
</span></code></pre> (<a class="function-reference" href="../chapter-22.xhtml#function-prin1">prin1</a> '&mdash;) 	 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> <a class="function-reference" href="../chapter-16.xhtml#function-char">char</a>)</span>
</span></code></pre>      (<a class="function-reference" href="../chapter-22.xhtml#function-prin1">prin1</a> '&mdash;) 	 <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>)</span>
</span></code></pre>)))   what is seen on the terminal? There are at least these possibilities: <br/>  [1] <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> is implemented by READ-CHAR/UNREAD-CHAR. The first time       a char is seen by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> it's echoed, <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> does not echo,       re-fetching the char by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> doesn't echo.       A------------ <br/>  [2] Characters are echoed whenever seen by <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> or <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>.       Characters are not unechoed by <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>.       A---A---A---A--- <br/>  [3] Characters are not echoed by <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> but are echoed by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>.       No `unecho' action is done by <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>.       &mdash;&mdash;A------A <br/>  [4] <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> is implemented by READ-CHAR/UNREAD-CHAR. <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> echoes       but <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> does not `unecho'.       A---A---A------A <br/>  [5] <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> is implemented by READ-CHAR/UNREAD-CHAR. <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> echoes       but <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> unechoes (a magic Erase character must be        presupposed for display terminals, a file stream that can randomly       access during output and/or back up must be presupposed for files,       paper terminals just lose):       A&lt;Erase&gt;&mdash;A&lt;Erase&gt;&mdash;A---&lt;Erase&gt;&mdash;A <br/>  [6] <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> is implemented by peeking and does not echo. The first       time a char is seen by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> it's echoed, <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> does not       echo, re-fetching the char by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> doesn't echo:       &mdash;&mdash;A------ <br/>  This list is not believed to be exhaustive. It is only to illustrate   of the variety of possible ways in which the current specification can    be implemented without technically being in conflict with the written    word of CLtL. Obviously not all of these interpretations are considered    useful by all people, but usefulness has not been determined to be    criterial in satisfying the specification. <br/>  The description of streams <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">p327-328</span>)</span>
</span></code></pre> is also [probably deliberately]   fuzzy on this issue as it relates to operating systems on which echoing    is done by the operating system. That is, some systems are line-at-a-time   and all <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> operations happen after issues of echo   have long since been resolved by a system call that reads and echoes input    a line at a time. Other systems are character-at-a-time and these issues    hit home in a different way. It will probably be necessary to continue   leaving things slightly unspecified in order to accomodate the native    style of the variety of operating systems now trying to support Common    Lisp, but we should be more up front about the game we are playing. (For   example, code which must port between character-at-a-time and    line-at-a-time systems must be more careful about whether it does    newline-preceded or newline-terminated output than many <a class="package-reference" href="../chapter-11.xhtml#package-cl">cl</a> programmers    might realize given the current wording.) Additionally, though, we should   be on the lookout for less ambitious goals involving only partial   compatibility to improve the situation wherever we can find a way to. <br/>  Abstract functions <a class="function-reference" href="../chapter-23.xhtml#function-read-preserving-whitespace">read-preserving-whitespace</a> and <a class="function-reference" href="../chapter-23.xhtml#function-read-delimited-list">read-delimited-list</a>   are implicitly affected by any decisions made on this issue since their   descriptions involve the use of <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> and <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>, respectively. <br/></section><section class="status-passed proposal" id="issue-peek-char-read-char-echo:first-read-char"><h2 class="section-title">Proposal FIRST-READ-CHAR</h2>  Ammend the description of <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> to say that when the stream is   an echo stream <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a> <span class="syntax-interned-symbol">created</span> <span class="syntax-interned-symbol">by</span> <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a>)</span>
</span></code></pre>, the character   will be echoed on the stream the first time those characters are seen.   (Characters which are not echoed by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> are those which were   put there by <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> and hence are assumed to have been echoed   already by a previous call to <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>.) <br/>  Ammend the description of <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> to say that when the stream   is an echo stream <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a> <span class="syntax-interned-symbol">created</span> <span class="syntax-interned-symbol">by</span> <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a>)</span>
</span></code></pre>, no attempt   will be made to undo any echoing of the character which might already   have been done on the stream. However, characters placed on the   stream by <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> will be marked in such as way as to inhibit   later re-echo by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>. <br/>  Ammend the description of <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> to say that when the stream is   an echo stream <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <a class="type-reference" href="../chapter-21.xhtml#type-stream">stream</a> <span class="syntax-interned-symbol">created</span> <span class="syntax-interned-symbol">by</span> <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a>)</span>
</span></code></pre>, characters   which are only peeked at are not echoed. Note however that in the   case that the PEEK-TYPE argument is not <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, the characters which   are passed by <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a> are treated as if by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>, and so are   echoed unless they have been marked otherwise by <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>. <br/>  Ammend the description of abstract input functions    <a class="function-reference" href="../chapter-23.xhtml#function-read-preserving-whitespace">read-preserving-whitespace</a> and <a class="function-reference" href="../chapter-23.xhtml#function-read-delimited-list">read-delimited-list</a> to acknowledge   that they are implicitly affected by these new echoing rules of    <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a>, <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>, and <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>. <br/>  Note: This is consistent with behavior [6] in the problem description. <br/>  Clarify that the echo behavior of interactive streams such as   <a class="variable-reference" href="../chapter-21.xhtml#variable-*terminal-io*">*terminal-io*</a> continues to be implementation dependent. <br/></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  Although this is not known to be in use in any particular system,   nothing prevents its use. It proposes a more rational interpretation   of the echoing behavior of <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a> which might make it possible   for programmers concerned about echo behavior not to have to shy   away from <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>. (It would probably also improve the behavior   of <a class="function-reference" href="../chapter-23.xhtml#function-read-preserving-whitespace">read-preserving-whitespace</a> with regard to echoing, since its   description mentions using <a class="function-reference" href="../chapter-21.xhtml#function-unread-char">unread-char</a>.) <br/>  Correct echoing behavior is important to programs which do batch   processing, parsing, etc. Allowing multiple or premature echoing   is clearly unsatisfactory. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  A wide variety of behaviors are in use. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Unknown. <br/>  The code to implement the proposed change itself is probably fairly   localized. <br/>  In some operating systems, there may be echoing constraints which   are overlooked here.  <br/>  In some cases, there may be second order effects in the system    itself which would also require a somewhat less predictable amount    of work to fix.  <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Any change is effectively upward compatible since the previous   behavior is so ill-specified. <br/>  Most users probably naively expect <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">perhaps</span> <span class="syntax-interned-symbol">even</span> <span class="syntax-interned-symbol">without</span> <span class="syntax-interned-symbol">realizing</span>
  <span class="syntax-interned-symbol">it</span> <span class="syntax-interned-symbol">explicitly</span>)</span>
</span></code></pre> that echoing will take care of itself. That is, they   probably expect that echoing will occur at the time of the   <a class="function-reference" href="../chapter-21.xhtml#function-read-char">read-char</a> and probably do not give a lot of thought to the effect   of <a class="function-reference" href="../chapter-21.xhtml#function-peek-char">peek-char</a>. As such, <a class="proposal-reference" href="#issue-peek-char-read-char-echo:first-read-char">FIRST-READ-CHAR</a> probably best supports most    of their naive intuitions. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  The streams returned by <a class="function-reference" href="../chapter-21.xhtml#function-make-echo-stream">make-echo-stream</a> would continue to be   significantly hard to use portably. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  A number of applications involving of parsers, batch script   interpreters, and such would be possible to implement   straightforwardly and portably. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  ? <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Pitman supports <a class="issue-reference" href="#issue-peek-char-read-char-echo:first-read-char">PEEK-CHAR-READ-CHAR-ECHO:FIRST-READ-CHAR</a> because   he feels it is more practically coherent. However, he says he has   only mental exercises and no actual personal experience upon which   to base that belief. <br/>  Version 1 of this proposal treated interactive streams on par   with echo streams, but while people agreed that this issue is   a severe portability problem, some considered that the treatment   of interactive streams got involved in operating system issues   that were beyond the scope of the standard, so that part of the   text was removed. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>