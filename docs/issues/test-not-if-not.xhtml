<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” TEST-NOT-IF-NOT</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">TEST-NOT-IF-NOT</span><br/><ol class="local-toc"><li><a href="#section-status">status</a><ol> </ol></li><li><a href="#section-Note">Note</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-test-not-if-not:flush-all">Proposal FLUSH-ALL</a><ol> <li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li></ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Performance impact">Performance impact</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue TEST-NOT-IF-NOT [Cleanup] [CHANGE]</h1><h2>Related issues</h2><ul><a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">FUNCTION-COMPOSITION</a></ul><section id="section-status" class="section"><h2 class="section-title">status</h2>Passed, as amended, Jan 89 X3J13 </section><section id="section-Note" class="section"><h2 class="section-title">Note</h2>some confusion in minutes as to whether <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> was added as part of <a class="issue-reference" href="#issue-test-not-if-not">test-not-if-not</a> or whether <a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">function-composition</a> was passed but with only <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> preserved. In any case: <a class="issue-reference" href="#issue-test-not-if-not:flush-all">TEST-NOT-IF-NOT:FLUSH-ALL</a> as stated here passed with "Remove" <a class="function-reference" href="../chapter-12.xhtml#function--">-</a>&gt; "Deprecate". See issue <a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">function-composition</a> for more details. </section><section id="section-References" class="section"><h2 class="section-title">References</h2>Functions offering a :TEST-NOT keyword: <a class="function-reference" href="../chapter-14.xhtml#function-adjoin">adjoin</a> (p276), <a class="function-reference" href="../chapter-14.xhtml#function-assoc">assoc</a> (p280), <a class="function-reference" href="../chapter-17.xhtml#function-count">count</a> (p257), <a class="function-reference" href="../chapter-17.xhtml#function-delete">delete</a> (p254), <a class="function-reference" href="../chapter-17.xhtml#function-delete-duplicates">delete-duplicates</a> (p254), <a class="function-reference" href="../chapter-17.xhtml#function-find">find</a> (p257), <a class="function-reference" href="../chapter-14.xhtml#function-intersection">intersection</a> (p277), <a class="function-reference" href="../chapter-14.xhtml#function-member">member</a> (p275), <a class="function-reference" href="../chapter-17.xhtml#function-mismatch">mismatch</a> (p257), <a class="function-reference" href="../chapter-14.xhtml#function-nintersection">nintersection</a> (p277), <a class="function-reference" href="../chapter-14.xhtml#function-nset-difference">nset-difference</a> (p278), <a class="function-reference" href="../chapter-14.xhtml#function-nset-exclusive-or">nset-exclusive-or</a> (p278), <a class="function-reference" href="../chapter-14.xhtml#function-nsublis">nsublis</a> (p275), <a class="function-reference" href="../chapter-14.xhtml#function-nsubst">nsubst</a> (p274), <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute">nsubstitute</a> (p256), <a class="function-reference" href="../chapter-14.xhtml#function-nunion">nunion</a> (p276), <a class="function-reference" href="../chapter-17.xhtml#function-position">position</a> (p257), <a class="function-reference" href="../chapter-14.xhtml#function-rassoc">rassoc</a> (p281), <a class="function-reference" href="../chapter-17.xhtml#function-remove">remove</a> (p253), <a class="function-reference" href="../chapter-17.xhtml#function-remove-duplicates">remove-duplicates</a> (p254), <a class="function-reference" href="../chapter-17.xhtml#function-search">search</a> (p258), <a class="function-reference" href="../chapter-14.xhtml#function-set-difference">set-difference</a> (p278),  <a class="function-reference" href="../chapter-14.xhtml#function-set-exclusive-or">set-exclusive-or</a> (p278), <a class="function-reference" href="../chapter-14.xhtml#function-sublis">sublis</a> (p274), <a class="function-reference" href="../chapter-14.xhtml#function-subsetp">subsetp</a> (p279), <a class="function-reference" href="../chapter-14.xhtml#function-subst">subst</a> (p273), <a class="function-reference" href="../chapter-17.xhtml#function-substitute">substitute</a> (p255), <a class="function-reference" href="../chapter-14.xhtml#function-tree-equal">tree-equal</a> (p264), <a class="function-reference" href="../chapter-14.xhtml#function-union">union</a> (p276); Functions with "-IF-NOT" in their name: <a class="function-reference" href="../chapter-14.xhtml#function-assoc-if-not">assoc-if-not</a> (p280), <a class="function-reference" href="../chapter-17.xhtml#function-count-if-not">count-if-not</a> (p257), <a class="function-reference" href="../chapter-17.xhtml#function-delete-if-not">delete-if-not</a> (p254), <a class="function-reference" href="../chapter-17.xhtml#function-find-if-not">find-if-not</a> (p257), <a class="function-reference" href="../chapter-14.xhtml#function-member-if-not">member-if-not</a> (p275), <a class="function-reference" href="../chapter-14.xhtml#function-nsubst-if-not">nsubst-if-not</a> (p274), <a class="function-reference" href="../chapter-17.xhtml#function-nsubstitute-if-not">nsubstitute-if-not</a> (p256), <a class="function-reference" href="../chapter-17.xhtml#function-position-if-not">position-if-not</a> (p257), <a class="function-reference" href="../chapter-14.xhtml#function-rassoc-if-not">rassoc-if-not</a> (p281), <a class="function-reference" href="../chapter-17.xhtml#function-remove-if-not">remove-if-not</a> (p253), <a class="function-reference" href="../chapter-14.xhtml#function-subst-if-not">subst-if-not</a> (p273), <a class="function-reference" href="../chapter-17.xhtml#function-substitute-if-not">substitute-if-not</a> (p255); </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>02-Oct-88, Version 1 by Pitman (just <a class="proposal-reference" href="#issue-test-not-if-not:flush-all">FLUSH-ALL</a>) 05-Oct-88, Version 2 by Pitman (add option FLUSH-TEST-NOT) 01-Dec-88, Version 3 by Masinter (add discussion) 18-Mar-89, Version 4 by Masinter (as amended) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  The -IF-NOT functions are functionally unnecessary. <br/>  The :TEST-NOT keywords are not only functionally unnecessary but   also problematic because it's not clear what to do when both :TEST   and :TEST-NOT are provided. <br/>  Many people think Common Lisp is more `bloated' than it needs   to be and these aspects of the language are commonly cited   specific examples. <br/></section><section class="status-passed proposal" id="issue-test-not-if-not:flush-all"><h2 class="section-title">Proposal FLUSH-ALL</h2>  Deprecate all -IF-NOT functions <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">named</span> <span class="syntax-interned-symbol">above</span>)</span>
</span></code></pre> from Common Lisp. <br/>  Deprecate the :TEST-NOT keyword from the Common Lisp functions which    currently provide them <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">named</span> <span class="syntax-interned-symbol">above</span>)</span>
</span></code></pre>. <br/><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>  This makes the language a bit simpler. <br/>  The removal of :TEST-NOT also makes the language easier to explain. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>  Very slight. <br/>  Some symbols would disappear from the <a class="package-reference" href="../chapter-A.xhtml#package-lisp">lisp</a> package but could   still be offered in proprietary packages if deemed important   enough. <br/>  Implementations could compatibly retain the :TEST-NOT keywords   for an interim period. <br/></section></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Presumably no one has done this yet. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  Some rewrites would be needed. <br/>  Those rewrites, which are already fairly simple, would be even   more simple if some form of the <a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">function-composition</a> issue is   voted in &ndash; in particular, the <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> function which it    proposes would help enormously in this regard. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Common Lisp would continue to be what some people feel is   "bigger than it needs to be". <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  The cost of non-adoption would be avoided. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  Presumably this makes the language easier to teach. <br/></section><section id="section-Performance impact" class="section"><h2 class="section-title">Performance impact</h2>  Very small; removing the :TEST-NOT keywords would   make the simple implementation of the functions that   used to have them slightly faster, but the resulting   code of the inner loop is likely to be much slower. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  Many people objected strongly to this proposals &ndash;   they might have been a nice idea five years ago, but are   gratuitous incompatibilities now: incompatible changes with   insufficient payback. <br/>  Some of those objections might be tempered if some additional   changes were made to Common Lisp: adding a <a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a>   function, or if there were a strategy to declare some parts of the   language "obsolete". Since these conditions haven't been done,   their objections stand. <br/>  Steele noted that one main reservation to <a class="proposal-reference" href="#issue-test-not-if-not:flush-all">FLUSH-ALL</a> is that   he uses <a class="function-reference" href="../chapter-17.xhtml#function-remove-if-not">remove-if-not</a> much more than <a class="function-reference" href="../chapter-17.xhtml#function-remove-if">remove-if</a>. <br/>  This issue is related to <a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">function-composition</a>, but is not   dependent on it.  Some support the combination of  <a class="proposal-reference" href="#issue-test-not-if-not:flush-all">FLUSH-ALL</a> and    the NEW-FUNCTIONS part of <a class="issue-reference" href="../issues/function-composition.xhtml#issue-function-composition">function-composition</a> in spite of   the incompatible change because of the aesthetic appeal. <br/>  Some people expressed their intention to vote for <a class="proposal-reference" href="#issue-test-not-if-not:flush-all">FLUSH-ALL</a>   only if <span class="issue-reference error">issue:FUNCTION-COMPOSITION:NEW-FUNCTIONS</span>. <br/>  It was noted that and   adding a #~ readmacro such that        <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-find-if-not">find-if-not</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-zerop">zerop</a></span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">0</span> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code></pre>    == <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-find-if">find-if</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-complement">complement</a> <span class="syntax-function">#'<a class="function-reference" href="../chapter-12.xhtml#function-zerop">zerop</a></span>)</span> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">0</span> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code></pre>    == <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-17.xhtml#function-find-if">find-if</a> <span class="syntax-comment">#~</span><a class="function-reference" href="../chapter-12.xhtml#function-zerop">zerop</a> <span class="syntax-quote">'<span class="syntax-cons">(<span class="syntax-number">0</span> <span class="syntax-number">0</span> <span class="syntax-number">3</span>)</span></span>)</span>
</span></code></pre> <br/>  The modification of these functions is moot for those who   prefer to use extended <a class="macro-reference" href="../chapter-6.xhtml#macro-loop">loop</a> macro/iteration constructs   in lieu of the sequence functions. <br/>  Several alternative names for <a class="function-reference" href="../chapter-17.xhtml#function-remove-if-not">remove-if-not</a> were   suggested: KEEP-IF, ABSTRACT, FILTER. We did not   pursue these suggestions. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>