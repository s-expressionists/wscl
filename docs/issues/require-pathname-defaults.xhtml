<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” REQUIRE-PATHNAME-DEFAULTS</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">REQUIRE-PATHNAME-DEFAULTS</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem description">Problem description</a><ol> </ol></li><li><a href="#issue-require-pathname-defaults:eliminate">Proposal ELIMINATE</a><ol> </ol></li><li><a href="#section-Test Cases/Examples">Test Cases/Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current practice">Current practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of non-Adoption">Cost of non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue REQUIRE-PATHNAME-DEFAULTS [NIL] [CHANGE]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>Passed, Jan 89 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="variable-reference" href="../chapter-24.xhtml#variable-*modules*">*modules*</a>, <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a>, <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a>, pp 188-191 <a class="function-reference" href="../chapter-24.xhtml#function-load">load</a>, pp 426-427 </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Version 1 by Pierson 9/13/88 Version 2 by Pierson 9/19/88, change <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> stuff per comments Version 3 by Pierson 10/17/88, remove <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> locaction specs. Version 4 by Pierson 10/31/88, remove from language Version 5 by Pierson 11/15/88, cleanup, fix discussion Version 6 by Pierson 12/9/88, remove <a class="variable-reference" href="../chapter-24.xhtml#variable-*modules*">*modules*</a> as well </section><section id="section-Problem description" class="section"><h2 class="section-title">Problem description</h2><a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> are a dual-purpose pair of functions that attempt to provide multi-file Common Lisp programs with a single mechanism to detect and correct incorrect load sequences.  These functions were also designed to be used for general file inclusion in Common Lisp. Unfortunately, the file loading feature of <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> is specified such that it is inherently non-portable and environment dependent. <br/></section><section class="status-passed proposal" id="issue-require-pathname-defaults:eliminate"><h2 class="section-title">Proposal ELIMINATE</h2>Remove <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a>, <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a>, and <a class="variable-reference" href="../chapter-24.xhtml#variable-*modules*">*modules*</a> from the Common Lisp standard. <br/></section><section id="section-Test Cases/Examples" class="section"><h2 class="section-title">Test Cases/Examples</h2><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">fft</span></span>)</span>
</span></code><br/><br/>Would not be Common Lisp.<br/><br/><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">fft</span></span>)</span>
</span></code><br/><br/>Would not be Common Lisp.<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>The file loading feature of <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> is non-portable.  The remaining functionality of <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> <code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">pushing</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">testing</span> <a class="variable-reference" href="../chapter-24.xhtml#variable-*modules*">*modules*</a>)</span>
</span></code> can easily be implemented by user code.  Since some implementations will retain the automatic module loading features of <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> and some won't, use of <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> will almost always make code less portable. <br/></section><section id="section-Current practice" class="section"><h2 class="section-title">Current practice</h2>All implementations currently support some sort of file loading via single-argument <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a>.  In general, the Lisp Machine implementations invoke the system module building/loading facility while the Unix implementations simply try to load a file in the current directory. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>Implementations will have to move <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> to their package for implementation extensions and change their documentation to indicate that <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> are non-standard.  This is a fairly small change. <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>Non-portable programs that rely on <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> will probably be unaffected since implementations will probably maintain their existing functionality.  Since the current behavior is decidedly non-portable, portable programs have to aviod or special-case <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> anyway. <br/></section><section id="section-Cost of non-Adoption" class="section"><h2 class="section-title">Cost of non-Adoption</h2><a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> will continue as impediments to portability. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>The non-portability of <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> will be made obvious. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>This simplifies the language by removing an environment-dependent feature.  <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>The cleanup committee tried to come up with a proposal to restrict <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> to the portable subset of their functionality. This failed because several implementors objected that it compelled them to significantly reduce the functionality they provided users in order to create a trivial feature which any user could easily write for herself. <br/>Fahlman, Gregor, Grey, Loosemore, Moon, Pierson, Pitman, Steele, and Zacharias have expressed support for removing <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> from the language, at least as the lesser of several evils. <br/>JonL would much rather see <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> remain in the language as a safety net behind any implementation-specific system building facility.  Pierson likes the safety net idea, but doesn't think it's workable without forbidding <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> from loading files. <br/>Pitman suggested that <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> should be depricated rather than removed entirely.  Pierson agrees, but notes that Larry wants us to deal with deprication versus elimination as a separate global topic. <br/>Several people have expressed a desire not to break existing user code.  If accepted, this proposal should not break existing code because all implementations are expected to retain their current <a class="function-reference" href="../chapter-24.xhtml#function-provide">provide</a> and <a class="function-reference" href="../chapter-24.xhtml#function-require">require</a> functionality as an extension to Common Lisp. </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>