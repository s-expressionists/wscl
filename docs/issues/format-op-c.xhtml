<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” FORMAT-OP-C</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">FORMAT-OP-C</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit History">Edit History</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-format-op-c:write-char">Proposal WRITE-CHAR</a><ol> </ol></li><li><a href="#section-Test Case">Test Case</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Adoption Cost">Adoption Cost</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Conversion Cost">Conversion Cost</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue FORMAT-OP-C [NIL] [CHANGE/CLARIFICATION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> (p384), ~C (p389) </section><section id="section-Edit History" class="section"><h2 class="section-title">Edit History</h2>23-Feb-87, Version 1 by Pitman 29-Apr-87, Versions 2,3 by Pitman 5-Jun-87, Version 4 by Masinter (copy-editing) 11-Jun-87, Version 5 release to X3J13 (remove confusing paragraph) </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>CLtL is not adequately specific about the function of the format operation ~C. The description on p389 says that "~C prints the character in an <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> abbreviated format. This format should be culturally compatible with the host environment." This description is not very useful in practice. <br/>Presumably the authors intended the `cultural compatibility' part to gloss issues like how the SAIL character set printed, but unfortunately another completely reasonable <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">albeit</span> <span class="syntax-interned-symbol">unplanned</span>)</span>
</span></code></pre> interpretation arose: some implementations have <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~C"</span> <span class="syntax-character">#\Space</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "Space" rather than " ". <br/>Since the behavior of ~A is also vague on characters <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">separate</span> <span class="syntax-interned-symbol">proposal</span> <span class="syntax-interned-symbol">will</span> <span class="syntax-interned-symbol">address</span> <span class="syntax-interned-symbol">this</span>)</span>
</span></code></pre>, the only way to safely output a literal character is to <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a>; currently, <a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> does not suffice. <br/></section><section class="status-unknown proposal" id="issue-format-op-c:write-char"><h2 class="section-title">Proposal WRITE-CHAR</h2>Change the behavior of ~C to say that, when given a character with zero bits, it will perform the same action as <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a>. (This proposal leaves the behavior of ~C with non-zero bits incompletely specified.) For example, the description of the ~C format directive on p389 of CLTL might read: <br/>  ~C prints the character using <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> if it has zero bits.   Characters with bits are not necessarily printed as <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a>   would do, but are displayed in an <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>   abbreviated format that is culturally compatible with the host   environment. <br/></section><section id="section-Test Case" class="section"><h2 class="section-title">Test Case</h2><pre><pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-equal">equal</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~C"</span> <span class="syntax-character">#\Space</span>)</span> <span class="syntax-string">" "</span>)</span>
</span></code></pre><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>This was probably the intent of the Common Lisp designers.  <br/>It makes things clear enough that programmers can know what to expect in the normal case <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="symbol-reference" href="../chapter-7.xhtml#symbol-standard">standard</a> <span class="syntax-interned-symbol">characters</span> <span class="syntax-interned-symbol">with</span> <span class="syntax-interned-symbol">zero</span> <span class="syntax-interned-symbol">bits</span>)</span>
</span></code></pre>. <br/>Users can use <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~:C"</span> <span class="syntax-character">#\Space</span>)</span>
</span></code></pre> to get "Space" if they want it. It seems as if the implementations which return "Space" treat ~C and ~:C equivalently or very similarly. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>Implementations are divided. Some implementations have      <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-22.xhtml#function-format">format</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <span class="syntax-string">"~C"</span> <span class="syntax-character">#\Space</span>)</span>
</span></code></pre> <a class="function-reference" href="../chapter-12.xhtml#function-=">=</a>&gt; "Space". Others have the same form return " ". <br/></section><section id="section-Adoption Cost" class="section"><h2 class="section-title">Adoption Cost</h2>Those implementations which did not already implement ~C as <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> would require an incompatible change. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>User code that uses ~C would have a chance of being portable. As things stand, users who use ~C can't reliably port their code. <br/>~C and ~:C would perform usefully distinct operations. <br/></section><section id="section-Conversion Cost" class="section"><h2 class="section-title">Conversion Cost</h2>Standard ``Query Replace'' technology for finding occurrences of "~C" and changing them to "~:C" semi-automatically should suffice. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>Making ~C do something well-defined will probably be perceived as a simplification. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>The cleanup committee generally supports this clarification. <br/>The original version of this proposal <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">which</span> <span class="syntax-interned-symbol">tried</span> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">make</span> <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> <a class="macro-reference" href="../chapter-5.xhtml#macro-and">and</a> <span class="syntax-interned-symbol">~C</span> <span class="syntax-interned-symbol">identical</span> <span class="syntax-interned-symbol">in</span> <span class="syntax-interned-symbol">all</span> <span class="syntax-interned-symbol">cases</span>)</span>
</span></code></pre> prompted the following comment: <br/>"I believe the error in CLtL is that it was not stated explicitly that the `<a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a> abbreviated format' applies only to characters with non-zero <a class="index/code-reference" href="../chapter-A.xhtml#index/code-char-bits">char-bits</a>. Thus instead of removing the mumbling about cultural compatibility, I suggest simply adding a sentence saying that ~C is the same as <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> for characters with zero <a class="index/code-reference" href="../chapter-A.xhtml#index/code-char-bits">char-bits</a>.  I don't think we want to require ~C and <a class="function-reference" href="../chapter-21.xhtml#function-write-char">write-char</a> to do the same thing for characters with bits." </section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>