<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp — DEFSTRUCT-DEFAULT-VALUE-EVALUATION</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">DEFSTRUCT-DEFAULT-VALUE-EVALUATION</span><br/><ol class="local-toc"><li><a href="#section-Status">Status</a><ol> </ol></li><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-defstruct-default-value-evaluation:iff-needed">Proposal IFF-NEEDED</a><ol> </ol></li><li><a href="#section-Test Case">Test Case</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue DEFSTRUCT-DEFAULT-VALUE-EVALUATION [NIL] [CLARIFICATION]</h1><section id="section-Status" class="status-passed section"><h2 class="section-title">Status</h2>passed, Oct 88 X3J13 </section><section id="section-References" class="section"><h2 class="section-title">References</h2>CLtL p.308-10 &amp; 86-003 p.4 </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>Revision 1 by Skona Brittain 05/13/88 <br/></section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>There is some confusion over whether default initialization forms for defstruct slots get evaluated, when they are not needed because a keyword argument was supplied to the constructor function. As a consequence of this confusion, there is confusion over whether there can be a type-mismatch error between the specified type of the slot and the type of the default value. <br/>On page 308, it says "The default-init is a form that is evaluated  each time a structure is to be constructed; the value is used as the  initial value of the slot.  If no default-init is specified, then the initial contents of the slot are undefined and <a class="glossary-reference" href="../chapter-26.xhtml#glossary-implementation-dependent">implementation-dependent</a>." <br/>On the next page, however, it says that the default-init is evaluated if the keyword argument is not supplied and the converse, although not stated, is intended and informally implied. <br/></section><section class="status-passed proposal" id="issue-defstruct-default-value-evaluation:iff-needed"><h2 class="section-title">Proposal IFF-NEEDED</h2>Clarify that the converse is true. i.e that the default-init is not evaluated  if the keyword argument is supplied. <br/>In the quote from page 308, delete the second sentence and replace  "a structure is to be constructed; the value is" by "its value is to be". <br/>To section 19.3, add a clarification, such as the following from Guy's issues file:        "The default value in a defstruct slot is not evaluated          unless it is needed in the creation of a particular structure         instance.  If it is never needed, there can be no type-mismatch         error, even if the type of the slot is specified, and no warning         should be issued." <br/></section><section id="section-Test Case" class="section"><h2 class="section-title">Test Case</h2><pre>In the following sequence, only the last call is an error.<br/><br/>        <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-8.xhtml#macro-defstruct">defstruct</a> <span class="syntax-interned-symbol">person</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">name</span> <span class="syntax-number">007</span> <span class="syntax-keyword-symbol">:type</span> <a class="function-reference" href="../chapter-16.xhtml#function-string">string</a>)</span>)</span>
</span></code></pre> <br/>        <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">make-person</span> <span class="syntax-keyword-symbol">:name</span> <span class="syntax-string">"James"</span>)</span>
</span></code></pre><br/>        <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">make-person</span>)</span>
</span></code></pre><br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>It is inefficient, and inconsistent with the rest of the language, for the  default initialization form to be evaluated when it is not needed. Consequently, when it's not needed, such type-mismatch errors should not be  detectable in general. <br/>Any existing confusion should be clarified by this proposal. <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>KCL does not evaluate the default initialization form unless it is needed; even when it is needed, the type checking is not done at all. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>If there are any implementations that currently behave differently from the proposed way, then they need some slight modification.   <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>None. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>Clarity and portability.  In particular, clarifying that the unaesthetic  situation mentioned in the next section is allowed should be reassuring. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>It appears slightly unaesthetic to have a default value that violates a  type specification.   <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>Although this issue was mentioned in Guy's original issues file, it has not been officially discussed since. <br/></section></div></main><footer>Copyright © 2021 Jan Moringen</footer></body></html>