<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1 plus MathML 2.0//EN"
  "http://www.w3.org/Math/DTD/mathml2/xhtml-math11-f.dtd"><html xmlns="http://www.w3.org/1999/xhtml"><head><meta charset="utf-8"/><link rel="stylesheet" type="text/css" href="../style.css"/><script src="../permalink.js"/><script src="../navigation.js"/><title>Well-specified Common Lisp â€” FUNCTION-DEFINITION</title></head><body><main><nav class="sidebar"><span class="name">Entry Points</span><br/><ol><li><a href="../chap-0.xhtml#section-Figures">Table of Contents</a></li><li><a href="../symbol-index.xhtml#section-SymbolIndex">Symbol Index</a></li><li><a href="../figure-index.xhtml#section-FigureIndex">Figure Index</a></li><li><a href="../issue-index.xhtml#section-IssueIndices">Issue Index</a></li><li><a href="../note-indices.xhtml#section-ReviewerNoteIndex">Note Indices</a></li><li><a href="../chapter-26.xhtml#section-Glossary">Glossary</a></li></ol><hr/><span class="name">FUNCTION-DEFINITION</span><br/><ol class="local-toc"><li><a href="#section-References">References</a><ol> </ol></li><li><a href="#section-Edit history">Edit history</a><ol> </ol></li><li><a href="#section-Problem Description">Problem Description</a><ol> </ol></li><li><a href="#issue-function-definition:jan89-x3j13">Proposal JAN89-X3J13</a><ol> </ol></li><li><a href="#section-Examples">Examples</a><ol> </ol></li><li><a href="#section-Rationale">Rationale</a><ol> </ol></li><li><a href="#section-Cost to Implementors">Cost to Implementors</a><ol> </ol></li><li><a href="#section-Current Practice">Current Practice</a><ol> </ol></li><li><a href="#section-Cost to Users">Cost to Users</a><ol> </ol></li><li><a href="#section-Cost of Non-Adoption">Cost of Non-Adoption</a><ol> </ol></li><li><a href="#section-Benefits">Benefits</a><ol> </ol></li><li><a href="#section-Aesthetics">Aesthetics</a><ol> </ol></li><li><a href="#section-Discussion">Discussion</a><ol> </ol></li></ol></nav><div class="content"><h1>X3J13 Issue FUNCTION-DEFINITION [NIL] [ADDITION]</h1><section id="section-References" class="section"><h2 class="section-title">References</h2><a class="issue-reference" href="../issues/function-type.xhtml#issue-function-type">X3J13 Issue FUNCTION-TYPE</a> </section><section id="section-Edit history" class="section"><h2 class="section-title">Edit history</h2>23-Jun-88, Version 1 by Pitman 09-Dec-88, Version 2 by GZ (change name, remove REQUIRED option, specify first value to be a lambda, add to discussion and current practice) 10-Feb-89, Version 3, as amended Jan 89 X3J13 </section><section id="section-Problem Description" class="section"><h2 class="section-title">Problem Description</h2>  There are portable ways to turn symbols and lists into functions,   but there are no portable ways to get back the original symbols and   lists given the functions. <br/>  In many cases, it used to be possible to recover the lambda expression   after a <a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> by using <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> or <a class="function-reference" href="../chapter-10.xhtml#function-symbol-function">symbol-function</a>, but the passage of   <a class="issue-reference" href="../issues/function-type.xhtml#issue-function-type">function-type</a> will make this no longer be the case. <br/></section><section class="status-unknown proposal" id="issue-function-definition:jan89-x3j13"><h2 class="section-title">Proposal JAN89-X3J13</h2>  Introduce a new function called <a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a>   which takes as its argument a function and returns three values:    #1: The function's defining lambda expression, or <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> if the information        is not available.  The lambda expression may have been pre-processed        in some ways, but it should remain a suitable argument to <a class="function-reference" href="../chapter-3.xhtml#function-compile">compile</a>        or <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>.    #2: <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> if the definition was enclosed in the null lexical        environment or something <a class="glossary-reference" href="../chapter-26.xhtml#glossary-non-nil">non-nil</a> if the definition might        have been enclosed in some non-null lexical environment.    #3: the `name' of this function. The name is intended for debugging        only and may be any lisp object &ndash; not necessarily one that would        be valid for use as a name in <a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> or <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>, for example.        By convention, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> is used to mean that the function had no name. <br/>  Implementations are free to always return <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, but are encouraged   to return the lambda expression in the case where the argument was created   by an in-core call to <a class="function-reference" href="../chapter-3.xhtml#function-compile">compile</a> or <a class="function-reference" href="../chapter-3.xhtml#function-eval">eval</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">as</span> <span class="syntax-interned-symbol">opposed</span> <span class="syntax-interned-symbol">to</span> <span class="syntax-interned-symbol">being</span> <span class="syntax-interned-symbol">created</span> <span class="syntax-interned-symbol">by</span>
  <span class="syntax-interned-symbol">loading</span> <span class="syntax-interned-symbol">a</span> <span class="syntax-interned-symbol">compiled</span> <span class="syntax-interned-symbol">file</span>)</span>
</span></code></pre>. <br/></section><section id="section-Examples" class="section"><h2 class="section-title">Examples</h2><pre>    The following examples illustrate some possible return values, but<br/>    are not intended to be exhaustive:<br/><br/>    #1:    <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span></span>)</span>
</span></code></pre><br/>	or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a>
		<span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-funcall">funcall</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-symbol">()</span> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span></span>)</span></span>)</span>)</span>
</span></code></pre><br/>	might return <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/><br/>    #2: <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a> 
		<span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-funcall">funcall</a> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-function">#'<span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-symbol">()</span> <span class="syntax-interned-symbol">X</span>)</span></span>)</span></span> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
</span></code></pre><br/>	might return <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-symbol">()</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>	   but -not<a class="function-reference" href="../chapter-12.xhtml#function--">-</a> <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-symbol">()</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/><br/>    #3: <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre><br/>	<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-setf">setf</a> <span class="syntax-cons">(<a class="function-reference" href="../chapter-10.xhtml#function-symbol-function">symbol-function</a> <span class="syntax-quote">'<span class="syntax-interned-symbol">BAR</span></span>)</span> <span class="syntax-function">#'<span class="syntax-interned-symbol">FOO</span></span>)</span>
</span></code></pre><br/>	<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a> <span class="syntax-function">#'<span class="syntax-interned-symbol">BAR</span></span>)</span>
</span></code></pre><br/>	might return <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-block">block</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-block">block</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">foo</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-two-package-markers syntax-interned-symbol">SI::BLOCK-LAMBDA</span> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">foo</a><br/><br/>    #4: <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-symbol">()</span>
	  <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-flet">flet</a> <span class="syntax-cons">(<span class="syntax-cons">(<span class="syntax-interned-symbol">BAR</span> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
	    <span class="syntax-function">#'<span class="syntax-interned-symbol">BAR</span></span>)</span>)</span>
</span></code></pre><br/>	<pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">FOO</span>)</span>)</span>
</span></code></pre><br/>	might return <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-block">block</a> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-block">block</a> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a>, <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-keyword-symbol">:INTERNAL</span> <span class="syntax-interned-symbol">FOO</span> <span class="syntax-number">0</span> <span class="syntax-interned-symbol">BAR</span>)</span>
</span></code></pre><br/>		  or <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-3.xhtml#macro-lambda">lambda</a> <span class="syntax-cons">(<span class="syntax-interned-symbol">X</span>)</span> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-block">block</a> <span class="syntax-interned-symbol">BAR</span> <span class="syntax-interned-symbol">X</span>)</span>)</span>
</span></code></pre>, <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>, "<a class="index/code-reference" href="../chapter-1.xhtml#index/code-bar">bar</a> in <a class="index/code-reference" href="../chapter-1.xhtml#index/code-foo">foo</a>"<br/><br/></pre></section><section id="section-Rationale" class="section"><h2 class="section-title">Rationale</h2>    This functionality would be useful to a pretty printer, debugger,     inspector, and other tools. <br/></section><section id="section-Cost to Implementors" class="section"><h2 class="section-title">Cost to Implementors</h2>    The following implementation is technically legitimate, although many     implementations would want to provide something more useful: <br/>     <pre><code><span class="syntax-root"><span class="syntax-cons">(<a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a> <span class="syntax-cons">(<a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>)</span>
       <span class="syntax-cons">(<a class="macro-reference" href="../chapter-9.xhtml#macro-check-type">check-type</a> <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a>)</span>
       <span class="syntax-cons">(<a class="function-reference" href="../chapter-5.xhtml#function-values">values</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a> <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> <a class="section-reference" href="../chapter-1.xhtml#section-NIL">NIL</a>)</span>)</span>
</span></code></pre> <br/></section><section id="section-Current Practice" class="section"><h2 class="section-title">Current Practice</h2>  Many implementations record this information, but not all that do   publish an interface to extracting the information.  VAXLISP and   Lucid call it SOURCE-CODE.  Coral calls it UNCOMPILE-FUNCTION.   The language <a class="section-reference" href="../chapter-26.xhtml#section-T">T</a> has this operation and calls it DISCLOSE. It is the   conceptual inverse of the ENCLOSE which occurs in some Scheme dialects,   and is implemented as what CLOS would call a "generic function". <br/></section><section id="section-Cost to Users" class="section"><h2 class="section-title">Cost to Users</h2>  None. The change is upward compatible. <br/></section><section id="section-Cost of Non-Adoption" class="section"><h2 class="section-title">Cost of Non-Adoption</h2>  Certain kinds of portable debugging tools would be harder to write. <br/></section><section id="section-Benefits" class="section"><h2 class="section-title">Benefits</h2>  The cost of non-adoption would be avoided. <br/></section><section id="section-Aesthetics" class="section"><h2 class="section-title">Aesthetics</h2>  The phrase ``program is data; data is program'' comes up a lot in discussions   about Lisp. This makes the case for ``program is data'' more interesting. <br/></section><section id="section-Discussion" class="section"><h2 class="section-title">Discussion</h2>  The initial name proposed for this function was <a class="issue-reference" href="#issue-function-definition">function-definition</a>.  This   was changed because of technical uses of the term ``definition'' to refer   to the entire defining form <pre><code><span class="syntax-root"><span class="syntax-cons">(<span class="syntax-interned-symbol">e.g.</span> <span class="syntax-interned-symbol">a</span> <a class="macro-reference" href="../chapter-5.xhtml#macro-defun">defun</a> <span class="syntax-interned-symbol">form</span>)</span>
</span></code></pre> rather than the lambda   expression that might be recovered from it. <br/>  The possibility of _requiring_ the lambda expression to be available for   all functions created by in-core calls to <a class="function-reference" href="../chapter-3.xhtml#function-compile">compile</a> or <a class="special-operator-reference" href="../chapter-5.xhtml#special-operator-function">function</a> was considered   but didn't receive much support.  Pitman would prefer that option because   it is considerably more useful in practice, but would like to see at least   the current proposal. <br/>  Jan 89 X3J13 amended the proposal of Version 2 to change the name   from FUNCTION-SOURCE to <a class="function-reference" href="../chapter-5.xhtml#function-function-lambda-expression">function-lambda-expression</a>. <br/></section></div></main><footer>Copyright Â© 2021 Jan Moringen</footer></body></html>