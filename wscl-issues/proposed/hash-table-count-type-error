Issue:          HASH-TABLE-COUNT-TYPE-ERROR
Forum:          Cleanup
Category:       CLARIFICATION
Status:         proposed
Edit History:   20-Jul-21, Version 1 by Robert Strandh.
                18-Sep-21, Version 2 by Tarn W. Burton (update current practice)
References:     HASH-TABLE-COUNT

Problem Description:

  In the draft ANSI Common Lisp specification, the description of the
  function HASH-TABLE-COUNT indicates no exceptional situations.  The
  section "Arguments and Values" mentions that the hash-table argument
  must be a hash table, which by default means that the consequences
  are undefined if an object that is not of type HASH-TABLE is given.

Proposal (HASH-TABLE-COUNT-TYPE-ERROR:SIGNAL-ERROR-IN-SAFE-CODE):

  This proposal changes the description of the HASH-TABLE-COUNT
  function, so that the section "Exceptional Situations" instead
  reads:

  "The function HASH-TABLE-COUNT should signal an error of type
  TYPE-ERROR if the hash-table argument is not a hash table."

Test Cases:

  (defun one (object)
    (declare (optimize (safety 3)))
    (hash-table-count object))

  (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

Rationale:

  We think it was a simple omission from the draft ANSI specification
  to indicate no exceptional situations.  The fact that the function
  HASH-TABLE-SIZE mentions such an error situation seems to support
  this idea.

Current Practice:

  ABCL 1.8.1-dev-fasl43
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  ACL 10.1
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  CCL 1.12-f98
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  CLASP cclasp-boehmprecise-0.4.2-4619-g23bf6aa3d-cst
    (one 234) => [signals TYPE-ERROR with expected type
                   CORE:HASH-TABLE-BASE]

  CLISP 2.49.93+
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  CMU 2019-05-27 16:42:54 (21D Unicode)
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  ECL 21.2.1-e68e6827
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  LWPE 7.1.2
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

  SBCL 2.1.7
    (one 234) => [signals TYPE-ERROR with expected type HASH-TABLE]

Cost to Implementors:

  Very small.  We believe that most implementations are already
  signaling an error in safe code.  Some implementations may signal a
  simple error, and those implementation would need to signal a
  TYPE-ERROR instead.

Cost to Users:

  None.

Cost of non-adoption:

  Application programmers may need to add explicit checks to be
  certain that their code is conforming.

Benefits:

  Application programmers may rely on an error being
  signaled in safe code, and thus avoid having to
  add explicit checks in portable code.

Aesthetics:

  No influence.

Discussion:

  TODO
